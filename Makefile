.DEFAULT_GOAL=build

################################################################################
# Meta
################################################################################
reset:
		git reset --hard
		git clean -f -d

################################################################################
# Code generation
################################################################################
generate:
	go generate -x . ./proxy
	./stamp.sh
	./embed.sh
	@echo "Generate complete: `date`"

################################################################################
# Hygiene checks
################################################################################

GO_SOURCE_FILES := find . -type f -name '*.go' \
	! -path './vendor/*' \

install_requirements:
	go get -u golang.org/x/tools/cmd/goimports
	go get -u github.com/fzipp/gocyclo
	go get -u honnef.co/go/tools/cmd/staticcheck
	go get -u github.com/golang/lint

.PHONY: vet
vet:
	for file in $(shell $(GO_SOURCE_FILES)); do \
		go tool vet "$${file}" || exit 1 ;\
	done

.PHONY: lint
lint:
	for file in $(shell $(GO_SOURCE_FILES)); do \
		golint "$${file}" || exit 1 ;\
	done

.PHONY: fmt
fmt: install_requirements
	$(GO_SOURCE_FILES) -exec goimports -w {} \;

.PHONY: fmtcheck
fmtcheck:install_requirements
	@ export output="$$($(GO_SOURCE_FILES) -exec goimports -d {} \;)"; \
		test -z "$${output}" || (echo "$${output}" && exit 1)

.PHONY: analyze
analyze: install_requirements
	staticcheck .

.PHONY: validate
validate: vet lint fmtcheck analyze

docs:
	@echo ""
	@echo "Sparta godocs: http://localhost:8090/pkg/github.com/mweagle/Sparta"
	@echo
	godoc -v -http=:8090 -index=true

################################################################################
# Travis
################################################################################
travis-depends:
	go get -u -v github.com/golang/dep/...
	dep ensure
	go get -u -v golang.org/x/tools/cmd/goimports
	rm -rf $(GOPATH)/src/github.com/mjibson/esc
	git clone --depth=1 https://github.com/mjibson/esc $(GOPATH)/src/github.com/mjibson/esc
	rm -rf $(GOPATH)/src/github.com/fzipp/gocyclo
	git clone --depth=1 https://github.com/fzipp/gocyclo $(GOPATH)/src/github.com/fzipp/gocyclo
	# Move everything in the ./vendor directory to the $(GOPATH)/src directory
	rsync -a --quiet --remove-source-files ./vendor/ $(GOPATH)/src

.PHONY: travis-ci-test
travis-ci-test: travis-depends test build
	go test -v .
	go test -v ./aws/...

################################################################################
# Sparta commands
################################################################################
provision: build
	go run ./applications/hello_world.go --level info provision --s3Bucket $(S3_BUCKET)

execute: build
	./sparta execute

describe: build
	rm -rf ./graph.html
	go test -v -run TestDescribe

################################################################################
# ALM commands
################################################################################
.PHONY: clean
clean:
	go clean .
	go env

.PHONY: test
test: build
	go test -v .
	go test -v ./aws/...

.PHONY: build
build: validate
	go build .
	@echo "Build complete"

.PHONY: publish
publish:
	$(info Checking Git tree status)
	git diff --exit-code
	$(MAKE) generate
	git commit -a -m "Publishing latest autogenerated updates"
	git push origin