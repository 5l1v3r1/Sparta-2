[
{
	"uri": "/reference/eventsources/",
	"title": "Event Sources",
	"tags": [],
	"description": "",
	"content": " The true power of the AWS Lambda architecture is the ability to integrate Lambda execution with other AWS service state transitions. Depending on the service type, state change events are either pushed or transparently polled and used as the input to a Lambda execution.\nThere are several event sources available. They are grouped into Pull and Push types. Pull based models use sparta.EventSourceMapping values, as the trigger configuration is stored in the AWS Lambda service. Push based types use service specific sparta.*Permission types to denote the fact that the trigger logic is configured in the remote service.\nPull Based  DynamoDB Kinesis SQS  Push Based  CloudFormation NOT YET IMPLEMENTED CloudWatch Events CloudWatch Logs Cognito NOT YET IMPLEMENTED S3 SES SNS  "
},
{
	"uri": "/reference/archetypes/",
	"title": "Archetype Constructors",
	"tags": [],
	"description": "",
	"content": "TODO - document the archetype constructor functions.\n"
},
{
	"uri": "/reference/decorators/cloudfront_distribution/",
	"title": "CloudFront Distribution",
	"tags": [],
	"description": "",
	"content": "The CloudFrontDistributionDecorator associates a CloudFront Distribution with your S3-backed website. It is implemented as a ServiceDecoratorHookHandler as a single service can only provision one CloudFront distribution.\nSample usage:\n//////////////////////////////////////////////////////////////////////////////// // CloudFront settings const subdomain = \u0026quot;mySiteSubdomain\u0026quot; // The domain managed by Route53. const domainName = \u0026quot;myRoute53ManagedDomain.net\u0026quot; // The site will be available at // https://mySiteSubdomain.myRoute53ManagedDomain.net // The S3 bucketname must match the subdomain.domain // name pattern to serve as a CloudFront Distribution target var bucketName = fmt.Sprintf(\u0026quot;%s.%s\u0026quot;, subdomain, domainName) func distroHooks(s3Site *sparta.S3Site) *sparta.WorkflowHooks { // Commented out demonstration of how to front the site // with a CloudFront distribution. // Note that provisioning a distribution will incur additional // costs hooks := \u0026amp;sparta.WorkflowHooks{} siteHookDecorator := spartaDecorators.CloudFrontSiteDistributionDecorator(s3Site, subdomain, domainName, gocf.String(os.Getenv(\u0026quot;SPARTA_ACM_CLOUDFRONT_ARN\u0026quot;))) hooks.ServiceDecorators = []sparta.ServiceDecoratorHookHandler{ siteHookDecorator, } return hooks }  "
},
{
	"uri": "/reference/decorators/cloudwatch_alarm/",
	"title": "CloudWatch Alarm",
	"tags": [],
	"description": "",
	"content": "The CloudWatchErrorAlarmDecorator associates a CloudWatch alarm and destination with your Lambda function.\nSample usage:\nlambdaFn := sparta.HandleAWSLambda(\u0026quot;Hello World\u0026quot;, helloWorld, sparta.IAMRoleDefinition{}) lambdaFn.Decorators = []sparta.TemplateDecoratorHandler{ spartaDecorators.CloudWatchErrorAlarmDecorator(1, 1, 1, gocf.String(\u0026quot;MY_SNS_ARN\u0026quot;)), }  "
},
{
	"uri": "/reference/decorators/dashboard/",
	"title": "CloudWatch Dashboard",
	"tags": [],
	"description": "",
	"content": "The DashboardDecorator creates a CloudWatch Dashboard that produces a single CloudWatch Dashboard to summarize your stack\u0026rsquo;s behavior.\nSample usage:\nfunc workflowHooks(connections *service.Connections, lambdaFunctions []*sparta.LambdaAWSInfo, websiteURL *gocf.StringExpr) *sparta.WorkflowHooks { // Setup the DashboardDecorator lambda hook workflowHooks := \u0026amp;sparta.WorkflowHooks{ ServiceDecorators: []sparta.ServiceDecoratorHookHandler{ spartaDecorators.DashboardDecorator(lambdaFunctions, 60), serviceResourceDecorator(connections, websiteURL), }, } return workflowHooks }  A sample dashboard for the SpartaGeekwire project is:\nRelated to this, see the recently announced AWS Lambda Application Dashboard.\n"
},
{
	"uri": "/reference/decorators/codedeployserviceupdate/",
	"title": "CodeDeploy Service Update",
	"tags": [],
	"description": "",
	"content": "TODO: Document me\n"
},
{
	"uri": "/reference/decorators/",
	"title": "Decorators",
	"tags": [],
	"description": "",
	"content": "Sparta uses decorators to annotate the CloudFormation template with additional functionality.\nDecorators at different phases in the provisioning workflow. The following set of decorators are available.\n"
},
{
	"uri": "/reference/decorators/lambda_versioning/",
	"title": "Lambda Versioning Decorator",
	"tags": [],
	"description": "",
	"content": "TODO: LambdaVersioningDecorator\n"
},
{
	"uri": "/overview/",
	"title": "Overview",
	"tags": [],
	"description": "Sparta overview",
	"content": " This is a brief overview of Sparta\u0026rsquo;s core concepts. Additional information regarding specific features is available from the menu.\nTerms and Concepts At a high level, Sparta transforms a go binary\u0026rsquo;s registered lambda functions into a set of independently addressable AWS Lambda functions . Additionally, Sparta provides microservice authors an opportunity to satisfy other requirements such as defining the IAM Roles under which their function will execute in AWS, additional infrastructure requirements, and telemetry and alerting information (via CloudWatch).\nThe table below summarizes some of the primary Sparta terminology.\n  Service Name Sparta applications are deployed as a single unit, using the ServiceName as a stable logical identifier. The ServiceName is used as your application\u0026rsquo;s CloudFormation StackName go stackName := \u0026quot;MyUniqueServiceName\u0026quot; sparta.Main(stackName, \u0026quot;Simple Sparta application\u0026quot;, myLambdaFunctions, nil, nil)      Sparta Lambda Function A Sparta-compatible lambda is a standard AWS Lambda Go function. The following function signatures are supported:\n func () func () error func (TIn), error func () (TOut, error) func (context.Context) error func (context.Context, TIn) error func (context.Context) (TOut, error) func (context.Context, TIn) (TOut, error) \nwhere the TIn and TOut parameters represent encoding/json un/marshallable types. Supplying an invalid signature will produce a run time error as in:\nERRO[0000] Lambda function (Hello World) has invalid returns: handler returns a single value, but it does not implement error exit status 1 ``` \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- Row 3 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;h2\u0026gt;Privileges\u0026lt;/h2\u0026gt; To support accessing other AWS resources in your \u0026lt;b\u0026gt;go\u0026lt;/b\u0026gt; function, Sparta allows you to define and link \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html\u0026#34;\u0026gt;IAM Roles\u0026lt;/a\u0026gt; with tightly defined \u0026lt;a href=\u0026#34;https://godoc.org/github.com/mweagle/Sparta#IAMRolePrivilege\u0026#34;\u0026gt;\u0026lt;code\u0026gt;sparta.IAMRolePrivilege\u0026lt;/code\u0026gt;\u0026lt;/a\u0026gt; values. This allows you to define the \u0026lt;i\u0026gt;minimal\u0026lt;/i\u0026gt; set of privileges under which your \u0026lt;b\u0026gt;go\u0026lt;/b\u0026gt; function will execute. The \u0026lt;code\u0026gt;Privilege.Resource\u0026lt;/code\u0026gt; field value may also be a \u0026lt;a href=\u0026#34;https://godoc.org/github.com/crewjam/go-cloudformation#StringExpr\u0026#34;\u0026gt;StringExpression\u0026lt;/a\u0026gt; referencing a CloudFormation dynamically provisioned entity.\u0026lt;/h5\u0026gt; ```go lambdaFn.RoleDefinition.Privileges = append(lambdaFn.RoleDefinition.Privileges, sparta.IAMRolePrivilege{ Actions: []string{\u0026#34;s3:GetObject\u0026#34;, \u0026#34;s3:HeadObject\u0026#34;}, Resource: \u0026#34;arn:aws:s3:::MyS3Bucket\u0026#34;, }) ``` \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- Row 4 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;h2\u0026gt;Permissions\u0026lt;/h2\u0026gt; To configure AWS Lambda \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/lambda/latest/dg/intro-core-components.html\u0026#34;\u0026gt;Event Sources\u0026lt;/a\u0026gt;, Sparta provides both \u0026lt;a href=\u0026#34;https://godoc.org/github.com/mweagle/Sparta#LambdaPermission\u0026#34;\u0026gt;\u0026lt;code\u0026gt;sparta.LambdaPermission\u0026lt;/code\u0026gt;\u0026lt;/a\u0026gt; and service-specific \u0026lt;i\u0026gt;Permission\u0026lt;/i\u0026gt; types; eg: \u0026lt;a href=\u0026#34;https://godoc.org/github.com/mweagle/Sparta#CloudWatchEventsPermission\u0026#34;\u0026gt;\u0026lt;code\u0026gt;sparta.CloudWatchEventsPermission\u0026lt;/code\u0026gt;\u0026lt;/a\u0026gt;. The service-specific \u0026lt;i\u0026gt;Permission\u0026lt;/i\u0026gt; types automatically register your lambda function with the remote AWS service, using each service\u0026#39;s specific API.\u0026lt;/h5\u0026gt; ```go cloudWatchEventsPermission := sparta.CloudWatchEventsPermission{} cloudWatchEventsPermission.Rules = make(map[string]sparta.CloudWatchEventsRule, 0) cloudWatchEventsPermission.Rules[\u0026#34;Rate5Mins\u0026#34;] = sparta.CloudWatchEventsRule{ ScheduleExpression: \u0026#34;rate(5 minutes)\u0026#34;, } lambdaFn.Permissions = append(lambdaFn.Permissions, cloudWatchEventsPermission) ``` \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- Row 5 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;h2\u0026gt;Dynamic Resources\u0026lt;/h2\u0026gt; Sparta applications can specify other \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\u0026#34;\u0026gt;AWS Resources\u0026lt;/a\u0026gt; (eg, \u0026lt;i\u0026gt;SNS Topics\u0026lt;/i\u0026gt;) as part of their application. The dynamic resource outputs can be referenced by Sparta lambda functions via \u0026lt;code\u0026gt;gocf.Ref\u0026lt;/code\u0026gt; and \u0026lt;code\u0026gt;gocf.GetAtt\u0026lt;/code\u0026gt; functions.\u0026lt;/h5\u0026gt; ```go snsTopicName := sparta.CloudFormationResourceName(\u0026#34;SNSDynamicTopic\u0026#34;) snsTopic := \u0026amp;gocf.SNSTopic{ DisplayName: gocf.String(\u0026#34;Sparta Application SNS topic\u0026#34;), }) lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoDynamicSNSEvent), echoDynamicSNSEvent, sparta.IAMRoleDefinition{}) lambdaFn.Permissions = append(lambdaFn.Permissions, sparta.SNSPermission{ BasePermission: sparta.BasePermission{ SourceArn: gocf.Ref(snsTopicName), }, }) ``` \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- Row 6 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;h2\u0026gt;Discovery\u0026lt;/h2\u0026gt; To support Sparta lambda functions discovering dynamically assigned AWS values (eg, \u0026lt;i\u0026gt;S3 Bucket Names\u0026lt;/i\u0026gt;), Sparta provides \u0026lt;code\u0026gt;sparta.Discover\u0026lt;/code\u0026gt;. \u0026lt;/h5\u0026gt; ```go func echoS3DynamicBucketEvent(ctx context.Context, s3Event awsLambdaEvents.S3Event) (*awsLambdaEvents.S3Event, error) { discoveryInfo, discoveryInfoErr := sparta.Discover() logger.WithFields(logrus.Fields{ \u0026#34;Event\u0026#34;: s3Event, \u0026#34;Discovery\u0026#34;: discoveryInfo, \u0026#34;DiscoveryErr\u0026#34;: discoveryInfoErr, }).Info(\u0026#34;Event received\u0026#34;) // Use discoveryInfo to determine the bucket name to which RawMessage should be stored ... } ``` \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; Given a set of registered Sparta lambda function, a typical `provision` build to create a new service follows this workflow. Items with dashed borders are opt-in user behaviors. \u0026lt;link href=\u0026#34;/mermaid/mermaid.css\u0026#34; type=\u0026#34;text/css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;/\u0026gt; \u0026lt;script defer src=\u0026#34;/mermaid/mermaid.js\u0026#34;\u0026gt;mermaid.initialize({startOnLoad:true});\u0026lt;/script\u0026gt; \u0026lt;div class=\u0026#34;mermaid\u0026#34; \u0026gt; graph TD classDef stdOp fill:#FFF,stroke:#A00,stroke-width:2px; classDef userHook fill:#B5B2A1,stroke:#A00,stroke-width:2px,stroke-dasharray: 5, 5; iam[Verify Static IAM Roles] class iam stdOp; preBuild[WorkflowHook - PreBuild] class preBuild userHook; compile[Cross Compile for AWS AMI] postBuild[WorkflowHook - PostBuild] class postBuild userHook; package[ZIP archive] class package stdOp; userArchive[WorkflowHook - Archive] class userArchive userHook; upload[Upload Archive to S3] packageAssets[Conditionally ZIP S3 Site Assets] uploadAssets[Upload S3 Assets] class upload,packageAssets,uploadAssets stdOp; preMarshall[WorkflowHook - PreMarshall] class preMarshall userHook; generate[Marshal to CloudFormation] class generate stdOp; decorate[Call Lambda Decorators - Dynamic AWS Resources] class decorate stdOp; serviceDecorator[Service Decorator] class serviceDecorator userHook; postMarshall[WorkflowHook - PostMarshall] class postMarshall stdOp; uploadTemplate[Upload Template to S3] updateStack[Create/Update Stack] inplaceUpdates[In-place λ code updates] wait[Wait for Complete/Failure Result] class uploadTemplate,updateStack,inplaceUpdates,wait stdOp; iam--\u0026gt;preBuild preBuild--\u0026gt;|go|compile compile--\u0026gt;postBuild postBuild--\u0026gt;package package--\u0026gt;packageAssets package--\u0026gt;userArchive userArchive--\u0026gt;upload packageAssets--\u0026gt;uploadAssets uploadAssets--\u0026gt;generate upload--\u0026gt;generate generate--\u0026gt;preMarshall preMarshall--\u0026gt;decorate decorate--\u0026gt;serviceDecorator serviceDecorator--\u0026gt;postMarshall postMarshall--\u0026gt;uploadTemplate uploadTemplate--\u0026gt;|standard|updateStack uploadTemplate--\u0026gt;|inplace|inplaceUpdates updateStack--\u0026gt;wait \u0026lt;/div\u0026gt; \u0026lt;h6\u0026gt;This diagram is rendered with \u0026lt;a href=\u0026#34;https://github.com/knsv/mermaid\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;Mermaid\u0026lt;/a\u0026gt;. Please open an \u0026lt;a href=\u0026#34;https://github.com/mweagle/Sparta/issues/new\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;issue\u0026lt;/a\u0026gt; if it doesn\u0026#39;t render properly.\u0026lt;/h6\u0026gt; \u0026lt;hr /\u0026gt; During provisioning, Sparta uses [AWS Lambda-backed Custom Resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html) to support operations for which CloudFormation doesn\u0026#39;t yet support (eg, [API Gateway](https://aws.amazon.com/api-gateway/) creation). # Next Steps Walk through a starting [Sparta Application](/sample_service/). "
},
{
	"uri": "/reference/decorators/publish_outputs/",
	"title": "Publishing Outputs",
	"tags": [],
	"description": "",
	"content": " CloudFormation stack outputs can be used to advertise information about a service.\nSparta provides different publishing output decorators depending on the type of CloudFormation resource output:\n Ref: PublishRefOutputDecorator Fn::Att: PublishAttOutputDecorator  Publishing Resource Ref Values For example, to publish the dynamically lambda resource name for a given AWS Lambda function, use PublishRefOutputDecorator such as:\nlambdaFunctionName := \u0026quot;Hello World\u0026quot; lambdaFn := sparta.HandleAWSLambda(lambdaFunctionName, helloWorld, sparta.IAMRoleDefinition{}) lambdaFn.Decorators = append(lambdaFn.Decorators, spartaDecorators.PublishRefOutputDecorator(fmt.Sprintf(\u0026quot;%s FunctionName\u0026quot;, lambdaFunctionName), fmt.Sprintf(\u0026quot;%s Lambda ARN\u0026quot;, lambdaFunctionName))) }  Publishing Resource Att Values For example, to publish the dynamically determined ARN for a given AWS Lambda function, use PublishAttOutputDecorator such as:\nlambdaFunctionName := \u0026quot;Hello World\u0026quot; lambdaFn := sparta.HandleAWSLambda(lambdaFunctionName, helloWorld, sparta.IAMRoleDefinition{}) lambdaFn.Decorators = append(lambdaFn.Decorators, spartaDecorators.PublishAttOutputDecorator(fmt.Sprintf(\u0026quot;%s FunctionARN\u0026quot;, lambdaFunctionName), fmt.Sprintf(\u0026quot;%s Lambda ARN\u0026quot;, lambdaFunctionName), \u0026quot;Arn\u0026quot;)) }  "
},
{
	"uri": "/reference/decorators/s3_artifact_publisher/",
	"title": "S3 Artifact Publisher",
	"tags": [],
	"description": "",
	"content": "The S3ArtifactPublisherDecorator enables a service to publish objects to S3 locations as part of the service lifecycle.\nThis decorator is implemented as a ServiceDecoratorHookHandler which is supplied to MainEx. For example:\nhooks := \u0026amp;sparta.WorkflowHooks{} payloadData := map[string]interface{}{ \u0026quot;SomeValue\u0026quot;: gocf.Ref(\u0026quot;AWS::StackName\u0026quot;), } serviceHook := spartaDecorators.S3ArtifactPublisherDecorator(gocf.String(\u0026quot;MY-S3-BUCKETNAME\u0026quot;), gocf.Join(\u0026quot;\u0026quot;, gocf.String(\u0026quot;metadata/\u0026quot;), gocf.Ref(\u0026quot;AWS::StackName\u0026quot;), gocf.String(\u0026quot;.json\u0026quot;)), payloadData) hooks.ServiceDecorators = []sparta.ServiceDecoratorHookHandler{serviceHook}  "
},
{
	"uri": "/sample_service/step1/",
	"title": "Overview",
	"tags": [],
	"description": "",
	"content": " Sparta is a framework for developing and deploying go based AWS Lambda-backed microservices. To help understand what that means we\u0026rsquo;ll begin with a \u0026ldquo;Hello World\u0026rdquo; lambda function and eventually deploy that to AWS. Note that we\u0026rsquo;re not going to handle all error cases to keep the example code to a minimum.\nPlease be aware that running Lambda functions may incur costs. Be sure to decommission Sparta stacks after you are finished using them (via the delete command line option) to avoid unwanted charges. It\u0026rsquo;s likely that you\u0026rsquo;ll be well under the free tier, but secondary AWS resources provisioned during development (eg, Kinesis streams) are not pay-per-invocation.\n Preconditions Sparta uses the AWS SDK for Go to interact with AWS APIs. Before you get started, ensure that you\u0026rsquo;ve properly configured the SDK credentials.\nNote that you must use an AWS region that supports Lambda. Consult the Global Infrastructure page for the most up to date release information.\nLambda Definition The first place to start is with the lambda function definition.\n// Standard AWS λ function func helloWorld(ctx context.Context) (string, error) { return \u0026quot;Hello World!\u0026quot;, nil }  The ctx parameter includes the following entries:\n The AWS LambdaContext A *logrus.Logger instance (sparta.ContextKeyLogger) A per-request annotated *logrus.Entry instance (sparta.ContextKeyRequestLogger)  Creation The next step is to create a Sparta-wrapped version of the helloWorld function.\nvar lambdaFunctions []*sparta.LambdaAWSInfo helloWorldFn := sparta.HandleAWSLambda(\u0026quot;Hello World\u0026quot;, helloWorld, sparta.IAMRoleDefinition{})  We first declare an empty slice lambdaFunctions to which all our service\u0026rsquo;s lambda functions will be appended. The next step is to register a new lambda target via HandleAWSLambda. HandleAWSLambda accepts three parameters:\n string: The function name. A sanitized version of this value is used as the FunctionName. func(...): The go function to execute. string|IAMRoleDefinition : Either a string literal that refers to a pre-existing IAM Role under which the lambda function will be executed, OR a sparta.IAMRoleDefinition value that will be provisioned as part of this deployment and used as the execution role for the lambda function.  In this example, we\u0026rsquo;re defining a new IAMRoleDefinition as part of the stack. This role definition will automatically include privileges for actions such as CloudWatch logging, and since our function doesn\u0026rsquo;t access any additional AWS services that\u0026rsquo;s all we need.   Delegation The final step is to define a Sparta service under your application\u0026rsquo;s main package and provide the non-empty slice of lambda functions:\nsparta.Main(\u0026quot;MyHelloWorldStack\u0026quot;, \u0026quot;Simple Sparta application that demonstrates core functionality\u0026quot;, lambdaFunctions, nil, nil)  sparta.Main accepts five parameters:\n serviceName : The string to use as the CloudFormation stackName. Note that there can be only a single stack with this name within a given AWS account, region pair.  The serviceName is used as the stable identifier to determine when updates should be applied rather than new stacks provisioned, as well as the target of a delete command line request. Consider using UserScopedStackName to generate unique, stable names across a team.  serviceDescription: An optional string used to describe the stack. []*LambdaAWSInfo : Slice of sparta.lambdaAWSInfo that define a service *API : Optional pointer to data if you would like to provision and associate an API Gateway with the set of lambda functions.  We\u0026rsquo;ll walk through how to do that in another section, but for now our lambda function will only be accessible via the AWS SDK or Console.  *S3Site : Optional pointer to data if you would like to provision an static website on S3, initialized with local resources.  We\u0026rsquo;ll walk through how to do that in another section, but for now our lambda function will only be accessible via the AWS SDK or Console.   Delegating main() to Sparta.Main() transforms the set of lambda functions into a standalone executable with several command line options. Run go run main.go --help to see the available options.\nPutting It Together Putting everything together, and including the necessary imports, we have:\n// File: main.go package main import ( \u0026quot;context\u0026quot; sparta \u0026quot;github.com/mweagle/Sparta\u0026quot; ) // Standard AWS λ function func helloWorld(ctx context.Context) (string, error) { return \u0026quot;Hello World!\u0026quot;, nil } func main() { var lambdaFunctions []*sparta.LambdaAWSInfo helloWorldFn := sparta.HandleAWSLambda(\u0026quot;Hello World\u0026quot;, helloWorld, sparta.IAMRoleDefinition{}) lambdaFunctions = append(lambdaFunctions, helloWorldFn) sparta.Main(\u0026quot;MyHelloWorldStack\u0026quot;, \u0026quot;Simple Sparta application that demonstrates core functionality\u0026quot;, lambdaFunctions, nil, nil) }  Running It Next download the Sparta dependencies via:\n go get ./... go get github.com/zcalusic/sysinfo  in the directory that you saved main.go. Once the packages are downloaded, first get a view of what\u0026rsquo;s going on by the describe command (replacing $S3_BUCKET with an S3 bucket you own):\nThe sysinfo package is used at Lambda execution time only. However, it must be locally available in order to succesfully cross compile your AWS Lambda binary. See the GitHub issue for more information.\n $ go run main.go --level info describe --out ./graph.html --s3Bucket $S3_BUCKET INFO[0000] ════════════════════════════════════════════════ INFO[0000] ╔═╗┌─┐┌─┐┬─┐┌┬┐┌─┐ Version : 1.0.2 INFO[0000] ╚═╗├─┘├─┤├┬┘ │ ├─┤ SHA : b37b93e INFO[0000] ╚═╝┴ ┴ ┴┴└─ ┴ ┴ ┴ Go : go1.9.2 INFO[0000] ════════════════════════════════════════════════ INFO[0000] Service: MyHelloWorldStack LinkFlags= Option=describe UTC=\u0026#34;2018-01-27T21:54:16Z\u0026#34; INFO[0000] ════════════════════════════════════════════════ INFO[0000] Provisioning service BuildID=N/A CodePipelineTrigger= InPlaceUpdates=false NOOP=true Tags= INFO[0000] Verifying IAM Lambda execution roles INFO[0000] IAM roles verified Count=1 INFO[0000] Skipping S3 preconditions check due to -n/-noop flag Bucket=weagle Region=us-west-2 VersioningEnabled=false INFO[0000] Running `go generate` INFO[0000] Compiling binary Name=Sparta.lambda.amd64 INFO[0009] Creating code ZIP archive for upload TempName=./.sparta/MyHelloWorldStack-code.zip INFO[0009] Lambda code archive size Size=\u0026#34;12 MB\u0026#34; INFO[0009] Skipping S3 upload due to -n/-noop flag Bucket=weagle File=MyHelloWorldStack-code.zip Key=MyHelloWorldStack/MyHelloWorldStack-code-710836d403083ac46999f02d2f1cfe69e270207c.zip Size=\u0026#34;12 MB\u0026#34; INFO[0009] Skipping Stack creation due to -n/-noop flag Bucket=weagle TemplateName=MyHelloWorldStack-cftemplate.json INFO[0009] ════════════════════════════════════════════════ INFO[0009] MyHelloWorldStack Summary INFO[0009] ════════════════════════════════════════════════ INFO[0009] Verifying IAM roles Duration (s)=0 INFO[0009] Verifying AWS preconditions Duration (s)=0 INFO[0009] Creating code bundle Duration (s)=10 INFO[0009] Uploading code Duration (s)=0 INFO[0009] Ensuring CloudFormation stack Duration (s)=0 INFO[0009] Total elapsed time Duration (s)=10 ``` Then open _graph.html_ in your browser (also linked [here](/images/overview/graph.html) ) to see what will be provisioned. Since everything looks good, we\u0026#39;ll provision the stack via `provision` and verify the lambda function. Note that the `$S3_BUCKET` value must be an S3 bucket to which you have write access since Sparta uploads the lambda package and CloudFormation template to that bucket as part of provisioning. \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-nohighlight\u0026#34; data-lang=\u0026#34;nohighlight\u0026#34;\u0026gt;$ go run main.go provision --s3Bucket $S3_BUCKET INFO[0000] ════════════════════════════════════════════════ INFO[0000] ╔═╗┌─┐┌─┐┬─┐┌┬┐┌─┐ Version : 1.0.2 INFO[0000] ╚═╗├─┘├─┤├┬┘ │ ├─┤ SHA : b37b93e INFO[0000] ╚═╝┴ ┴ ┴┴└─ ┴ ┴ ┴ Go : go1.9.2 INFO[0000] ════════════════════════════════════════════════ INFO[0000] Service: MyHelloWorldStack LinkFlags= Option=provision UTC=\u0026amp;#34;2018-01-27T21:56:27Z\u0026amp;#34; INFO[0000] ════════════════════════════════════════════════ INFO[0000] Provisioning service BuildID=c4e21df1b7a1f2d82d396561db1aa168574f7a22 CodePipelineTrigger= InPlaceUpdates=false NOOP=false Tags= INFO[0000] Verifying IAM Lambda execution roles INFO[0000] IAM roles verified Count=1 INFO[0000] Checking S3 versioning Bucket=weagle VersioningEnabled=true INFO[0000] Checking S3 region Bucket=weagle Region=us-west-2 INFO[0000] Running `go generate` INFO[0000] Compiling binary Name=Sparta.lambda.amd64 INFO[0010] Creating code ZIP archive for upload TempName=./.sparta/MyHelloWorldStack-code.zip INFO[0010] Lambda code archive size Size=\u0026amp;#34;12 MB\u0026amp;#34; INFO[0010] Uploading local file to S3 Bucket=weagle Key=MyHelloWorldStack/MyHelloWorldStack-code.zip Path=./.sparta/MyHelloWorldStack-code.zip Size=\u0026amp;#34;12 MB\u0026amp;#34; INFO[0019] Uploading local file to S3 Bucket=weagle Key=MyHelloWorldStack/MyHelloWorldStack-cftemplate.json Path=./.sparta/MyHelloWorldStack-cftemplate.json Size=\u0026amp;#34;2.3 kB\u0026amp;#34; INFO[0020] Creating stack StackID=\u0026amp;#34;arn:aws:cloudformation:us-west-2:123412341234:stack/MyHelloWorldStack/f87007f0-03ac-11e8-a93f-50d5ca789e1e\u0026amp;#34; INFO[0049] CloudFormation provisioning metrics: INFO[0049] Operation duration Duration=24.77s Resource=MyHelloWorldStack Type=\u0026amp;#34;AWS::CloudFormation::Stack\u0026amp;#34; INFO[0049] Operation duration Duration=16.43s Resource=IAMRole254383dffcf02e393981e3b2731226f97b1d212b Type=\u0026amp;#34;AWS::IAM::Role\u0026amp;#34; INFO[0049] Operation duration Duration=1.73s Resource=HelloWorldLambda7d01d27fe422d278bcc652b4a989528718eb88af Type=\u0026amp;#34;AWS::Lambda::Function\u0026amp;#34; INFO[0049] Stack provisioned CreationTime=\u0026amp;#34;2018-01-27 21:56:47.268 +0000 UTC\u0026amp;#34; StackId=\u0026amp;#34;arn:aws:cloudformation:us-west-2:123412341234:stack/MyHelloWorldStack/f87007f0-03ac-11e8-a93f-50d5ca789e1e\u0026amp;#34; StackName=MyHelloWorldStack INFO[0049] ════════════════════════════════════════════════ INFO[0049] MyHelloWorldStack Summary INFO[0049] ════════════════════════════════════════════════ INFO[0049] Verifying IAM roles Duration (s)=0 INFO[0049] Verifying AWS preconditions Duration (s)=0 INFO[0049] Creating code bundle Duration (s)=10 INFO[0049] Uploading code Duration (s)=9 INFO[0049] Ensuring CloudFormation stack Duration (s)=30 INFO[0049] Total elapsed time Duration (s)=49 ``` Once the stack has been provisioned (`CREATE_COMPLETE`), login to the AWS console and navigate to the Lambda section. # Testing Find your Lambda function in the list of AWS Lambda functions and click the hyperlink. The display name will be prefixed by the name of your stack (_MyHelloWorldStack_ in our example): ![AWS Lambda List](/images/overview/AWS_Lambda_List.png) On the Lambda details page, click the *Test* button: ![AWS Lambda Test](/images/overview/AWS_Lambda_Test.png) Accept the and name the _Hello World_ event template sample (our Lambda function doesn\u0026amp;#39;t consume the event data) and click *Save and test*. The execution result pane should display something similar to: ![AWS Lambda Execution](/images/overview/AWS_Lambda_Execution.png) # Cleaning Up To prevent unauthorized usage and potential charges, make sure to `delete` your stack before moving on: \u0026amp;lt;div class=\u0026amp;#34;highlight\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;pre style=\u0026amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;code class=\u0026amp;#34;language-nohighlight\u0026amp;#34; data-lang=\u0026amp;#34;nohighlight\u0026amp;#34;\u0026amp;gt;$ go run main.go delete INFO[0000] ════════════════════════════════════════════════ INFO[0000] ╔═╗┌─┐┌─┐┬─┐┌┬┐┌─┐ Version : 1.0.2 INFO[0000] ╚═╗├─┘├─┤├┬┘ │ ├─┤ SHA : b37b93e INFO[0000] ╚═╝┴ ┴ ┴┴└─ ┴ ┴ ┴ Go : go1.9.2 INFO[0000] ════════════════════════════════════════════════ INFO[0000] Service: MyHelloWorldStack LinkFlags= Option=delete UTC=\u0026amp;amp;#34;2018-01-27T22:01:59Z\u0026amp;amp;#34; INFO[0000] ════════════════════════════════════════════════ INFO[0000] Stack existence check Exists=true Name=MyHelloWorldStack INFO[0000] Delete request submitted Response=\u0026amp;amp;#34;{\\n\\n}\u0026amp;amp;#34; ``` # Conclusion Congratulations! You\u0026amp;amp;#39;ve just deployed your first \u0026amp;amp;#34;serverless\u0026amp;amp;#34; service. The following sections will dive deeper into what\u0026amp;amp;#39;s going on under the hood as well as how to integrate your lambda function(s) into the broader AWS landscape. # Next Steps Walkthrough what Sparta actually does to deploy your application in the [next section](/reference/intro_example/step2/).\u0026amp;lt;/code\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/apigateway/",
	"title": "API Gateway",
	"tags": [],
	"description": "",
	"content": " Examples One of the most powerful ways to use AWS Lambda is to make function publicly available over HTTPS. This is accomplished by connecting the AWS Lambda function with the API Gateway. In this section we\u0026rsquo;ll start with a simple \u0026ldquo;echo\u0026rdquo; example and move on to a lambda function that accepts user parameters and returns an expiring S3 URL.\n Example 1 - Echo Event Example 2 - User Input \u0026amp; JSON Response Example 3 - Request Context Example 4 - Slack SlashCommand Example 5 - CORS  Concepts Before moving on to the examples, it\u0026rsquo;s suggested you familiarize yourself with the API Gateway concepts.\n Gettting Started with Amazon API Gateway  The API Gateway presents a powerful and complex domain model. In brief, to integrate with the API Gateway, a service must:\n Define one or more AWS Lambda functions Create an API Gateway REST API instance Create one or more resources associated with the REST API Create one or more methods for each resource For each method:  Define the method request params Define the integration request mapping Define the integration response mapping Define the method response mapping  Create a stage for a REST API Deploy the given stage  See a the echo example for a complete version.\nAPI Gateway Request Types AWS Lambda supports multiple function signatures. Some supported signatures include structured types, which are JSON un/marshalable structs that are automatically managed.\nTo simplify handling API Gateway requests, Sparta exposes the APIGatewayEnvelope type. This type provides an embeddable struct type whose fields and JSON serialization match up with the Velocity Template that\u0026rsquo;s applied to the incoming API Gateway request.\nTo use the APIGatewayEnvelope type with your own custom request body, create a set of types as in:\ntype FeedbackBody struct { Language string `json:\u0026quot;lang\u0026quot;` Comment string `json:\u0026quot;comment\u0026quot;` } type FeedbackRequest struct { spartaEvents.APIGatewayEnvelope Body FeedbackBody `json:\u0026quot;body\u0026quot;` }  Then reference your custom type in your lambda function as in:\nfunc myLambdaFunction(ctx context.Context, apiGatewayRequest FeedbackRequest) (map[string]string, error) { language := apiGatewayRequest.Body.Language ... }  Custom HTTP Headers API Gateway supports returning custom HTTP headers whose values are extracted from your response payload.\nAssume your Sparta lambda function returns a JSON struct as in:\n// API response struct type helloWorldResponse struct { Location string `json:\u0026quot;location\u0026quot;` Message string `json:\u0026quot;message\u0026quot;` }  To extract the location field and promote it to the HTTP Location header, you must configure the response data mappings:\n// // Promote the location key value to an HTTP header // lambdaFn := sparta.HandleAWSLambda( sparta.LambdaName(helloWorldResponseFunc), helloWorldResponseFunc, sparta.IAMRoleDefinition{}) apiGatewayResource, _ := api.NewResource(\u0026quot;/hello\u0026quot;, lambdaFn) apiGWMethod, _ := apiGatewayResource.NewMethod(\u0026quot;GET\u0026quot;, http.StatusOK) apiGWMethod.Responses[http.StatusOK].Parameters = map[string]bool{ \u0026quot;method.response.header.Location\u0026quot;: true, } apiGWMethod.Integration.Responses[http.StatusOK].Parameters[\u0026quot;method.response.header.Location\u0026quot;] = \u0026quot;integration.response.body.location\u0026quot;  Note that as the helloWorldResponse structured type is serialized to the body property of the response, we include that path selector in the integration.response.body.location value.\nSee the related AWS Forum thread.\nOther Resources  Walkthrough: API Gateway and Lambda Functions  "
},
{
	"uri": "/reference/application/",
	"title": "Application Customization",
	"tags": [],
	"description": "",
	"content": " Customization Options Sparta-based applications use the Cobra package to expose a rich set of command line options. This section describes:\n Default options Adding flags Adding commands Managing Environments Workflow Hooks  Adding custom flags or commands is typically a prerequisite to supporting alternative topologies.\n"
},
{
	"uri": "/reference/cicd/",
	"title": "CI/CD",
	"tags": [],
	"description": "",
	"content": " TODO\n CI/CD with Sparta Document the SpartaCodePipeline example. Also see the Medium Post\n"
},
{
	"uri": "/reference/eventsources/cloudformation/",
	"title": "CloudFormation",
	"tags": [],
	"description": "",
	"content": "TODO: CloudFormation source documentation\n "
},
{
	"uri": "/reference/custom_lambda_resources/",
	"title": "CloudFormation Resources",
	"tags": [],
	"description": "",
	"content": " Introduction In addition to per-lambda custom resources, a service may benefit from the ability to include a service-scoped Lambda backed CustomResource.\nIncluding a custom service scoped resource is a multi-step process. The code excerpts below are from the SpartaCustomResource sample application.\n1. Resource Type The first step is to define a custom CloudFormation Resource Type\n//////////////////////////////////////////////////////////////////////////////// // 1 - Define the custom type const spartaHelloWorldResourceType = \u0026quot;Custom::sparta::HelloWorldResource\u0026quot;  2. Request Parameters The next step is to define the parameters that are supplied to the custom resource invocation. This is done via a struct that will be later embedded into the CustomResourceCommand.\n// SpartaCustomResourceRequest is what the UserProperties // should be set to in the CustomResource invocation type SpartaCustomResourceRequest struct { Message *gocf.StringExpr }  3. Command Handler With the parameters defined, define the CustomResourceCommand that is responsible for performing the external operations based on the specified request parameters.\n// SpartaHelloWorldResource is a simple POC showing how to create custom resources type SpartaHelloWorldResource struct { gocf.CloudFormationCustomResource SpartaCustomResourceRequest } // Create implements resource create func (command SpartaHelloWorldResource) Create(awsSession *session.Session, event *spartaAWSResource.CloudFormationLambdaEvent, logger *logrus.Logger) (map[string]interface{}, error) { requestPropsErr := json.Unmarshal(event.ResourceProperties, \u0026amp;command) if requestPropsErr != nil { return nil, requestPropsErr } logger.Info(\u0026quot;create: \u0026quot;, command.Message.Literal) return map[string]interface{}{ \u0026quot;Resource\u0026quot;: \u0026quot;Created message: \u0026quot; + command.Message.Literal, }, nil } // Update implements resource update func (command SpartaHelloWorldResource) Update(awsSession *session.Session, event *spartaAWSResource.CloudFormationLambdaEvent, logger *logrus.Logger) (map[string]interface{}, error) { return \u0026quot;\u0026quot;, nil } // Delete implements resource delete func (command SpartaHelloWorldResource) Delete(awsSession *session.Session, event *spartaAWSResource.CloudFormationLambdaEvent, logger *logrus.Logger) (map[string]interface{}, error) { return \u0026quot;\u0026quot;, nil }  4. Register Type Provider To make the new type available to Sparta\u0026rsquo;s internal CloudFormation template marshalling, register the new type via go-cloudformation.RegisterCustomResourceProvider:\nfunc init() { customResourceFactory := func(resourceType string) gocf.ResourceProperties { switch resourceType { case spartaHelloWorldResourceType: return \u0026amp;SpartaHelloWorldResource{} } return nil } gocf.RegisterCustomResourceProvider(customResourceFactory) }  5. Annotate Template The final step is to ensure the custom resource command is included in the Sparta binary that defines your service and then create an invocation of that command. The annotation is expressed as a ServiceDecoratorHookHandler that performs both operations as part of the general service build lifecycle\u0026hellip;\nfunc customResourceHooks() *sparta.WorkflowHooks { // Add the custom resource decorator customResourceDecorator := func(context map[string]interface{}, serviceName string, template *gocf.Template, S3Bucket string, S3Key string, buildID string, awsSession *session.Session, noop bool, logger *logrus.Logger) error { // 1. Ensure the Lambda Function is registered customResourceName, customResourceNameErr := sparta.EnsureCustomResourceHandler(serviceName, spartaHelloWorldResourceType, nil, // This custom action doesn't need to access other AWS resources []string{}, template, S3Bucket, S3Key, logger) if customResourceNameErr != nil { return customResourceNameErr } // 2. Create the request for the invocation of the lambda resource with // parameters spartaCustomResource := \u0026amp;SpartaHelloWorldResource{} spartaCustomResource.ServiceToken = gocf.GetAtt(customResourceName, \u0026quot;Arn\u0026quot;) spartaCustomResource.Message = gocf.String(\u0026quot;Custom resource activated!\u0026quot;) resourceInvokerName := sparta.CloudFormationResourceName(\u0026quot;SpartaCustomResource\u0026quot;, fmt.Sprintf(\u0026quot;%v\u0026quot;, S3Bucket), fmt.Sprintf(\u0026quot;%v\u0026quot;, S3Key)) // Add it template.AddResource(resourceInvokerName, spartaCustomResource) return nil } // Add the decorator to the template hooks := \u0026amp;sparta.WorkflowHooks{} hooks.ServiceDecorators = []sparta.ServiceDecoratorHookHandler{ sparta.ServiceDecoratorHookFunc(customResourceDecorator), } return hooks }  Provide the hooks structure to MainEx to include this custom resource with your service\u0026rsquo;s provisioning lifecycle.\n"
},
{
	"uri": "/reference/eventsources/cloudwatchevents/",
	"title": "CloudWatch Events",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to different types of CloudWatch Events. This overview is based on the SpartaApplication sample code if you\u0026rsquo;d rather jump to the end result.\nGoal Assume that we\u0026rsquo;re supposed to write a simple \u0026ldquo;HelloWorld\u0026rdquo; CloudWatch event function that has two requirements:\n Run every 5 minutes to provide a heartbeat notification to our alerting system via a logfile entry Log EC2-related events for later processing  Getting Started The lambda function is relatively small:\nfunc echoCloudWatchEvent(ctx context.Context, event map[string]interface{}) (map[string]interface{}, error) { logger, _ := ctx.Value(sparta.ContextKeyRequestLogger).(*logrus.Entry) logger.WithFields(logrus.Fields{ \u0026quot;Event\u0026quot;: event, }).Info(\u0026quot;Request received\u0026quot;) return event, nil }  Our lambda function doesn\u0026rsquo;t need to do much with the event other than log and return it.\nSparta Integration With echoCloudWatchEvent() implemented, the next step is to integrate the go function with Sparta. This is done by the appendCloudWatchEventHandler in the SpartaApplication application.go source.\nOur lambda function only needs logfile write privileges, and since these are enabled by default, we can use an empty sparta.IAMRoleDefinition value:\nfunc appendCloudWatchEventHandler(api *sparta.API, lambdaFunctions []*sparta.LambdaAWSInfo) []*sparta.LambdaAWSInfo { lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoCloudWatchEvent), echoCloudWatchEvent, sparta.IAMRoleDefinition{})  The next step is to add a CloudWatchEventsPermission value that includes the two rule triggers.\ncloudWatchEventsPermission := sparta.CloudWatchEventsPermission{} cloudWatchEventsPermission.Rules = make(map[string]sparta.CloudWatchEventsRule, 0)  Our two rules will be inserted into the Rules map in the next steps.\nCron Expression Our first requirement is that the lambda function write a heartbeat to the logfile every 5 mins. This can be configured by adding a scheduled event:\ncloudWatchEventsPermission.Rules[\u0026quot;Rate5Mins\u0026quot;] = sparta.CloudWatchEventsRule{ ScheduleExpression: \u0026quot;rate(5 minutes)\u0026quot;, }  The ScheduleExpression value can either be a rate or a cron expression. The map keyname is used when adding the rule during stack provisioning.\nEvent Pattern The other requirement is that our lambda function be notified when matching EC2 events are created. To support this, we\u0026rsquo;ll add a second Rule:\ncloudWatchEventsPermission.Rules[\u0026quot;EC2Activity\u0026quot;] = sparta.CloudWatchEventsRule{ EventPattern: map[string]interface{}{ \u0026quot;source\u0026quot;: []string{\u0026quot;aws.ec2\u0026quot;}, \u0026quot;detail-type\u0026quot;: []string{\u0026quot;EC2 Instance State-change Notification\u0026quot;}, }, }  The EC2 event pattern is the go JSON-compatible representation of the event pattern that CloudWatch Events will use to trigger our lambda function. This structured value will be marshaled to a String during CloudFormation Template marshaling.\nSparta does NOT attempt to validate either ScheduleExpression or EventPattern values prior to calling CloudFormation. Syntax errors in either value will be detected during provisioning when the Sparta CloudFormation CustomResource calls putRule to add the lambda target. This error will cause the CloudFormation operation to fail. Any API errors will be logged \u0026amp; are viewable in the CloudFormation Logs Console.\n Add Permission With the two rules configured, the final step is to add the sparta.CloudWatchPermission to our sparta.LambdaAWSInfo value:\nlambdaFn.Permissions = append(lambdaFn.Permissions, cloudWatchEventsPermission) return append(lambdaFunctions, lambdaFn)  Our entire function is therefore:\nfunc appendCloudWatchEventHandler(api *sparta.API, lambdaFunctions []*sparta.LambdaAWSInfo) []*sparta.LambdaAWSInfo { lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoCloudWatchEvent), echoCloudWatchEvent, sparta.IAMRoleDefinition{}) cloudWatchEventsPermission := sparta.CloudWatchEventsPermission{} cloudWatchEventsPermission.Rules = make(map[string]sparta.CloudWatchEventsRule, 0) cloudWatchEventsPermission.Rules[\u0026quot;Rate5Mins\u0026quot;] = sparta.CloudWatchEventsRule{ ScheduleExpression: \u0026quot;rate(5 minutes)\u0026quot;, } cloudWatchEventsPermission.Rules[\u0026quot;EC2Activity\u0026quot;] = sparta.CloudWatchEventsRule{ EventPattern: map[string]interface{}{ \u0026quot;source\u0026quot;: []string{\u0026quot;aws.ec2\u0026quot;}, \u0026quot;detail-type\u0026quot;: []string{\u0026quot;EC2 Instance state change\u0026quot;}, }, } lambdaFn.Permissions = append(lambdaFn.Permissions, cloudWatchEventsPermission) return append(lambdaFunctions, lambdaFn) }  Wrapping Up With the lambdaFn fully defined, we can provide it to sparta.Main() and deploy our service. The workflow below is shared by all CloudWatch Events-triggered lambda functions:\n Define the lambda function (echoCloudWatchEvent). If needed, create the required IAMRoleDefinition with appropriate privileges. Provide the lambda function \u0026amp; IAMRoleDefinition to sparta.HandleAWSLambda() Create a CloudWatchEventsPermission value. Add one or more CloudWatchEventsRules to the CloudWatchEventsPermission.Rules map that define your lambda function\u0026rsquo;s trigger condition:  Scheduled Events Event Patterns  Append the CloudWatchEventsPermission value to the lambda function\u0026rsquo;s Permissions slice. Include the reference in the call to sparta.Main().  Other Resources  Introduction to CloudWatch Events Tim Bray\u0026rsquo;s Cloud Eventing writeup Run an AWS Lambda Function on a Schedule Using the AWS CLI The EC2 event pattern is drawn from the AWS Events \u0026amp; Event Patterns documentation  "
},
{
	"uri": "/reference/eventsources/cloudwatchlogs/",
	"title": "CloudWatch Logs",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to CloudWatch Logs. This overview is based on the SpartaApplication sample code if you\u0026rsquo;d rather jump to the end result.\nGoal Assume that we\u0026rsquo;re supposed to write a simple \u0026ldquo;HelloWorld\u0026rdquo; CloudWatch Logs function that should be triggered in response to any log message issued to a specific Log Group.\nGetting Started Our lambda function is relatively short:\nimport ( awsLambdaEvents \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; ) func echoCloudWatchLogsEvent(ctx context.Context, cwlEvent awsLambdaEvents.CloudwatchLogsEvent) (*awsLambdaEvents.CloudwatchLogsEvent, error) { logger, _ := ctx.Value(sparta.ContextKeyRequestLogger).(*logrus.Entry) logger.WithFields(logrus.Fields{ \u0026quot;Event\u0026quot;: cwlEvent, }).Info(\u0026quot;Request received\u0026quot;) return \u0026amp;cwlEvent, nil }  Our lambda function doesn\u0026rsquo;t need to do much with the log message other than log and return it.\nSparta Integration With echoCloudWatchLogsEvent() implemented, the next step is to integrate the go function with Sparta. This is done by the appendCloudWatchLogsLambda in the SpartaApplication application.go source.\nOur lambda function only needs logfile write privileges, and since these are enabled by default, we can use an empty sparta.IAMRoleDefinition value:\nfunc appendCloudWatchLogsHandler(api *sparta.API, lambdaFunctions []*sparta.LambdaAWSInfo) []*sparta.LambdaAWSInfo { lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoCloudWatchLogsEvent), echoCloudWatchLogsEvent, sparta.IAMRoleDefinition{})  The next step is to add a CloudWatchLogsSubscriptionFilter value that represents the CloudWatch Lambda subscription filter information.\ncloudWatchLogsPermission := sparta.CloudWatchLogsPermission{} cloudWatchLogsPermission.Filters = make(map[string]sparta.CloudWatchLogsSubscriptionFilter, 1) cloudWatchLogsPermission.Filters[\u0026quot;MyFilter\u0026quot;] = sparta.CloudWatchLogsSubscriptionFilter{ LogGroupName: \u0026quot;/aws/lambda/versions\u0026quot;, }  The sparta.CloudWatchLogsPermission struct provides fields for both the LogGroupName and optional Filter expression (not shown here) to use when calling putSubscriptionFilter.\n# Add Permission\nWith the subscription information configured, the final step is to add the sparta.CloudWatchLogsPermission to our sparta.LambdaAWSInfo value:\nlambdaFn.Permissions = append(lambdaFn.Permissions, cloudWatchLogsPermission)  Our entire function is therefore:\nfunc appendCloudWatchLogsHandler(api *sparta.API, lambdaFunctions []*sparta.LambdaAWSInfo) []*sparta.LambdaAWSInfo { lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoCloudWatchLogsEvent), echoCloudWatchLogsEvent, sparta.IAMRoleDefinition{}) cloudWatchLogsPermission := sparta.CloudWatchLogsPermission{} cloudWatchLogsPermission.Filters = make(map[string]sparta.CloudWatchLogsSubscriptionFilter, 1) cloudWatchLogsPermission.Filters[\u0026#34;MyFilter\u0026#34;] = sparta.CloudWatchLogsSubscriptionFilter{ FilterPattern: \u0026#34;\u0026#34;, // NOTE: This LogGroupName MUST already exist in your account, otherwise \t// the `provision` step will fail. You can create a LogGroupName in the \t// AWS Console \tLogGroupName: \u0026#34;/aws/lambda/versions\u0026#34;, } lambdaFn.Permissions = append(lambdaFn.Permissions, cloudWatchLogsPermission) return append(lambdaFunctions, lambdaFn) } ``` # Wrapping Up With the `lambdaFn` fully defined, we can provide it to `sparta.Main()` and deploy our service. The workflow below is shared by all CloudWatch Logs-triggered lambda functions: * Define the lambda function (`echoCloudWatchLogsEvent`). * If needed, create the required [IAMRoleDefinition](https://godoc.org/github.com/mweagle/Sparta*IAMRoleDefinition) with appropriate privileges. * Provide the lambda function \u0026amp; IAMRoleDefinition to `sparta.HandleAWSLambda()` * Create a [CloudWatchLogsPermission](https://godoc.org/github.com/mweagle/Sparta#CloudWatchLogsPermission) value. * Add one or more [CloudWatchLogsSubscriptionFilter](https://godoc.org/github.com/mweagle/Sparta#CloudWatchLogsSubscriptionFilter) to the `CloudWatchLogsPermission.Filters` map that defines your lambda function\u0026#39;s logfile subscription information. * Append the `CloudWatchLogsPermission` value to the lambda function\u0026#39;s `Permissions` slice. * Include the reference in the call to `sparta.Main()`. # Other Resources "
},
{
	"uri": "/reference/eventsources/cognito/",
	"title": "Cognito",
	"tags": [],
	"description": "",
	"content": "NOT YET IMPLEMENTED\nTODO: Cognito source documentation\n "
},
{
	"uri": "/reference/application/custom_commands/",
	"title": "Custom Application Commands",
	"tags": [],
	"description": "",
	"content": " Introduction In addition to custom flags, an application may register completely new commands. For example, to support alternative topologies or integrated automated acceptance tests as part of a CI/CD pipeline.\nTo register a custom command, define a new cobra.Command and add it to the sparta.CommandLineOptions.Root command value. Ensure you use the xxxxE Cobra functions so that errors can be properly propagated.\nhttpServerCommand := \u0026amp;cobra.Command{ Use: \u0026quot;httpServer\u0026quot;, Short: \u0026quot;Sample HelloWorld HTTP server\u0026quot;, Long: `Sample HelloWorld HTTP server that binds to port: ` + HTTPServerPort, RunE: func(cmd *cobra.Command, args []string) error { http.HandleFunc(\u0026quot;/\u0026quot;, helloWorldResource) return http.ListenAndServe(fmt.Sprintf(\u0026quot;:%d\u0026quot;, HTTPServerPort), nil) }, } sparta.CommandLineOptions.Root.AddCommand(httpServerCommand)  Registering a user-defined command makes that command\u0026rsquo;s usage information seamlessly integrate with the standard commands:\n$ go run main.go --help Provision AWS Lambda and EC2 instance with same code Usage: main [command] Available Commands: delete Delete service describe Describe service execute Start the application and begin handling events explore Interactively explore a provisioned service help Help about any command httpServer Sample HelloWorld HTTP server profile Interactively examine service pprof output provision Provision service status Produce a report for a provisioned service version Display version information Flags: -f, --format string Log format [text, json] (default \u0026#34;text\u0026#34;) -h, --help help for main --ldflags string Go linker string definition flags (https://golang.org/cmd/link/) -l, --level string Log level [panic, fatal, error, warn, info, debug] (default \u0026#34;info\u0026#34;) --nocolor Boolean flag to suppress colorized TTY output -n, --noop Dry-run behavior only (do not perform mutations) -t, --tags string Optional build tags for conditional compilation -z, --timestamps Include UTC timestamp log line prefix ``` And you can query for user-command specific usage as in: \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-bash\u0026#34; data-lang=\u0026#34;bash\u0026#34;\u0026gt;$ ./SpartaOmega httpServer --help Custom command Usage: SpartaOmega httpServer \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;flags\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; Global Flags: -l, --level string Log level \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;panic, fatal, error, warn, info, debug\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;default \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;info\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  -n, --noop Dry-run behavior only \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;do\u0026lt;/span\u0026gt; not perform mutations\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/application/custom_flags/",
	"title": "Custom Flags",
	"tags": [],
	"description": "",
	"content": " Introduction Some commands (eg: provision) may require additional options. For instance, your application\u0026rsquo;s provision logic may require VPC subnets or EC2 SSH Key Names.\nThe default Sparta command line option flags may be extended and validated by building on the exposed Cobra command objects.\nAdding Flags To add a flag, use one of the pflag functions to register your custom flag with one of the standard CommandLineOption values.\nFor example:\n// SSHKeyName is the SSH KeyName to use when provisioning new EC2 instance var SSHKeyName string func main() { // And add the SSHKeyName option to the provision step sparta.CommandLineOptions.Provision.Flags().StringVarP(\u0026amp;SSHKeyName, \u0026quot;key\u0026quot;, \u0026quot;k\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;SSH Key Name to use for EC2 instances\u0026quot;) }  Validating Input Flags may be used to conditionalize which Sparta lambda functions are provided and/or their content. In this case, your application may first need to parse and validate the command line input before calling sparta.Main().\nTo validate user input, define a CommandLineOptionsHook function and provide it to sparta.ParseOptions. This function is called after the pflag bindings are invoked so that your application can validate user input.\nThe ParseOptions result is the optional error returned from your CommandLineOptionsHook function. If there is an error, your application can then exit with an application specific exit code. For instance:\n// Define a validation hook s.t. we can verify the SSHKey is valid validationHook := func(command *cobra.Command) error { if command.Name() == \u0026quot;provision\u0026quot; \u0026amp;\u0026amp; len(SSHKeyName) \u0026lt;= 0 { return fmt.Errorf(\u0026quot;SSHKeyName option is required\u0026quot;) } return nil } } // Extract \u0026amp; validate the SSH Key parseErr := sparta.ParseOptions(validationHook) if nil != parseErr { os.Exit(3) }  Sparta itself uses the govalidator package to simplify validating command line arguments. See sparta_main.go for an example.\n"
},
{
	"uri": "/reference/custom_resources/",
	"title": "Custom Resources",
	"tags": [],
	"description": "",
	"content": " Introduction In some circumstances your service may need to provision or access resources that fall outside the standard workflow. In this case you can use CloudFormation Lambda-backed CustomResources to create or access resources during your CloudFormation stack\u0026rsquo;s lifecycle.\nSparta provides unchecked access to the CloudFormation resource lifecycle via the RequireCustomResource function. This function registers an AWS Lambda Function as an CloudFormation custom resource lifecycle.\nIn this section we\u0026rsquo;ll walk through a sample user-defined custom resource and discuss how a custom resource\u0026rsquo;s outputs can be propagated to an application-level Sparta lambda function.\nComponents Defining a custom resource is a two stage process, depending on whether your application-level lambda function requires access to the custom resource outputs:\n The user-defined AWS Lambda Function  This function defines your resource\u0026rsquo;s logic. The multiple return value is map[string]interface{}, error which signify resource results and operation error, respectively.  The LambdaAWSInfo struct which declares a dependency on your custom resource via the RequireCustomResource member function. Optional - A call to github.com/mweagle/Sparta/aws/cloudformation/resources.SendCloudFormationResponse to signal CloudFormation creation status. Optional - The template decorator that binds your CustomResource\u0026rsquo;s data results to the owning LambdaAWSInfo caller. Optional - A call from your standard Lambda\u0026rsquo;s function body to discover the CustomResource outputs via sparta.Discover().  Custom Resource Functioon A Custom Resource Function is a standard AWS Lambda Go function type that accepts a CloudFormationLambdaEvent input type. This type holds all information for the requested operation.\nThe multiple return values denote success with non-empty results, or an error.\nAs an example, we\u0026rsquo;ll use the following custom resource function:\nimport ( awsLambdaCtx \u0026quot;github.com/aws/aws-lambda-go/lambdacontext\u0026quot; spartaCFResources \u0026quot;github.com/mweagle/Sparta/aws/cloudformation/resources\u0026quot; ) // User defined λ-backed CloudFormation CustomResource func userDefinedCustomResource(ctx context.Context, event spartaCFResources.CloudFormationLambdaEvent) (map[string]interface{}, error) { logger, _ := ctx.Value(ContextKeyLogger).(*logrus.Logger) lambdaCtx, _ := awsLambdaCtx.FromContext(ctx) var opResults = map[string]interface{}{ \u0026quot;CustomResourceResult\u0026quot;: \u0026quot;Victory!\u0026quot;, } opErr := spartaCFResources.SendCloudFormationResponse(lambdaCtx, \u0026amp;event, opResults, nil, logger) return opResults, opErr }  This function always succeeds and publishes a non-empty map consisting of a single key (CustomResourceResult) to CloudFormation. This value can be accessed by other CloudFormation resources.\nRequireCustomResource The next step is to associate this custom resource function with a previously created Sparta LambdaAWSInfo instance via RequireCustomResource. This function accepts:\n roleNameOrIAMRoleDefinition: The IAM role name or definition under which the custom resource function should be executed. Equivalent to the same argument in HandleAWSLambda. userFunc: Custom resource function handler lambdaOptions: Lambda execution options. Equivalent to the same argument in HandleAWSLambda. resourceProps: Arbitrary, optional properties that will be provided to the userFunc during execution.  The multiple return values denote the logical, stable CloudFormation resource ID of the new custom resource, or an error if one occurred.\nFor example, our custom resource function above can be associated via:\n// Standard AWS λ function func helloWorld(ctx context.Context) (string, error) { return \u0026quot;Hello World\u0026quot;, nil } func ExampleLambdaAWSInfo_RequireCustomResource() { lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(helloWorld), helloWorld, sparta.IAMRoleDefinition{}) cfResName, _ := lambdaFn.RequireCustomResource(IAMRoleDefinition{}, userDefinedCustomResource, nil, nil) }  Since our custom resource function doesn\u0026rsquo;t require any additional AWS resources, we provide an empty IAMRoleDefinition.\nThese two steps are sufficient to include your custom resource function in the CloudFormation stack lifecycle.\nIt\u0026rsquo;s possible to share state from the custom resource to a standard Sparta lambda function by annotating your Sparta lambda function\u0026rsquo;s metadata and then discovering it at execution time.\nOptional - Template Decorator To link these resources together, the first step is to include a TemplateDecorator that annotates your Sparta lambda function\u0026rsquo;s CloudFormation resource metadata. This function specifies which user defined output keys (CustomResourceResult in this example) you wish to make available during your lambda function\u0026rsquo;s execution.\nlambdaFn.Decorator = func(serviceName string, lambdaResourceName string, lambdaResource gocf.LambdaFunction, resourceMetadata map[string]interface{}, S3Bucket string, S3Key string, buildID string, cfTemplate *gocf.Template, context map[string]interface{}, logger *logrus.Logger) error { // Pass CustomResource outputs to the λ function resourceMetadata[\u0026quot;CustomResource\u0026quot;] = gocf.GetAtt(cfResName, \u0026quot;CustomResourceResult\u0026quot;) return nil }  The cfResName value is the CloudFormation resource name returned by RequireCustomResource. The template decorator specifies which of your CustomResourceFunction outputs should be discoverable during the paren\u0026rsquo;t lambda functions execution time through a go-cloudformation version of Fn::GetAtt.\nOptional - Discovery Discovery is handled by sparta.Discover() which returns a DiscoveryInfo instance pointer containing the linked Custom Resource outputs. The calling Sparta lambda function can discover its own DiscoveryResource keyname via the top-level ResourceID field. Once found, the calling function then looks up the linked custom resource output via the Properties field using the keyname (CustomResource) provided in the previous template decorator.\nIn this example, the unmarshalled DiscoveryInfo struct looks like:\n{ \u0026#34;Discovery\u0026#34;: { \u0026#34;ResourceID\u0026#34;: \u0026#34;mainhelloWorldLambda837e49c53be175a0f75018a148ab6cd22841cbfb\u0026#34;, \u0026#34;Region\u0026#34;: \u0026#34;us-west-2\u0026#34;, \u0026#34;StackID\u0026#34;: \u0026#34;arn:aws:cloudformation:us-west-2:123412341234:stack/SpartaHelloWorld/70b28170-13f9-11e6-b0c7-50d5ca11b8d2\u0026#34;, \u0026#34;StackName\u0026#34;: \u0026#34;SpartaHelloWorld\u0026#34;, \u0026#34;Resources\u0026#34;: { \u0026#34;mainhelloWorldLambda837e49c53be175a0f75018a148ab6cd22841cbfb\u0026#34;: { \u0026#34;ResourceID\u0026#34;: \u0026#34;mainhelloWorldLambda837e49c53be175a0f75018a148ab6cd22841cbfb\u0026#34;, \u0026#34;Properties\u0026#34;: { \u0026#34;CustomResource\u0026#34;: \u0026#34;Victory!\u0026#34; }, \u0026#34;Tags\u0026#34;: {} } } }, \u0026#34;level\u0026#34;: \u0026#34;info\u0026#34;, \u0026#34;msg\u0026#34;: \u0026#34;Custom resource request\u0026#34;, \u0026#34;time\u0026#34;: \u0026#34;2016-05-07T14:13:37Z\u0026#34; } ``` To lookup the output, the calling function might do something like: ```go configuration, _ := sparta.Discover() customResult := configuration.Resources[configuration.ResourceID].Properties[\u0026#34;CustomResourceResult\u0026#34;] ``` ## Wrapping Up CloudFormation Custom Resources are a powerful tool that can help pre-existing applications migrate to a Sparta application. # Notes * Sparta uses [Lambda-backed CustomResource](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html) functions, so they are subject to the same [Lambda limits](http://docs.aws.amazon.com/lambda/latest/dg/limits.html) as application-level Sparta lambda functions. * Returning an error from the CustomResourceFunction will result in a _FAILED_ reason being returned in the CloudFormation [response object](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/crpg-ref-responses.html). "
},
{
	"uri": "/reference/eventsources/dynamodb/",
	"title": "DynamoDB",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to DynamoDB stream events. This overview is based on the SpartaApplication sample code if you\u0026rsquo;d rather jump to the end result.\nGoal Assume that we\u0026rsquo;re given a DynamoDB stream. See below for details on how to create the stream. We\u0026rsquo;ve been asked to write a lambda function that logs when operations are performed to the table so that we can perform offline analysis.\nGetting Started We\u0026rsquo;ll start with an empty lambda function and build up the needed functionality.\nimport ( awsLambdaEvents \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; ) func echoDynamoDBEvent(ctx context.Context, ddbEvent awsLambdaEvents.DynamoDBEvent) (*awsLambdaEvents.DynamoDBEvent, error) { logger, _ := ctx.Value(sparta.ContextKeyRequestLogger).(*logrus.Entry) logger.WithFields(logrus.Fields{ \u0026quot;Event\u0026quot;: ddbEvent, }).Info(\u0026quot;Event received\u0026quot;) return \u0026amp;ddbEvent, nil }  Since the echoDynamoDBEvent is triggered by Dynamo events, we can leverage the AWS Go Lambda SDK event types to access the record.\nSparta Integration With the core of the echoDynamoDBEvent complete, the next step is to integrate the go function with Sparta. This is performed by the appendDynamoDBLambda function. Since the echoDynamoDBEvent function doesn\u0026rsquo;t access any additional services (Sparta enables CloudWatch Logs privileges by default), the integration is pretty straightforward:\nlambdaFn := sparta.HandleAWSLambda( sparta.LambdaName(echoDynamoDBEvent), echoDynamoDBEvent, sparta.IAMRoleDefinition{})  Event Source Mappings If we were to deploy this Sparta application, the echoDynamoDBEvent function would have the ability to log DynamoDB stream events, but would not be invoked in response to events published by the stream. To register for notifications, we need to configure the lambda\u0026rsquo;s EventSourceMappings:\nlambdaFn.EventSourceMappings = append(lambdaFn.EventSourceMappings, \u0026amp;lambda.CreateEventSourceMappingInput{ EventSourceArn: aws.String(dynamoTestStream), StartingPosition: aws.String(\u0026quot;TRIM_HORIZON\u0026quot;), BatchSize: aws.Int64(10), Enabled: aws.Bool(true), }) lambdaFunctions = append(lambdaFunctions, lambdaFn)  The dynamoTestStream param is the ARN of the Dynamo stream that that your lambda function will poll (eg: arn:aws:dynamodb:us-west-2:000000000000:table/myDynamoDBTable/stream/2015-12-05T16:28:11.869).\nThe EventSourceMappings field is transformed into the appropriate CloudFormation Resource which enables automatic polling of the DynamoDB stream.\nWrapping Up With the lambdaFn fully defined, we can provide it to sparta.Main() and deploy our service. The workflow below is shared by all DynamoDB stream based lambda functions:\n Define the lambda function (echoDynamoDBEvent). If needed, create the required IAMRoleDefinition with appropriate privileges if the lambda function accesses other AWS services. Provide the lambda function \u0026amp; IAMRoleDefinition to sparta.HandleAWSLambda() Add the necessary EventSourceMappings to the LambdaAWSInfo struct so that the lambda function is properly configured.  Other Resources  Using Triggers for Cross Region DynamoDB Replication  Appendix Creating a DynamoDB Stream To create a DynamoDB stream for a given table, follow the steps below:\nSelect Table Enable Stream Copy ARN The Latest stream ARN value is the value that should be provided as the EventSourceArn in to the Event Source Mappings.\n"
},
{
	"uri": "/reference/apigateway/echo_event/",
	"title": "Echo Event",
	"tags": [],
	"description": "",
	"content": " To start, we\u0026rsquo;ll create a HTTPS accessible lambda function that simply echoes back the contents of the Lambda event. The source for this is the SpartaHTML.\nFor reference, the helloWorld function is below.\nimport ( awsLambdaEvents \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; ) func helloWorld(ctx context.Context, gatewayEvent spartaAWSEvents.APIGatewayRequest) (interface{}, error) { /* To return an error back to the client using a standard HTTP status code: errorResponse := spartaAPIG.NewErrorResponse(http.StatusInternalError, \u0026quot;Something failed inside here\u0026quot;) return errorResponse, nil You can also create custom error response types, so long as they include `\u0026quot;code\u0026quot;:HTTP_STATUS_CODE` somewhere in the response body. This reserved expression is what Sparta uses as a RegExp to determine the Integration Mapping value */ logger, loggerOk := ctx.Value(sparta.ContextKeyLogger).(*logrus.Logger) if loggerOk { logger.Info(\u0026quot;Hello world structured log message\u0026quot;) } // Return a message, together with the incoming input... return \u0026amp;helloWorldResponse{ Message: fmt.Sprintf(\u0026quot;Hello world 🌏\u0026quot;), Request: gatewayEvent, }, nil }  Create the API Gateway The first requirement is to create a new API instance via sparta.NewAPIGateway()\nstage := sparta.NewStage(\u0026quot;prod\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;MySpartaAPI\u0026quot;, stage)  In the example above, we\u0026rsquo;re also including a Stage value. A non-nil Stage value will cause the registered API to be deployed. If the Stage value is nil, a REST API will be created, but it will not be deployed (and therefore not publicly accessible).\nCreate a Resource The next step is to associate a URL path with the sparta.LambdaAWSInfo struct that encapsulates the go function:\nfunc spartaHTMLLambdaFunctions(api *sparta.API) []*sparta.LambdaAWSInfo { var lambdaFunctions []*sparta.LambdaAWSInfo lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(helloWorld), helloWorld, sparta.IAMRoleDefinition{}) if nil != api { apiGatewayResource, _ := api.NewResource(\u0026quot;/hello\u0026quot;, lambdaFn) // We only return http.StatusOK apiMethod, apiMethodErr := apiGatewayResource.NewMethod(\u0026quot;GET\u0026quot;, http.StatusOK, http.StatusInternalServerError) if nil != apiMethodErr { panic(\u0026quot;Failed to create /hello resource: \u0026quot; + apiMethodErr.Error()) } // The lambda resource only supports application/json Unmarshallable // requests. apiMethod.SupportedRequestContentTypes = []string{\u0026quot;application/json\u0026quot;} } return append(lambdaFunctions, lambdaFn) }  Our helloWorld only supports GET. We\u0026rsquo;ll see how a single lambda function can support multiple HTTP methods shortly.\nProvision The final step is to to provide the API instance to Sparta.Main()\n// Register the function with the API Gateway apiStage := sparta.NewStage(\u0026quot;v1\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaHTML\u0026quot;, apiStage)  Once the service is successfully provisioned, the Outputs key will include the API Gateway Deployed URL (sample):\nINFO[0096] ──────────────────────────────────────────────── INFO[0096] Stack Outputs INFO[0096] ──────────────────────────────────────────────── INFO[0096] S3SiteURL Description=\u0026#34;S3 Website URL\u0026#34; Value=\u0026#34;http://spartahtml-mweagle-s3site89c05c24a06599753eb3ae4e-1w6rehqu6x04c.s3-website-us-west-2.amazonaws.com\u0026#34; INFO[0096] APIGatewayURL Description=\u0026#34;API Gateway URL\u0026#34; Value=\u0026#34;https://w2tefhnt4b.execute-api.us-west-2.amazonaws.com/v1\u0026#34; INFO[0096] ──────────────────────────────────────────────── ``` Combining the _API Gateway URL_ `OutputValue` with our resource path (_/hello/world/test_), we get the absolute URL to our lambda function: _https://w2tefhnt4b.execute-api.us-west-2.amazonaws.com/v1/hello_ # Querying Let\u0026#39;s query the lambda function and see what the `event` data is at execution time. The snippet below is pretty printed by piping the response through [jq](https://stedolan.github.io/jq/). \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-nohighlight\u0026#34; data-lang=\u0026#34;nohighlight\u0026#34;\u0026gt;$ curl -vs https://3e7ux226ga.execute-api.us-west-2.amazonaws.com/v1/hello | jq . * Trying 52.84.237.220... * TCP_NODELAY set * Connected to 3e7ux226ga.execute-api.us-west-2.amazonaws.com (52.84.237.220) port 443 (#0) * TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 * Server certificate: *.execute-api.us-west-2.amazonaws.com * Server certificate: Amazon * Server certificate: Amazon Root CA 1 * Server certificate: Starfield Services Root Certificate Authority - G2 \u0026amp;gt; GET /v1/hello HTTP/1.1 \u0026amp;gt; Host: 3e7ux226ga.execute-api.us-west-2.amazonaws.com \u0026amp;gt; User-Agent: curl/7.54.0 \u0026amp;gt; Accept: */* \u0026amp;gt; \u0026amp;lt; HTTP/1.1 200 OK \u0026amp;lt; Content-Type: application/json \u0026amp;lt; Content-Length: 1137 \u0026amp;lt; Connection: keep-alive \u0026amp;lt; Date: Mon, 29 Jan 2018 14:15:28 GMT \u0026amp;lt; x-amzn-RequestId: db7f5734-04fe-11e8-b264-c70ecab3a032 \u0026amp;lt; Access-Control-Allow-Origin: http://spartahtml-mweagle-s3site89c05c24a06599753eb3ae4e-419zo4dp8n2d.s3-website-us-west-2.amazonaws.com \u0026amp;lt; Access-Control-Allow-Headers: Content-Type,X-Amz-Date,Authorization,X-Api-Key \u0026amp;lt; Access-Control-Allow-Methods: * \u0026amp;lt; X-Amzn-Trace-Id: sampled=0;root=1-5a6f2c80-efb0f84554384252abca6d15 \u0026amp;lt; X-Cache: Miss from cloudfront \u0026amp;lt; Via: 1.1 570a1979c411cb4529fa1e711db52490.cloudfront.net (CloudFront) \u0026amp;lt; X-Amz-Cf-Id: -UsCegiR1K3vJUFyAo9IMrWGdH8rKW6UBrtJLjxZqke19r0cxMl1NA== \u0026amp;lt; { [1137 bytes data] * Connection #0 to host 3e7ux226ga.execute-api.us-west-2.amazonaws.com left intact { \u0026amp;#34;Message\u0026amp;#34;: \u0026amp;#34;Hello world 🌏\u0026amp;#34;, \u0026amp;#34;Request\u0026amp;#34;: { \u0026amp;#34;method\u0026amp;#34;: \u0026amp;#34;GET\u0026amp;#34;, \u0026amp;#34;body\u0026amp;#34;: {}, \u0026amp;#34;headers\u0026amp;#34;: { \u0026amp;#34;Accept\u0026amp;#34;: \u0026amp;#34;*/*\u0026amp;#34;, \u0026amp;#34;CloudFront-Forwarded-Proto\u0026amp;#34;: \u0026amp;#34;https\u0026amp;#34;, \u0026amp;#34;CloudFront-Is-Desktop-Viewer\u0026amp;#34;: \u0026amp;#34;true\u0026amp;#34;, \u0026amp;#34;CloudFront-Is-Mobile-Viewer\u0026amp;#34;: \u0026amp;#34;false\u0026amp;#34;, \u0026amp;#34;CloudFront-Is-SmartTV-Viewer\u0026amp;#34;: \u0026amp;#34;false\u0026amp;#34;, \u0026amp;#34;CloudFront-Is-Tablet-Viewer\u0026amp;#34;: \u0026amp;#34;false\u0026amp;#34;, \u0026amp;#34;CloudFront-Viewer-Country\u0026amp;#34;: \u0026amp;#34;US\u0026amp;#34;, \u0026amp;#34;Host\u0026amp;#34;: \u0026amp;#34;3e7ux226ga.execute-api.us-west-2.amazonaws.com\u0026amp;#34;, \u0026amp;#34;User-Agent\u0026amp;#34;: \u0026amp;#34;curl/7.54.0\u0026amp;#34;, \u0026amp;#34;Via\u0026amp;#34;: \u0026amp;#34;1.1 570a1979c411cb4529fa1e711db52490.cloudfront.net (CloudFront)\u0026amp;#34;, \u0026amp;#34;X-Amz-Cf-Id\u0026amp;#34;: \u0026amp;#34;vAFNTV5uAMeTG9JN6IORnA7LYJhZyB3jHV7vh-7lXn2uZQUR6eHQUw==\u0026amp;#34;, \u0026amp;#34;X-Amzn-Trace-Id\u0026amp;#34;: \u0026amp;#34;Root=1-5a6f2c80-2b48a9c86a30b0162d8ab1f1\u0026amp;#34;, \u0026amp;#34;X-Forwarded-For\u0026amp;#34;: \u0026amp;#34;73.118.138.121, 205.251.214.60\u0026amp;#34;, \u0026amp;#34;X-Forwarded-Port\u0026amp;#34;: \u0026amp;#34;443\u0026amp;#34;, \u0026amp;#34;X-Forwarded-Proto\u0026amp;#34;: \u0026amp;#34;https\u0026amp;#34; }, \u0026amp;#34;queryParams\u0026amp;#34;: {}, \u0026amp;#34;pathParams\u0026amp;#34;: {}, \u0026amp;#34;context\u0026amp;#34;: { \u0026amp;#34;appId\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;method\u0026amp;#34;: \u0026amp;#34;GET\u0026amp;#34;, \u0026amp;#34;requestId\u0026amp;#34;: \u0026amp;#34;db7f5734-04fe-11e8-b264-c70ecab3a032\u0026amp;#34;, \u0026amp;#34;resourceId\u0026amp;#34;: \u0026amp;#34;401s9n\u0026amp;#34;, \u0026amp;#34;resourcePath\u0026amp;#34;: \u0026amp;#34;/hello\u0026amp;#34;, \u0026amp;#34;stage\u0026amp;#34;: \u0026amp;#34;v1\u0026amp;#34;, \u0026amp;#34;identity\u0026amp;#34;: { \u0026amp;#34;accountId\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;apiKey\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;caller\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;cognitoAuthenticationProvider\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;cognitoAuthenticationType\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;cognitoIdentityId\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;cognitoIdentityPoolId\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;sourceIp\u0026amp;#34;: \u0026amp;#34;73.118.138.121\u0026amp;#34;, \u0026amp;#34;user\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34;, \u0026amp;#34;userAgent\u0026amp;#34;: \u0026amp;#34;curl/7.54.0\u0026amp;#34;, \u0026amp;#34;userArn\u0026amp;#34;: \u0026amp;#34;\u0026amp;#34; } } } } ``` While this demonstrates that our lambda function is publicly accessible, it\u0026amp;#39;s not immediately obvious where the `*event` data is being populated. # Mapping Templates The event data that\u0026amp;#39;s actually supplied to `echoS3Event` is the complete HTTP request body. This content is what the API Gateway sends to our lambda function, which is defined by the integration mapping. This event data also includes the values of any whitelisted parameters. When the API Gateway Method is defined, it optionally includes any whitelisted query params and header values that should be forwarded to the integration target. For this example, we\u0026amp;#39;re not whitelisting any params, so those fields (`queryParams`, `pathParams`) are empty. Then for each integration target (which can be AWS Lambda, a mock, or a HTTP Proxy), it\u0026amp;#39;s possible to transform the API Gateway request data and whitelisted arguments into a format that\u0026amp;#39;s more amenable to the target. Sparta uses a pass-through template that passes all valid data, with minor **Body** differences based on the inbound _Content-Type_: * [application/json](https://github.com/mweagle/Sparta/blob/master/resources/provision/apigateway/inputmapping_json.vtl) * [*](https://github.com/mweagle/Sparta/blob/master/resources/provision/apigateway/inputmapping_default.vtl) The `application/json` template is copied below: \u0026amp;lt;div class=\u0026amp;#34;highlight\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;pre style=\u0026amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;code class=\u0026amp;#34;language-nohighlight\u0026amp;#34; data-lang=\u0026amp;#34;nohighlight\u0026amp;#34;\u0026amp;gt;#* Provide an automatic pass through template that transforms all inputs into the JSON payload sent to a golang function. The JSON behavior attempts to parse the incoming HTTP body as JSON assign it to the `body` field. See https://forums.aws.amazon.com/thread.jspa?threadID=220274\u0026amp;amp;amp;tstart=0 http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html *# { \u0026amp;amp;#34;method\u0026amp;amp;#34;: \u0026amp;amp;#34;$context.httpMethod\u0026amp;amp;#34;, \u0026amp;amp;#34;body\u0026amp;amp;#34; : $input.json(\u0026amp;amp;#39;$\u0026amp;amp;#39;), \u0026amp;amp;#34;headers\u0026amp;amp;#34;: { #foreach($param in $input.params().header.keySet()) \u0026amp;amp;#34;$param\u0026amp;amp;#34;: \u0026amp;amp;#34;$util.escapeJavaScript($input.params().header.get($param))\u0026amp;amp;#34; #if($foreach.hasNext),#end #end }, \u0026amp;amp;#34;queryParams\u0026amp;amp;#34;: { #foreach($param in $input.params().querystring.keySet()) \u0026amp;amp;#34;$param\u0026amp;amp;#34;: \u0026amp;amp;#34;$util.escapeJavaScript($input.params().querystring.get($param))\u0026amp;amp;#34; #if($foreach.hasNext),#end #end }, \u0026amp;amp;#34;pathParams\u0026amp;amp;#34;: { #foreach($param in $input.params().path.keySet()) \u0026amp;amp;#34;$param\u0026amp;amp;#34;: \u0026amp;amp;#34;$util.escapeJavaScript($input.params().path.get($param))\u0026amp;amp;#34; #if($foreach.hasNext),#end #end }, \u0026amp;amp;#34;context\u0026amp;amp;#34; : { \u0026amp;amp;#34;apiId\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.apiId)\u0026amp;amp;#34;, \u0026amp;amp;#34;method\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.httpMethod)\u0026amp;amp;#34;, \u0026amp;amp;#34;requestId\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.requestId)\u0026amp;amp;#34;, \u0026amp;amp;#34;resourceId\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.resourceId)\u0026amp;amp;#34;, \u0026amp;amp;#34;resourcePath\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.resourcePath)\u0026amp;amp;#34;, \u0026amp;amp;#34;stage\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.stage)\u0026amp;amp;#34;, \u0026amp;amp;#34;identity\u0026amp;amp;#34; : { \u0026amp;amp;#34;accountId\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.accountId)\u0026amp;amp;#34;, \u0026amp;amp;#34;apiKey\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.apiKey)\u0026amp;amp;#34;, \u0026amp;amp;#34;caller\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.caller)\u0026amp;amp;#34;, \u0026amp;amp;#34;cognitoAuthenticationProvider\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.cognitoAuthenticationProvider)\u0026amp;amp;#34;, \u0026amp;amp;#34;cognitoAuthenticationType\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.cognitoAuthenticationType)\u0026amp;amp;#34;, \u0026amp;amp;#34;cognitoIdentityId\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.cognitoIdentityId)\u0026amp;amp;#34;, \u0026amp;amp;#34;cognitoIdentityPoolId\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.cognitoIdentityPoolId)\u0026amp;amp;#34;, \u0026amp;amp;#34;sourceIp\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.sourceIp)\u0026amp;amp;#34;, \u0026amp;amp;#34;user\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.user)\u0026amp;amp;#34;, \u0026amp;amp;#34;userAgent\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.userAgent)\u0026amp;amp;#34;, \u0026amp;amp;#34;userArn\u0026amp;amp;#34; : \u0026amp;amp;#34;$util.escapeJavaScript($context.identity.userArn)\u0026amp;amp;#34; } } } ``` This template forwards all whitelisted data \u0026amp;amp;amp; body to the lambda function. You can see by switching on the `method` field would permit a single function to service multiple HTTP method names. The next example will show how to unmarshal this data and perform request-specific actions. # Proxying Envelope Because the integration request returned a successful response, the API Gateway response body contains only our lambda\u0026amp;amp;#39;s output (`$input.json(\u0026amp;amp;#39;$\u0026amp;amp;#39;)`). To return an error that API Gateway can properly translate into an HTTP status code, use an [apigateway.NewErrorResponse](https://godoc.org/github.com/mweagle/Sparta/aws/apigateway#NewErrorResponse) type. This custom error type includes fields that trigger integration mappings based on the inline [HTTP StatusCode](https://golang.org/src/net/http/status.go). If you look at the **Integration Response** section of the _/hello/world/test_ resource in the Console, you\u0026amp;amp;#39;ll see a list of Regular Expression matches: ![API Gateway](/images/apigateway/IntegrationMapping.png) The regular expressions are used to translate the integration response, which is just a blob of text provided to the underlying AWS Go API, into API Gateway Method responses. If you use the `apigateway.Error` type, the marshalled string version of your error text will trigger the proper Method Response. Sparta annotates your lambda functions response with **go**\u0026amp;amp;#39;s values based on the HTTP status code your lambda function produced. By default, Sparta also provides a corresponding Method Response entry for all valid HTTP codes: ![API Gateway](/images/apigateway/MethodResponse.png) These mappings are defaults, and it\u0026amp;amp;#39;s possible to override either one by providing a non-zero length values to either: * [Integration.Responses](https://godoc.org/github.com/mweagle/Sparta#Integration). See the [DefaultIntegrationResponses](https://github.com/mweagle/Sparta/blob/master/apigateway.go#L60) for the default values. * [Method.Responses](https://godoc.org/github.com/mweagle/Sparta#Method). See the [DefaultMethodResponses](https://godoc.org/github.com/mweagle/Sparta#DefaultMethodResponses) for the default method response mappings. # Cleaning Up Before moving on, remember to decommission the service via: \u0026amp;amp;lt;div class=\u0026amp;amp;#34;highlight\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;lt;pre style=\u0026amp;amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;lt;code class=\u0026amp;amp;#34;language-bash\u0026amp;amp;#34; data-lang=\u0026amp;amp;#34;bash\u0026amp;amp;#34;\u0026amp;amp;gt;go run application.go delete \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;```\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#75715e\u0026amp;amp;#34;\u0026amp;amp;gt;# Wrapping Up \u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#75715e\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; Now that we know what data is actually being sent to our API Gateway-connected Lambda \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;function\u0026amp;amp;lt;/span\u0026amp;amp;gt;, we\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#39;\u0026amp;amp;lt;/span\u0026amp;amp;gt;ll move on to performing a more complex operation, including returning a custom HTTP response body. \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#75715e\u0026amp;amp;#34;\u0026amp;amp;gt;# Other Resources \u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#75715e\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; * \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;[\u0026amp;amp;lt;/span\u0026amp;amp;gt;Mapping Template Reference\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;](\u0026amp;amp;lt;/span\u0026amp;amp;gt;http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;/code\u0026amp;amp;gt;\u0026amp;amp;lt;/pre\u0026amp;amp;gt;\u0026amp;amp;lt;/div\u0026amp;amp;gt;\u0026amp;lt;/code\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/eventsources/kinesis/",
	"title": "Event Sources - Kinesis",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to Amazon Kinesis streams. This overview is based on the SpartaApplication sample code if you\u0026rsquo;d rather jump to the end result.\nGoal The goal of this example is to provision a Sparta lambda function that logs Amazon Kinesis events to CloudWatch logs.\nGetting Started We\u0026rsquo;ll start with an empty lambda function and build up the needed functionality.\nimport ( awsLambdaEvents \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; ) func echoKinesisEvent(ctx context.Context, kinesisEvent awsLambdaEvents.KinesisEvent) (*awsLambdaEvents.KinesisEvent, error) { logger, _ := ctx.Value(sparta.ContextKeyRequestLogger).(*logrus.Entry) logger.WithFields(logrus.Fields{ \u0026quot;Event\u0026quot;: kinesisEvent, }).Info(\u0026quot;Event received\u0026quot;) return \u0026amp;kinesisEvent, nil }  For this sample all we\u0026rsquo;re going to do is transparently unmarshal the Kinesis event to an AWS Lambda event, log it, and return the value.\nWith the function defined let\u0026rsquo;s register it with Sparta.\nSparta Integration First we wrap the go function in a LambdaAWSInfo struct:\nlambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoKinesisEvent), echoKinesisEvent, sparta.IAMRoleDefinition{})  Since our lambda function doesn\u0026rsquo;t access any other AWS Services, we can use an empty IAMRoleDefinition (sparta.IAMRoleDefinition{}).\nEvent Source Registration Then last step is to configure our AWS Lambda function with Kinesis as the EventSource\nlambdaFn.EventSourceMappings = append(lambdaFn.EventSourceMappings, \u0026amp;lambda.CreateEventSourceMappingInput{ EventSourceArn: aws.String(kinesisTestStream), StartingPosition: aws.String(\u0026quot;TRIM_HORIZON\u0026quot;), BatchSize: aws.Int64(100), Enabled: aws.Bool(true), })  The kinesisTestStream parameter is the Kinesis stream ARN (eg: arn:aws:kinesis:us-west-2:123412341234:stream/kinesisTestStream) whose events will trigger lambda execution.\nWrapping Up With the lambdaFn fully defined, we can provide it to sparta.Main() and deploy our service. The workflow below is shared by all Kinesis-triggered lambda functions:\n Define the lambda function (echoKinesisEvent). If needed, create the required IAMRoleDefinition with appropriate privileges if the lambda function accesses other AWS services. Provide the lambda function \u0026amp; IAMRoleDefinition to sparta.HandleAWSLambda() Add the necessary EventSourceMappings to the LambdaAWSInfo struct so that the lambda function is properly configured.  Notes  The Kinesis stream and the AWS Lambda function must be provisioned in the same region. The AWS docs have an excellent Kinesis EventSource walkthrough.  "
},
{
	"uri": "/reference/application/environments/",
	"title": "Managing Environments",
	"tags": [],
	"description": "",
	"content": " Introduction It\u0026rsquo;s common for a single Sparta application to target multiple environments. For example:\n Development Staging Production  Each environment is largely similar, but the application may need slightly different configuration in each context.\nTo support this, Sparta uses Go\u0026rsquo;s conditional compliation support to ensure that configuration information is validated at build time. Conditional compilation is supported via the --tags/-t command line argument.\nThis example will work through the SpartaConfig sample. The requirement is that each environment declare it\u0026rsquo;s Name and also add that value as a Stack Output.\nDefault Configuration To start with, create the default configuration. This is the configuration that Sparta uses when provisioning your Stack and defines the environment configuration contract.\n// +build !staging,!production // file: environments/default.go package environments import ( \u0026quot;fmt\u0026quot; \u0026quot;github.com/Sirupsen/logrus\u0026quot; \u0026quot;github.com/aws/aws-sdk-go/aws/session\u0026quot; gocf \u0026quot;github.com/crewjam/go-cloudformation\u0026quot; sparta \u0026quot;github.com/mweagle/Sparta\u0026quot; ) // Name is the default configuration const Name = \u0026quot;\u0026quot;  The important part is the set of excluded tags at the top of the file:\n// +build !staging,!production  This ensures that the configuration is only eligible for compilation when Sparta goes to provision the service.\nEnvironment Configuration The next steps are to define the environment-specific configuration files:\n// +build staging // file: environments/staging.go package environments import ( \u0026quot;github.com/Sirupsen/logrus\u0026quot; \u0026quot;github.com/aws/aws-sdk-go/aws/session\u0026quot; gocf \u0026quot;github.com/crewjam/go-cloudformation\u0026quot; sparta \u0026quot;github.com/mweagle/Sparta\u0026quot; ) // Name is the production configuration const Name = \u0026quot;staging\u0026quot;  // +build production // file: environments/production.go package environments import ( \u0026quot;github.com/Sirupsen/logrus\u0026quot; \u0026quot;github.com/aws/aws-sdk-go/aws/session\u0026quot; gocf \u0026quot;github.com/crewjam/go-cloudformation\u0026quot; sparta \u0026quot;github.com/mweagle/Sparta\u0026quot; ) // Name is the production configuration const Name = \u0026quot;production\u0026quot;  These three files define the set of compile-time mutually-exclusive sources that represent environment targets.\nSegregating Services The serviceName argument supplied to sparta.Main defines the AWS CloudFormation stack that supports your application. While the previous files represent different environments, they will collide at provision time since they share the same service name.\nThe serviceName can be specialized by using the buildTags in the service name definition as in:\nfmt.Sprintf(\u0026quot;SpartaHelloWorld-%s\u0026quot;, sparta.OptionsGlobal.BuildTags),  Each time you run provision with a unique --tags value, a new CloudFormation stack will be created.\nNOTE: This isn\u0026rsquo;t something suitable for production use as there could be multiple BuildTags values.\nEnforcing Environments The final requirement is to add the environment name as a Stack Output. To annotate the stack with the output value, we\u0026rsquo;ll register a ServiceDecorator and use the same conditional compilation support to compile the environment-specific version.\nThe main.go source file registers the workflow hook via:\nhooks := \u0026amp;sparta.WorkflowHooks{ Context: map[string]interface{}{}, ServiceDecorator: environments.ServiceDecoratorHook(sparta.OptionsGlobal.BuildTags), }  Both environments/staging.go and environments/production.go define the same hook function:\nfunc ServiceDecoratorHook(buildTags string) sparta.ServiceDecoratorHook { return func(context map[string]interface{}, serviceName string, template *gocf.Template, S3Bucket string, buildID string, awsSession *session.Session, noop bool, logger *logrus.Logger) error { template.Outputs[\u0026quot;Environment\u0026quot;] = \u0026amp;gocf.Output{ Description: \u0026quot;Sparta Config target environment\u0026quot;, Value: Name, } return nil } }  The environments/default.go definition is slightly different. The \u0026ldquo;default\u0026rdquo; environment isn\u0026rsquo;t one that our service should actually deploy to. It simply exists to make the initial Sparta build (the one that cross compiles the AWS Lambda binary) compile. Build tags are applied to the AWS Lambda compiled binary that Sparta generates.\nTo prevent users from accidentally deploying to the \u0026ldquo;default\u0026rdquo; environment, the BuildTags are valdiated in the hook definition:\nfunc ServiceDecoratorHook(buildTags string) sparta.ServiceDecoratorHook { return func(context map[string]interface{}, serviceName string, template *gocf.Template, S3Bucket string, buildID string, awsSession *session.Session, noop bool, logger *logrus.Logger) error { if len(buildTags) \u0026lt;= 0 { return fmt.Errorf(\u0026quot;Please provide a --tags value for environment target\u0026quot;) } return nil } }  Provisioning Putting everything together, the SpartaConfig service can deploy to either environment:\nstaging\n go run main.go provision --level info --s3Bucket $(S3_BUCKET) --noop --tags staging  production\n go run main.go provision --level info --s3Bucket $(S3_BUCKET) --noop --tags production  Attempting to deploy to \u0026ldquo;default\u0026rdquo; generates an error:\nINFO[0000] Welcome to SpartaConfig- Go=go1.7.1 Option=provision SpartaVersion=0.9.2 UTC=2016-10-12T04:07:35Z INFO[0000] Provisioning service BuildID=550c9e360426f48201c885c0abeb078dfc000a0a NOOP=true Tags= INFO[0000] Verifying IAM Lambda execution roles INFO[0000] IAM roles verified Count=1 INFO[0000] Running `go generate` INFO[0000] Compiling binary Name=SpartaConfig_.lambda.amd64 INFO[0008] Executable binary size KB=15309 MB=14 INFO[0008] Creating ZIP archive for upload TempName=/Users/mweagle/Documents/gopath/src/github.com/mweagle/SpartaConfig/SpartaConfig_104207098 INFO[0009] Registering Sparta function FunctionName=main.helloWorld INFO[0009] Lambda function deployment package size KB=4262 MB=4 INFO[0009] Bypassing bucket expiration policy check due to -n/-noop command line argument BucketName=weagle INFO[0009] Bypassing S3 upload due to -n/-noop command line argument Bucket=weagle Key=SpartaConfig-/SpartaConfig_104207098 INFO[0009] Calling WorkflowHook WorkflowHook=github.com/mweagle/SpartaConfig/environments.ServiceDecoratorHook.func1 WorkflowHookContext=map[] INFO[0009] Invoking rollback functions RollbackCount=0 ERRO[0009] Please provide a --tags value for environment target Error: Please provide a --tags value for environment target Usage: main provision [flags] Flags: -i, --buildID string Optional BuildID to use -s, --s3Bucket string S3 Bucket to use for Lambda source -t, --tags string Optional build tags to use for compilation Global Flags: -l, --level string Log level [panic, fatal, error, warn, info, debug] (default \u0026quot;info\u0026quot;) -n, --noop Dry-run behavior only (do not perform mutations) ERRO[0009] Please provide a --tags value for environment target exit status 1  Notes  Call ParseOptions to initialize sparta.OptionsGlobal.BuildTags field for use in a service name definition. An alternative approach is to define a custom ArchiveHook and inject custom configuration into the ZIP archive. This data is available at Path.Join(env.LAMBDA_TASK_ROOT, ZIP_ARCHIVE_PATH)  See discfg, etcd, Consul (among others) for alternative, more dynamic discovery services.   "
},
{
	"uri": "/reference/eventsources/s3/",
	"title": "S3",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to S3 events. This overview is based on the SpartaImager sample code if you\u0026rsquo;d rather jump to the end result.\nGoal Assume we have an S3 bucket that stores images. You\u0026rsquo;ve been asked to write a service that creates a duplicate image that includes a characteristic stamp overlay and store it in the same S3 bucket.\nGetting Started We\u0026rsquo;ll start with an empty lambda function and build up the needed functionality.\nimport ( awsLambdaEvents \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; awsLambdaContext \u0026quot;github.com/aws/aws-lambda-go/lambdacontext\u0026quot; ) type transformedResponse struct { Bucket string Key string } func transformImage(ctx context.Context, event awsLambdaEvents.S3Event) ([]transformedResponse, error) { logger, _ := ctx.Value(sparta.ContextKeyLogger).(*logrus.Logger) lambdaContext, _ := awsLambdaContext.FromContext(ctx) logger.WithFields(logrus.Fields{ \u0026quot;RequestID\u0026quot;: lambdaContext.AwsRequestID, \u0026quot;RecordCount\u0026quot;: len(event.Records), }).Info(\u0026quot;Request received 👍\u0026quot;)  Since the transformImage is expected to be triggered by S3 event changes, we can transparently unmarshal the incoming request into an S3Event defined by the AWS Go Lambda SDK.\nS3 events are delivered in batches, via lists of EventRecords, so we\u0026rsquo;ll need to process each record.\nfor _, eachRecord := range event.Records { // What happened? switch eachRecord.EventName { case \u0026quot;ObjectCreated:Put\u0026quot;: { err = stampImage(eachRecord.S3.Bucket.Name, eachRecord.S3.Object.Key, logger) } case \u0026quot;s3:ObjectRemoved:Delete\u0026quot;: { // Delete stamped image } default: { logger.Info(\u0026quot;Unsupported event: \u0026quot;, eachRecord.EventName) } } // if err != nil { logger.Error(\u0026quot;Failed to process event: \u0026quot;, err.Error()) http.Error(w, err.Error(), http.StatusInternalServerError) } }  The stampImage function does most of the work, fetching the S3 image to memory, applying the stamp, and putting the transformed content back to S3 with a new name. It uses a simple xformed_ keyname prefix to identify items which have already been stamped \u0026amp; prevents an \u0026ldquo;event-storm\u0026rdquo; from being triggered. This simple approach is acceptable for an example, but in production you should use a more durable approach.\nSparta Integration With the core of the transformImage complete, the next step is to integrate the go function with Sparta. This is performed by the imagerFunctions source.\nOur lambda function needs to both Get and Put items back to an S3 bucket, so we need an IAM Role that grants those privileges under which the function will execute:\n// Provision an IAM::Role as part of this application var iamRole = sparta.IAMRoleDefinition{} // Setup the ARN that includes all child keys resourceArn := fmt.Sprintf(\u0026quot;%s/*\u0026quot;, s3EventBroadcasterBucket) iamRole.Privileges = append(iamRole.Privileges, sparta.IAMRolePrivilege{ Actions: []string{\u0026quot;s3:GetObject\u0026quot;, \u0026quot;s3:PutObject\u0026quot;, }, Resource: resourceArn, })  The s3EventBroadcasterBucket param is the ARN of the S3 bucket that will trigger your lambda function (eg: arn:aws:s3:::MyImagingS3Bucket).\nWith the IAM Role defined, we can create the Sparta lambda function for transformImage:\n// The default timeout is 3 seconds - increase that to 30 seconds s.t. the // transform lambda doesn't fail early. transformOptions := \u0026amp;sparta.LambdaFunctionOptions{ Description: \u0026quot;Stamp assets in S3\u0026quot;, MemorySize: 128, Timeout: 30, } lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(transformImage), transformImage, iamRole) lambdaFn.Options = transformOptions  It typically takes more than 3 seconds to apply the transform, so we increase the execution timeout and provision a new lambda function using the iamRole we defined earlier.\nEvent Source Registration If we were to deploy this Sparta application, the transformImage function would have the ability to Get and Put back to the s3EventBroadcasterBucket, but would not be invoked in response to events triggered by that bucket. To register for state change events, we need to configure the lambda\u0026rsquo;s Permissions:\n////////////////////////////////////////////////////////////////////////////// // S3 configuration // lambdaFn.Permissions = append(lambdaFn.Permissions, sparta.S3Permission{ BasePermission: sparta.BasePermission{ SourceArn: s3EventBroadcasterBucket, }, Events: []string{\u0026quot;s3:ObjectCreated:*\u0026quot;, \u0026quot;s3:ObjectRemoved:*\u0026quot;}, }) lambdaFunctions = append(lambdaFunctions, lambdaFn)  When Sparta generates the CloudFormation template, it scans for Permission configurations. For push based sources like S3, Sparta uses that service\u0026rsquo;s APIs to register your lambda function as a publishing target for events. This remote registration is handled automatically by CustomResources added to the CloudFormation template.\nWrapping Up With the lambdaFn fully defined, we can provide it to sparta.Main() and deploy our service. The workflow below is shared by all S3-triggered lambda functions:\n Define the lambda function (transformImage). Implement the associated business logic (stampImage). If needed, create the required IAMRoleDefinition with appropriate privileges. Provide the lambda function \u0026amp; IAMRoleDefinition to sparta.HandleAWSLambda() Add the necessary Permissions to the LambdaAWSInfo struct so that the lambda function is triggered.  The SpartaImager repo contains the full code, and includes API Gateway support that allows you to publicly fetch the stamped image via an expiring S3 URL.\nOther Resources  The AWS docs have an excellent S3 event source walkthrough.  "
},
{
	"uri": "/reference/eventsources/ses/",
	"title": "SES",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to inbound email. This overview is based on the SpartaApplication sample code if you\u0026rsquo;d rather jump to the end result.\nGoal Assume that we have already verified our email domain with AWS. This allows our domain\u0026rsquo;s email to be handled by SES.\nWe\u0026rsquo;ve been asked to write a lambda function that logs inbound messages, including the metadata associated with the message body itself.\nThere is also an additional requirement to support immutable infrastructure, so our service needs to manage the S3 bucket to which message bodies should be stored. Our service cannot rely on a pre-existing S3 bucket. The infrastructure (and associated security policies) together with the application logic is coupled.\nGetting Started We\u0026rsquo;ll start with an empty lambda function and build up the needed functionality.\nimport ( spartaSES \u0026quot;github.com/mweagle/Sparta/aws/ses\u0026quot; ) func echoSESEvent(ctx context.Context, sesEvent spartaSES.Event) (*spartaSES.Event, error) { logger, _ := ctx.Value(sparta.ContextKeyRequestLogger).(*logrus.Entry) configuration, configErr := sparta.Discover() logger.WithFields(logrus.Fields{ \u0026quot;Error\u0026quot;: configErr, \u0026quot;Configuration\u0026quot;: configuration, }).Info(\u0026quot;Discovery results\u0026quot;) }  Unmarshalling the SES Event At this point we would normally continue processing the SES event, using Sparta types until the official events are available.\nHowever, before moving on to the event processing, we need to take a detour into dynamic infrastructure because of the immutable infrastructure requirement.\nThis requirement implies that our service must be self-contained: we can\u0026rsquo;t assume that the S3 bucket already exists. How can our locally compiled code access AWS-created resources?\nDynamic Resources The immutable infrastructure requirement makes this lambda function a bit more complex. Our service needs to:\n Provision a new S3 bucket for email message body storage  SES will not provide the message body in the event data. It will only store the email body in an S3 bucket, from which your lambda function can later consume it.  Wait for the S3 bucket to be provisioned  As we need a new S3 bucket, we\u0026rsquo;re relying on AWS to generate a unique name. But this means that our lambda function doesn\u0026rsquo;t know the S3 bucket name during provisioning. In fact, we shouldn\u0026rsquo;t even create an AWS Lambda function if the S3 bucket can\u0026rsquo;t be created.  Include an IAMPrivilege so that our go function can access the dynamically created bucket Discover the S3 Bucket at lambda execution time  Provision Message Body Storage Resource Let\u0026rsquo;s first take a look at how the SES lambda handler provisions a new S3 bucket via the MessageBodyStorage type:\nfunc appendSESLambda(api *sparta.API, lambdaFunctions []*sparta.LambdaAWSInfo) []*sparta.LambdaAWSInfo { // Our lambda function will need to be able to read from the bucket, which // will be handled by the S3MessageBodyBucketDecorator below lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoSESEvent), echoSESEvent, sparta.IAMRoleDefinition{}) // Setup options s.t. the lambda function has time to consume the message body lambdaFn.Options = \u0026amp;sparta.LambdaFunctionOptions{ Description: \u0026quot;\u0026quot;, MemorySize: 128, Timeout: 10, } // Add a Permission s.t. the Lambda function automatically manages SES registration sesPermission := sparta.SESPermission{ BasePermission: sparta.BasePermission{ // SES only supports wildcard ARNs SourceArn: \u0026quot;*\u0026quot;, }, InvocationType: \u0026quot;Event\u0026quot;, } // Store the message body bodyStorage, _ := sesPermission.NewMessageBodyStorageResource(\u0026quot;Special\u0026quot;) sesPermission.MessageBodyStorage = bodyStorage  The MessageBodyStorage type (and the related MessageBodyStorageOptions type) cause our SESPermission handler to add an S3 ReceiptRule at the head of the rules list. This rule instructs SES to store the message body in the supplied bucket before invoking our lambda function.\nThe single parameter \u0026quot;Special\u0026quot; is an application-unique literal value that is used to create a stable CloudFormation resource identifier so that new buckets are not created in response to stack update requests.\nOur SES handler then adds two ReceiptRules:\nsesPermission.ReceiptRules = make([]sparta.ReceiptRule, 0) sesPermission.ReceiptRules = append(sesPermission.ReceiptRules, sparta.ReceiptRule{ Name: \u0026quot;Special\u0026quot;, Recipients: []string{\u0026quot;sombody_special@gosparta.io\u0026quot;}, TLSPolicy: \u0026quot;Optional\u0026quot;, }) sesPermission.ReceiptRules = append(sesPermission.ReceiptRules, sparta.ReceiptRule{ Name: \u0026quot;Default\u0026quot;, Recipients: []string{}, TLSPolicy: \u0026quot;Optional\u0026quot;, })  Dynamic IAMPrivilege Arn Our lambda function is required to access the message body in the dynamically created MessageBodyStorage resource, but the S3 resource Arn is only defined after the service is provisioned. The solution to this is to reference the dynamically generated BucketArnAllKeys() value in the sparta.IAMRolePrivilege initializer:\n// Then add the privilege to the Lambda function s.t. we can actually get at the data lambdaFn.RoleDefinition.Privileges = append(lambdaFn.RoleDefinition.Privileges, sparta.IAMRolePrivilege{ Actions: []string{\u0026quot;s3:GetObject\u0026quot;, \u0026quot;s3:HeadObject\u0026quot;}, Resource: sesPermission.MessageBodyStorage.BucketArnAllKeys(), })  The last step is to register the SESPermission with the lambda info:\n// Finally add the SES permission to the lambda function lambdaFn.Permissions = append(lambdaFn.Permissions, sesPermission)  At this point we\u0026rsquo;ve implicitly created an S3 bucket via the MessageBodyStorage value. Our lambda function now needs to dynamically determine the AWS-assigned bucket name.\nDynamic Message Body Storage Discovery Our echoSESEvent function needs to determine, at execution time, the MessageBodyStorage S3 bucket name. This is done via sparta.Discover():\nconfiguration, configErr := sparta.Discover() logger.WithFields(logrus.Fields{ \u0026quot;Error\u0026quot;: configErr, \u0026quot;Configuration\u0026quot;: configuration, }).Info(\u0026quot;Discovery results\u0026quot;) // The message bucket is an explicit `DependsOn` relationship, so it'll be in the // resources map. We'll find it by looking for the dependent resource with the \u0026quot;AWS::S3::Bucket\u0026quot; type bucketName := \u0026quot;\u0026quot; for _, eachResourceInfo := range configuration.Resources { if eachResourceInfo.ResourceType == \u0026quot;AWS::S3::Bucket\u0026quot; { bucketName = eachResourceInfo.Properties[\u0026quot;Ref\u0026quot;] } } if \u0026quot;\u0026quot; == bucketName { return nil, errors.Errorf(\u0026quot;Failed to discover SES bucket from sparta.Discovery: %#v\u0026quot;, configuration) }  The sparta.Discover() function returns a DiscoveryInfo structure. This data is published into the Lambda\u0026rsquo;s environment variables to enable it to discover other resources published in the same Stack.\nThe structure includes the stack\u0026rsquo;s Pseudo Parameters as well information about any immediate resource dependencies. Eg, those that were explicitly marked as DependsOn. See the discovery documentation for more details.\nAs we only have a single dependency, our discovery filter is:\n// The message bucket is an explicit `DependsOn` relationship, so it'll be in the // resources map. We'll find it by looking for the dependent resource with the \u0026quot;AWS::S3::Bucket\u0026quot; type bucketName := \u0026quot;\u0026quot; for _, eachResourceInfo := range configuration.Resources { if eachResourceInfo.ResourceType == \u0026quot;AWS::S3::Bucket\u0026quot; { bucketName = eachResourceInfo.Properties[\u0026quot;Ref\u0026quot;] } } if \u0026quot;\u0026quot; == bucketName { return nil, errors.Errorf(\u0026quot;Failed to discover SES bucket from sparta.Discovery: %#v\u0026quot;, configuration) }  Sparta Integration The rest of echoSESEvent satisfies the other requirements, with a bit of help from the SES event types:\n// Get the metdata about the item... svc := s3.New(session.New()) for _, eachRecord := range sesEvent.Records { logger.WithFields(logrus.Fields{ \u0026quot;Source\u0026quot;: eachRecord.SES.Mail.Source, \u0026quot;MessageID\u0026quot;: eachRecord.SES.Mail.MessageID, \u0026quot;BucketName\u0026quot;: bucketName, }).Info(\u0026quot;SES Event\u0026quot;) if \u0026quot;\u0026quot; != bucketName { params := \u0026amp;s3.HeadObjectInput{ Bucket: aws.String(bucketName), Key: aws.String(eachRecord.SES.Mail.MessageID), } resp, err := svc.HeadObject(params) logger.WithFields(logrus.Fields{ \u0026quot;Error\u0026quot;: err, \u0026quot;Metadata\u0026quot;: resp, }).Info(\u0026quot;SES MessageBody\u0026quot;) } } return \u0026amp;sesEvent, nil  Wrapping Up With the lambdaFn fully defined, we can provide it to sparta.Main() and deploy our service. The workflow below is shared by all SES-triggered lambda function:\n Define the lambda function (echoSESEvent). If needed, create the required IAMRoleDefinition with appropriate privileges if the lambda function accesses other AWS services. Provide the lambda function \u0026amp; IAMRoleDefinition to sparta.HandleAWSLambda() Add the necessary Permissions to the LambdaAWSInfo struct so that the lambda function is triggered.  Additionally, if the SES handler needs to access the raw email message body:\n Create a new sesPermission.NewMessageBodyStorageResource(\u0026quot;Special\u0026quot;) value to store the message body Assign the value to the sesPermission.MessageBodyStorage field If your lambda function needs to consume the message body, add an entry to sesPermission.[]IAMPrivilege that includes the sesPermission.MessageBodyStorage.BucketArnAllKeys() Arn In your go lambda function definition, discover the S3 bucketname via sparta.Discover()  Notes  The SES message (including headers) is stored in the raw format More on Immutable Infrastructure:  Subbu - Automate Everything Chad Fowler - Immutable Deployments The Cloudcast - What is Immutable Infrastructure The New Stack   "
},
{
	"uri": "/reference/eventsources/sns/",
	"title": "SNS",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to SNS events. This overview is based on the SpartaApplication sample code if you\u0026rsquo;d rather jump to the end result.\nGoal Assume that we have an SNS topic that broadcasts notifications. We\u0026rsquo;ve been asked to write a lambda function that logs the Subject and Message text to CloudWatch logs for later processing.\nGetting Started We\u0026rsquo;ll start with an empty lambda function and build up the needed functionality.\nimport ( awsLambdaEvents \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; ) func echoSNSEvent(ctx context.Context, snsEvent awsLambdaEvents.SNSEvent) (*awsLambdaEvents.SNSEvent, error) { logger, _ := ctx.Value(sparta.ContextKeyRequestLogger).(*logrus.Entry) logger.WithFields(logrus.Fields{ \u0026quot;Event\u0026quot;: snsEvent, }).Info(\u0026quot;Event received\u0026quot;) return \u0026amp;snsEvent, nil }  Unmarshalling the SNS Event SNS events are delivered in batches, via lists of SNSEventRecords, so we\u0026rsquo;ll need to process each record.\nfor _, eachRecord := range lambdaEvent.Records { logger.WithFields(logrus.Fields{ \u0026quot;Subject\u0026quot;: eachRecord.Sns.Subject, \u0026quot;Message\u0026quot;: eachRecord.Sns.Message, }).Info(\u0026quot;SNS Event\u0026quot;) }  That\u0026rsquo;s enough to get the data into CloudWatch Logs.\nSparta Integration With the core of the echoSNSEvent complete, the next step is to integrate the go function with Sparta. This is performed by the appendSNSLambda function. Since the echoSNSEvent function doesn\u0026rsquo;t access any additional services (Sparta enables CloudWatch Logs privileges by default), the integration is pretty straightforward:\nlambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoSNSEvent), echoSNSEvent, sparta.IAMRoleDefinition{})  Event Source Registration If we were to deploy this Sparta application, the echoSNSEvent function would have the ability to log SNS events, but would not be invoked in response to messages published to that topic. To register for notifications, we need to configure the lambda\u0026rsquo;s Permissions:\nlambdaFn.Permissions = append(lambdaFn.Permissions, sparta.SNSPermission{ BasePermission: sparta.BasePermission{ SourceArn: snsTopic, }, }) lambdaFunctions = append(lambdaFunctions, lambdaFn)  The snsTopic param is the ARN of the SNS topic that will notify your lambda function (eg: _arn:aws:sns:us-west-2:000000000000:myTopicName).\nSee the S3 docs for more information on how the Permissions data is processed.\nWrapping Up With the lambdaFn fully defined, we can provide it to sparta.Main() and deploy our service. The workflow below is shared by all SNS-triggered lambda function:\n Define the lambda function (echoSNSEvent). If needed, create the required IAMRoleDefinition with appropriate privileges if the lambda function accesses other AWS services. Provide the lambda function \u0026amp; IAMRoleDefinition to sparta.HandleAWSLambda() Add the necessary Permissions to the LambdaAWSInfo struct so that the lambda function is triggered.  Other Resources  TBD  "
},
{
	"uri": "/reference/eventsources/sqs/",
	"title": "SQS",
	"tags": [],
	"description": "",
	"content": " In this section we\u0026rsquo;ll walkthrough how to trigger your lambda function in response to AWS Simple Queue Service (SQS) events. This overview is based on the SpartaSQS sample code if you\u0026rsquo;d rather jump to the end result.\nGoal The goal here is to create a self-contained service that provisions a SQS queue, an AWS Lambda function that processes messages posted to the queue\nGetting Started We\u0026rsquo;ll start with an empty lambda function and build up the needed functionality.\nimport ( \u0026quot;context\u0026quot; awsLambdaGo \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; sparta \u0026quot;github.com/mweagle/Sparta\u0026quot; spartaCF \u0026quot;github.com/mweagle/Sparta/aws/cloudformation\u0026quot; gocf \u0026quot;github.com/mweagle/go-cloudformation\u0026quot; \u0026quot;github.com/sirupsen/logrus\u0026quot; ) func sqsHandler(ctx context.Context, sqsRequest awsLambdaGo.SQSEvent) error { logger, _ := ctx.Value(sparta.ContextKeyLogger).(*logrus.Logger) logger.WithField(\u0026quot;Event\u0026quot;, sqsRequest).Info(\u0026quot;SQS Event Received\u0026quot;) return nil }  Since the sqsHandler function subscribes to SQS messages, it can use the AWS provided SQSEvent to automatically unmarshal the incoming event.\nTypically the lambda function would process each record in the event, but for this example we\u0026rsquo;ll just log the entire batch and then return.\nSparta Integration The next step is to integrate the lambda function with Sparta:\n// 1. Create the Sparta Lambda function lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(sqsHandler), sqsHandler, sparta.IAMRoleDefinition{})  Once the lambda function is integrated with Sparta, we can use a TemplateDecoratorHandler to include the SQS provisioning request as part of the overall service creation.\nSQS Topic Definition Decorators enable a Sparta service to provision other types of infrastructure together with the core lambda functions. In this example, our sqsHandler function should also provision an SQS queue from which it will receive events. This is done as in the following:\nsqsResourceName := \u0026quot;LambdaSQSFTW\u0026quot; sqsDecorator := func(serviceName string, lambdaResourceName string, lambdaResource gocf.LambdaFunction, resourceMetadata map[string]interface{}, S3Bucket string, S3Key string, buildID string, template *gocf.Template, context map[string]interface{}, logger *logrus.Logger) error { // Include the SQS resource in the application sqsResource := \u0026amp;gocf.SQSQueue{} template.AddResource(sqsResourceName, sqsResource) return nil } lambdaFn.Decorators = []sparta.TemplateDecoratorHandler{sparta.TemplateDecoratorHookFunc(sqsDecorator)}  This function-level decorator includes an AWS CloudFormation SQS::Queue definition that will be included with the stack definition.\nConnecting SQS to AWS Lambda The final step is to make the sqsHandler the Lambda\u0026rsquo;s EventSourceMapping target for the dynamically provisioned Queue\u0026rsquo;s ARN:\nlambdaFn.EventSourceMappings = append(lambdaFn.EventSourceMappings, \u0026amp;sparta.EventSourceMapping{ EventSourceArn: gocf.GetAtt(sqsResourceName, \u0026quot;Arn\u0026quot;), BatchSize: 2, })  Wrapping Up With the lambdaFn fully defined, we can provide it to sparta.Main() and deploy our service. It\u0026rsquo;s also possible to use a pre-existing SQS resource by providing a string literal as the EventSourceArn value.\nOther Resources  The AWS docs have an excellent SQS event source walkthrough.  "
},
{
	"uri": "/sample_service/",
	"title": "Sample Service",
	"tags": [],
	"description": "",
	"content": " Examples This is a walkthrough of a simple \u0026ldquo;Hello World\u0026rdquo; style Sparta service. The first section talks about the programming model and the second provides an overview of how that code is deployed to AWS.\nWalkthrough of a sample Sparta based service:\n Step 1 - Walkthrough Step 2 - Details  "
},
{
	"uri": "/reference/application/workflow_hooks/",
	"title": "Workflow Hooks",
	"tags": [],
	"description": "",
	"content": " Introduction While Sparta tries to provide workflows common across service lifecycles, it may be the case that an application requires additional functionality or runtime resources.\nTo support this, Sparta allows you to customize the build pipeline via WorkflowHooks structure. These hooks are called at specific points in the provision lifecycle and support augmenting the standard pipeline:\nmermaid.initialize({startOnLoad:true}); graph TD classDef stdOp fill:#FFF,stroke:#A00,stroke-width:2px; classDef userHook fill:#B5B2A1,stroke:#A00,stroke-width:2px,stroke-dasharray: 5, 5; iam[Verify Static IAM Roles] class iam stdOp; preBuild[WorkflowHook - PreBuild] class preBuild userHook; compile[Cross Compile for AWS AMI] postBuild[WorkflowHook - PostBuild] class postBuild userHook; package[ZIP archive] class package stdOp; userArchive[WorkflowHook - Archive] class userArchive userHook; upload[Upload Archive to S3] packageAssets[Conditionally ZIP S3 Site Assets] uploadAssets[Upload S3 Assets] class upload,packageAssets,uploadAssets stdOp; preMarshall[WorkflowHook - PreMarshall] class preMarshall userHook; generate[Marshal to CloudFormation] class generate stdOp; decorate[Call Lambda Decorators - Dynamic AWS Resources] class decorate stdOp; serviceDecorator[Service Decorator] class serviceDecorator userHook; postMarshall[WorkflowHook - PostMarshall] class postMarshall stdOp; uploadTemplate[Upload Template to S3] updateStack[Create/Update Stack] inplaceUpdates[In-place λ code updates] wait[Wait for Complete/Failure Result] class uploadTemplate,updateStack,inplaceUpdates,wait stdOp; iam--preBuild preBuild--|go|compile compile--postBuild postBuild--package package--packageAssets package--userArchive userArchive--upload packageAssets--uploadAssets uploadAssets--generate upload--generate generate--preMarshall preMarshall--decorate decorate--serviceDecorator serviceDecorator--postMarshall postMarshall--uploadTemplate uploadTemplate--|standard|updateStack uploadTemplate--|inplace|inplaceUpdates updateStack--wait  This diagram is rendered with Mermaid. Please open an issue if it doesn't render properly. The following sections describe the three types of WorkflowHooks available. All hooks accept a context map[string]interface{} as their first parameter. Sparta treats this as an opaque property bag that enables hooks to communicate state.\nWorkflowHook Types Builder Hooks BuilderHooks share the WorkflowHook signature:\ntype WorkflowHook func(context map[string]interface{}, serviceName string, S3Bucket string, buildID string, awsSession *session.Session, noop bool, logger *logrus.Logger) error  These functions include:\n PreBuild PostBuild PreMarshall PostMarshall  Archive Hook The ArchiveHook allows a service to add custom resources to the ZIP archive and have the signature:\ntype ArchiveHook func(context map[string]interface{}, serviceName string, zipWriter *zip.Writer, awsSession *session.Session, noop bool, logger *logrus.Logger) error  This function is called after Sparta has written the standard resources to the *zip.Writer stream.\nRollback Hook The RollbackHook is called iff the provision operation fails and has the signature:\ntype RollbackHook func(context map[string]interface{}, serviceName string, awsSession *session.Session, noop bool, logger *logrus.Logger)  Using WorkflowHooks To use the Workflow Hooks feature, initialize a WorkflowHooks structure with 1 or more hook functions and call sparta.MainEx.\nNotes  Workflow hooks can be used to support Dockerizing your application  You may need to add custom CLI commands to fully support Docker  Enable --level debug for detailed workflow hook debugging information  "
},
{
	"uri": "/reference/apigateway/user_input/",
	"title": "User Input",
	"tags": [],
	"description": "",
	"content": " This example demonstrates how to accept user input (delivered as HTTP query params) and return an expiring S3 URL to fetch content. The source for this is the s3ItemInfo function defined as part of the SpartaApplication.\nDefine the Lambda Function Our function will accept two params:\n bucketName : The S3 bucket name storing the asset keyName : The S3 item key  Those params will be passed as part of the URL query string. The function will fetch the item metadata, generate an expiring URL for public S3 access, and return a JSON response body with the item data.\nBecause s3ItemInfo is expected to be invoked by the API Gateway, we\u0026rsquo;ll use the AWS Lambda Go type in the function signature:\nimport ( spartaEvents \u0026quot;github.com/mweagle/Sparta/aws/events\u0026quot; ) func s3ItemInfo(ctx context.Context, apigRequest spartaEvents.APIGatewayRequest) (*itemInfoResponse, error) { logger, _ := ctx.Value(sparta.ContextKeyLogger).(*logrus.Logger) lambdaContext, _ := awsLambdaContext.FromContext(ctx) logger.WithFields(logrus.Fields{ \u0026quot;RequestID\u0026quot;: lambdaContext.AwsRequestID, }).Info(\u0026quot;Request received\u0026quot;) getObjectInput := \u0026amp;s3.GetObjectInput{ Bucket: aws.String(apigRequest.QueryParams[\u0026quot;bucketName\u0026quot;]), Key: aws.String(apigRequest.QueryParams[\u0026quot;keyName\u0026quot;]), } awsSession := spartaAWS.NewSession(logger) svc := s3.New(awsSession) result, err := svc.GetObject(getObjectInput) if nil != err { return nil, err } presignedReq, _ := svc.GetObjectRequest(getObjectInput) url, err := presignedReq.Presign(5 * time.Minute) if nil != err { return nil, err } return \u0026amp;itemInfoResponse{ S3: result, URL: url, }, nil }  The sparta.APIGatewayRequest fields correspond to the Integration Response Mapping template discussed in the previous example (see the full mapping template here).\nOnce the event is unmarshaled, we can use it to fetch the S3 item info:\ngetObjectInput := \u0026amp;s3.GetObjectInput{ Bucket: aws.String(lambdaEvent.QueryParams[\u0026quot;bucketName\u0026quot;]), Key: aws.String(lambdaEvent.QueryParams[\u0026quot;keyName\u0026quot;]), }  Assuming there are no errors (including the case where the item does not exist), the remainder of the function fetches the data, generates a presigned URL, and returns a JSON response:\nawsSession := spartaAWS.NewSession(logger) svc := s3.New(awsSession) result, err := svc.GetObject(getObjectInput) if nil != err { return nil, err } presignedReq, _ := svc.GetObjectRequest(getObjectInput) url, err := presignedReq.Presign(5 * time.Minute) if nil != err { return nil, err } return \u0026amp;itemInfoResponse{ S3: result, URL: url, }, nil  Create the API Gateway The next step is to create a new API instance via sparta.NewAPIGateway()\napiStage := sparta.NewStage(\u0026quot;v1\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaImagerAPI\u0026quot;, apiStage)  Create Lambda Binding Next we create an sparta.LambdaAWSInfo struct that references the s3ItemInfo function:\nvar iamDynamicRole = sparta.IAMRoleDefinition{} iamDynamicRole.Privileges = append(iamDynamicRole.Privileges, sparta.IAMRolePrivilege{ Actions: []string{\u0026quot;s3:GetObject\u0026quot;}, Resource: resourceArn, }) s3ItemInfoLambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(s3ItemInfo), s3ItemInfo, iamDynamicRole) s3ItemInfoOptions.Options = \u0026amp;sparta.LambdaFunctionOptions{ Description: \u0026quot;Get information about an item in S3 via querystring params\u0026quot;, MemorySize: 128, Timeout: 10, }  A few items to note here:\n We\u0026rsquo;re providing a custom LambdaFunctionOptions in case the request to S3 to get item metadata exceeds the default 3 second timeout. We also add a custom iamDynamicRole.Privileges entry to the Privileges slice that authorizes the lambda function to only access objects in a single bucket (resourceArn).  This bucket ARN is externally created and the ARN provided to this code. While the API will accept any bucketName value, it is only authorized to access a single bucket.   Create Resources The next step is to associate a URL path with the sparta.LambdaAWSInfo struct that represents the s3ItemInfo function. This will be the relative path component used to reference our lambda function via the API Gateway.\napiGatewayResource, _ := api.NewResource(\u0026quot;/info\u0026quot;, s3ItemInfoLambdaFn) method, err := apiGatewayResource.NewMethod(\u0026quot;GET\u0026quot;, http.StatusOK) if err != nil { return nil, err }  Whitelist Input The final step is to add the whitelisted parameters to the Method definition.\n// Whitelist query string params method.Parameters[\u0026quot;method.request.querystring.keyName\u0026quot;] = true method.Parameters[\u0026quot;method.request.querystring.bucketName\u0026quot;] = true  Note that the keynames in the method.Parameters map must be of the form: method.request.{location}.{name} where location is one of:\n querystring path header  See the REST documentation for more information.\nProvision With everything configured, let\u0026rsquo;s provision the stack:\ngo run application.go --level debug provision --s3Bucket $S3_BUCKET ``` and check the results. # Querying As this Sparta application includes an API Gateway definition, the stack `Outputs` includes the API Gateway URL: \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-nohighlight\u0026#34; data-lang=\u0026#34;nohighlight\u0026#34;\u0026gt;INFO[0113] Stack output Description=API Gateway URL Key=APIGatewayURL Value=https://0ux556ho77.execute-api.us-west-2.amazonaws.com/v1 INFO[0113] Stack output Description=Sparta Home Key=SpartaHome Value=https://github.com/mweagle/Sparta INFO[0113] Stack output Description=Sparta Version Key=SpartaVersion Value=0.1.0 ``` Let\u0026amp;#39;s fetch an item we know exists: \u0026amp;lt;div class=\u0026amp;#34;highlight\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;pre style=\u0026amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;code class=\u0026amp;#34;language-nohighlight\u0026amp;#34; data-lang=\u0026amp;#34;nohighlight\u0026amp;#34;\u0026amp;gt;curl -vs \u0026amp;amp;#34;https://0ux556ho77.execute-api.us-west-2.amazonaws.com/v1/info?keyName=gopher.png\u0026amp;amp;amp;bucketName=somebucket-log\u0026amp;amp;#34; * Trying 54.192.70.158... * Connected to 0ux556ho77.execute-api.us-west-2.amazonaws.com (54.192.70.158) port 443 (#0) * TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 * Server certificate: *.execute-api.us-west-2.amazonaws.com * Server certificate: Symantec Class 3 Secure Server CA - G4 * Server certificate: VeriSign Class 3 Public Primary Certification Authority - G5 \u0026amp;amp;gt; GET /v1/info?keyName=gopher.png\u0026amp;amp;amp;bucketName=somebucket-log HTTP/1.1 \u0026amp;amp;gt; Host: 0ux556ho77.execute-api.us-west-2.amazonaws.com \u0026amp;amp;gt; User-Agent: curl/7.43.0 \u0026amp;amp;gt; Accept: */* \u0026amp;amp;gt; \u0026amp;amp;lt; HTTP/1.1 200 OK \u0026amp;amp;lt; Content-Type: application/json \u0026amp;amp;lt; Content-Length: 1584 \u0026amp;amp;lt; Connection: keep-alive \u0026amp;amp;lt; Date: Sun, 06 Dec 2015 02:35:03 GMT \u0026amp;amp;lt; x-amzn-RequestId: f333f4bb-9bc1-11e5-afde-61a428c89049 \u0026amp;amp;lt; X-Cache: Miss from cloudfront \u0026amp;amp;lt; Via: 1.1 2f31d4850470c56c3b326946dc542a6b.cloudfront.net (CloudFront) \u0026amp;amp;lt; X-Amz-Cf-Id: 6rBpqjmi7DPax7XOHTbxDx8-FfFfvI04m2_K-PxLWfYFor7WtIcdxA== \u0026amp;amp;lt; * Connection #0 to host 0ux556ho77.execute-api.us-west-2.amazonaws.com left intact {\u0026amp;amp;#34;code\u0026amp;amp;#34;:200,\u0026amp;amp;#34;status\u0026amp;amp;#34;:\u0026amp;amp;#34;OK\u0026amp;amp;#34;,\u0026amp;amp;#34;headers\u0026amp;amp;#34;:{\u0026amp;amp;#34;content-type\u0026amp;amp;#34;:\u0026amp;amp;#34;application/json\u0026amp;amp;#34;,\u0026amp;amp;#34;date\u0026amp;amp;#34;:\u0026amp;amp;#34;Sun, 06 Dec 2015 02:35:03 GMT\u0026amp;amp;#34;,\u0026amp;amp;#34;content-length\u0026amp;amp;#34;:\u0026amp;amp;#34;1468\u0026amp;amp;#34;},\u0026amp;amp;#34;results\u0026amp;amp;#34;:{\u0026amp;amp;#34;S3\u0026amp;amp;#34;:{\u0026amp;amp;#34;AcceptRanges\u0026amp;amp;#34;:\u0026amp;amp;#34;bytes\u0026amp;amp;#34;,\u0026amp;amp;#34;Body\u0026amp;amp;#34;:{},\u0026amp;amp;#34;CacheControl\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ContentDisposition\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ContentEncoding\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ContentLanguage\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ContentLength\u0026amp;amp;#34;:70372,\u0026amp;amp;#34;ContentRange\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ContentType\u0026amp;amp;#34;:\u0026amp;amp;#34;image/png\u0026amp;amp;#34;,\u0026amp;amp;#34;DeleteMarker\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ETag\u0026amp;amp;#34;:\u0026amp;amp;#34;\\\u0026amp;amp;#34;ca1f746d6f232f87fca4e4d94ef6f3ab\\\u0026amp;amp;#34;\u0026amp;amp;#34;,\u0026amp;amp;#34;Expiration\u0026amp;amp;#34;:null,\u0026amp;amp;#34;Expires\u0026amp;amp;#34;:null,\u0026amp;amp;#34;LastModified\u0026amp;amp;#34;:\u0026amp;amp;#34;2015-11-09T15:38:01Z\u0026amp;amp;#34;,\u0026amp;amp;#34;Metadata\u0026amp;amp;#34;:{},\u0026amp;amp;#34;MissingMeta\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ReplicationStatus\u0026amp;amp;#34;:null,\u0026amp;amp;#34;RequestCharged\u0026amp;amp;#34;:null,\u0026amp;amp;#34;Restore\u0026amp;amp;#34;:null,\u0026amp;amp;#34;SSECustomerAlgorithm\u0026amp;amp;#34;:null,\u0026amp;amp;#34;SSECustomerKeyMD5\u0026amp;amp;#34;:null,\u0026amp;amp;#34;SSEKMSKeyId\u0026amp;amp;#34;:null,\u0026amp;amp;#34;ServerSideEncryption\u0026amp;amp;#34;:null,\u0026amp;amp;#34;StorageClass\u0026amp;amp;#34;:null,\u0026amp;amp;#34;VersionId\u0026amp;amp;#34;:null,\u0026amp;amp;#34;WebsiteRedirectLocation\u0026amp;amp;#34;:null},\u0026amp;amp;#34;URL\u0026amp;amp;#34;:\u0026amp;amp;#34;https://somebucket-log.s3-us-west-2.amazonaws.com/gopher.png?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;amp;amp;X-Amz-Credential=ASIAJ5KB2P6SQ4E7IMMQ%2F20151206%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;amp;amp;X-Amz-Date=20151206T023503Z\u0026amp;amp;amp;X-Amz-Expires=300\u0026amp;amp;amp;X-Amz-Security-Token=AQoDYXdzEFQawAK7vrGb%2BH9lw%2FhEHpR9Yg1KwPmmFcvyMzF7ewFBmxpOkfEM7gLZirMcFFexcxpWv%2F5CVAxpqjRf5FznOYJZHHoBqgmUcKPQZOpYKSbQG768zH5gMNdOANWin1COZU8DyuABrkJYL1bdFpwV7oHgrDmRz2G6oZqqOnfesRHW8WcehSXMV%2BcQFaAcO7IaIMAkRINMIDfxQaa%2FP8i8dbrcOfsEy6UABeaLKL3YgdZIouxcUUKzXQ6Pr4Cgrf0TAyRDAO1t6bVXzv6UFa6j00%2Fm0PYElni7xs5844UFAav%2B1weO2kX65ETzwUxBacAAnuzt%2BmTVPWeikhzgRnjBFn8mQjkZLCJklJJb6QHBO8dph2CSQsh47yw7%2BnexGjAu1y106AA2%2Bfa0WFYC552Q%2FrVVhKU7dejy%2B3jz%2F4LyWdnva9IvmCDVvY6zBQ%3D%3D\u0026amp;amp;amp;X-Amz-SignedHeaders=host\u0026amp;amp;amp;X-Amz-Signature=7d0e6663e043317b5611ddf4ae9f7514aff8c484a31deba524906ba50cbc6a2f\u0026amp;amp;#34;}} ``` Pretty printing the response body: \u0026amp;amp;lt;div class=\u0026amp;amp;#34;highlight\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;lt;pre style=\u0026amp;amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;lt;code class=\u0026amp;amp;#34;language-json\u0026amp;amp;#34; data-lang=\u0026amp;amp;#34;json\u0026amp;amp;#34;\u0026amp;amp;gt;{ \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;code\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;200\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;status\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;OK\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;headers\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;content-type\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;application/json\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;date\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Sun, 06 Dec 2015 02:35:03 GMT\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;content-length\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;1468\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; }, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;results\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;S3\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;AcceptRanges\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;bytes\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Body\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: {}, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;CacheControl\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ContentDisposition\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ContentEncoding\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ContentLanguage\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ContentLength\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;70372\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ContentRange\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ContentType\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;image/png\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;DeleteMarker\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ETag\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;\\\u0026amp;amp;amp;#34;ca1f746d6f232f87fca4e4d94ef6f3ab\\\u0026amp;amp;amp;#34;\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Expiration\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Expires\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;LastModified\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;2015-11-09T15:38:01Z\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Metadata\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: {}, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;MissingMeta\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ReplicationStatus\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;RequestCharged\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Restore\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;SSECustomerAlgorithm\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;SSECustomerKeyMD5\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;SSEKMSKeyId\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;ServerSideEncryption\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;StorageClass\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;VersionId\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;WebsiteRedirectLocation\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt; }, \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;URL\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;https://somebucket-log.s3-us-west-2.amazonaws.com/gopher.png?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026amp;amp;amp;amp;X-Amz-Credential=ASIAJ5KB2P6SQ4E7IMMQ%2F20151206%2Fus-west-2%2Fs3%2Faws4_request\u0026amp;amp;amp;amp;X-Amz-Date=20151206T023503Z\u0026amp;amp;amp;amp;X-Amz-Expires=300\u0026amp;amp;amp;amp;X-Amz-Security-Token=AQoDYXdzEFQawAK7vrGb%2BH9lw%2FhEHpR9Yg1KwPmmFcvyMzF7ewFBmxpOkfEM7gLZirMcFFexcxpWv%2F5CVAxpqjRf5FznOYJZHHoBqgmUcKPQZOpYKSbQG768zH5gMNdOANWin1COZU8DyuABrkJYL1bdFpwV7oHgrDmRz2G6oZqqOnfesRHW8WcehSXMV%2BcQFaAcO7IaIMAkRINMIDfxQaa%2FP8i8dbrcOfsEy6UABeaLKL3YgdZIouxcUUKzXQ6Pr4Cgrf0TAyRDAO1t6bVXzv6UFa6j00%2Fm0PYElni7xs5844UFAav%2B1weO2kX65ETzwUxBacAAnuzt%2BmTVPWeikhzgRnjBFn8mQjkZLCJklJJb6QHBO8dph2CSQsh47yw7%2BnexGjAu1y106AA2%2Bfa0WFYC552Q%2FrVVhKU7dejy%2B3jz%2F4LyWdnva9IvmCDVvY6zBQ%3D%3D\u0026amp;amp;amp;amp;X-Amz-SignedHeaders=host\u0026amp;amp;amp;amp;X-Amz-Signature=7d0e6663e043317b5611ddf4ae9f7514aff8c484a31deba524906ba50cbc6a2f\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; } } \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;```\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Please\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;see\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; [\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;first\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;example\u0026amp;amp;lt;/span\u0026amp;amp;gt;]\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(/reference/apigateway/echo_event)\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;for\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;more\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;information\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;on\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;`code`,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;`status`,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;and\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;`headers`\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;keys.\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;What\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;about\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;an\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;item\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;that\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;we\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;know\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;doesn\u0026amp;amp;amp;#39;t\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;exist,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;but\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;is\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;in\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;bucket\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;our\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;lambda\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;function\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;has\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;privileges\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;access:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;lt;div\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;class=\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;highlight\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;pre\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;style=\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;code\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;class=\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;language-nohighlight\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;data-lang=\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;nohighlight\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;gt;curl\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-vs\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;https://\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com/v\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;/info?keyName=gopher\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;42\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.png\u0026amp;amp;amp;amp;amp;bucketName=somebucket-log\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Trying\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;54.230\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;71.213\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;...\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Connected\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;54.230\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;71.213\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;port\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;443\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;TLS\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.2\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;connection\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;using\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;TLS_ECDHE_RSA_WITH_AES_\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;128\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;_GCM_SHA\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;256\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;certificate:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;certificate:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Symantec\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Class\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Secure\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;CA\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;G\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;certificate:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;VeriSign\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Class\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Public\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Primary\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Certification\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Authority\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;G\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;5\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;GET\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;/v\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;/info?keyName=gopher\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;42\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.png\u0026amp;amp;amp;amp;amp;bucketName=somebucket-log\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;HTTP/\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.1\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Host:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;User-Agent:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;curl/\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;7.43\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Accept:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*/*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;HTTP/\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.1\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;500\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Internal\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Error\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Content-Type:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;application/json\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Content-Length:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;524\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Connection:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;keep-alive\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Date:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Sun,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;06\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Dec\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;2015\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;02\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;40\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;14\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;GMT\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;x-amzn-RequestId:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ad\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;5\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;d\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;94\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;eb\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-9\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;bc\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-11e5\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-8\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;fad\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-476\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;a\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;cacabce\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;X-Cache:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Error\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;from\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;cloudfront\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Via:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.1\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;29\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;bfa\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;9\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;b\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;96\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ea\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;66\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;dc\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;02526\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ee\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;845\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ca\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;b\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.cloudfront.net\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(CloudFront)\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;X-Amz-Cf-Id:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;XoVLBjm\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;dgozZsNAEGk\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;8\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Vy_a\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;5\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;PXMYNWRD\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;eKJJBcVTXrtMgMhiLNyQ==\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Connection\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;host\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;left\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;intact\u0026amp;amp;lt;/span\u0026amp;amp;gt; {\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#34;errorMessage\u0026amp;amp;amp;amp;#34;:\u0026amp;amp;amp;amp;#34;{\\\u0026amp;amp;amp;amp;#34;code\\\u0026amp;amp;amp;amp;#34;:500,\\\u0026amp;amp;amp;amp;#34;status\\\u0026amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;#34;Internal\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Error\\\u0026amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;#34;headers\\\u0026amp;amp;amp;amp;#34;:{\\\u0026amp;amp;amp;amp;#34;content-type\\\u0026amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;#34;text/plain;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;charset=utf-8\\\u0026amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;#34;x-content-type-options\\\u0026amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;#34;nosniff\\\u0026amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;#34;date\\\u0026amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;#34;Sun,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;06\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Dec\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;2015\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;02:40:14\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;GMT\\\u0026amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;#34;content-length\\\u0026amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;#34;60\\\u0026amp;amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;}\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;,\\\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;error\\\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;:\\\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;AccessDenied:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Access\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Denied\\\\n\\\\tstatus\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;code:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;403\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;request\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;id:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\\\\n\\\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;}\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;,\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;errorType\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;:\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;Error\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;,\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;stackTrace\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;[\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;IncomingMessage.\u0026amp;amp;amp;amp;lt;anonymous\u0026amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(/var/task/index.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;68\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;53\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;,\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;IncomingMessage.emit\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(events.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;117\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;20\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;,\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;_stream_readable.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;944\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;16\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;,\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;process._tickCallback\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(node.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;442\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;13\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;]\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;}\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;```\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;And\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;finally,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;what\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;if\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;we\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;try\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;access\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;a\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;bucket\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;that\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;our\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;lambda\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;function\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;isn\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;39\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;t\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;authorized\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;access:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;lt;div\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;class=\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;highlight\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;lt;pre\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;style=\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;color:#f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;8\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;8\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;background-color:#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;272822\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;-moz-tab-size:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;-o-tab-size:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;tab-size:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;lt;code\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;class=\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;language-nohighlight\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;data-lang=\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;nohighlight\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;amp;amp;gt;curl\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-vs\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;https://\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com/v\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;/info?keyName=gopher.png\u0026amp;amp;amp;amp;amp;amp;bucketName=weagle\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Trying\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;54.192\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;70.129\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;...\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Connected\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;54.192\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;70.129\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;port\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;443\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;TLS\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.2\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;connection\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;using\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;TLS_ECDHE_RSA_WITH_AES_\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;128\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;_GCM_SHA\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;256\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;certificate:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;certificate:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Symantec\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Class\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Secure\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;CA\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;G\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;certificate:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;VeriSign\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Class\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Public\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Primary\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Certification\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Authority\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;G\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;5\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;GET\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;/v\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;/info?keyName=gopher.png\u0026amp;amp;amp;amp;amp;amp;bucketName=weagle\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;HTTP/\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.1\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Host:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;User-Agent:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;curl/\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;7.43\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Accept:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*/*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;HTTP/\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.1\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;500\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Internal\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Error\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Content-Type:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;application/json\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Content-Length:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;524\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Connection:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;keep-alive\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Date:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Sun,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;06\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Dec\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;2015\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;02\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;42\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;52\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;GMT\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;x-amzn-RequestId:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;be\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;fc\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-9\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;bc\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-11e5\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-b\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;827-81\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;d\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;99\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;c\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;02192\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;X-Cache:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Error\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;from\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;cloudfront\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Via:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1.1\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;400\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;bdbea\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4e851\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ce\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;61e7\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;df\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;8252\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;da\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;93\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;d\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f.cloudfront.net\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(CloudFront)\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;X-Amz-Cf-Id:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;M_\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;7\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;pB\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;1\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;UsW\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;63\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;xzh_\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;9\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;g\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;37\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;-CqNYDXfXlec\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;B\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;DV\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;bdkq\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;tbCANCOrTY\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Q==\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Connection\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;host\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ux\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;556\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;ho\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;77\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.execute-api.us-west\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;-2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;.amazonaws.com\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;left\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;intact\u0026amp;amp;lt;/span\u0026amp;amp;gt; {\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#34;errorMessage\u0026amp;amp;amp;amp;amp;#34;:\u0026amp;amp;amp;amp;amp;#34;{\\\u0026amp;amp;amp;amp;amp;#34;code\\\u0026amp;amp;amp;amp;amp;#34;:500,\\\u0026amp;amp;amp;amp;amp;#34;status\\\u0026amp;amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;amp;#34;Internal\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Server\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Error\\\u0026amp;amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;amp;#34;headers\\\u0026amp;amp;amp;amp;amp;#34;:{\\\u0026amp;amp;amp;amp;amp;#34;content-type\\\u0026amp;amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;amp;#34;text/plain;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;charset=utf-8\\\u0026amp;amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;amp;#34;x-content-type-options\\\u0026amp;amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;amp;#34;nosniff\\\u0026amp;amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;amp;#34;date\\\u0026amp;amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;amp;#34;Sun,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;06\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Dec\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;2015\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;02:42:52\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;GMT\\\u0026amp;amp;amp;amp;amp;#34;,\\\u0026amp;amp;amp;amp;amp;#34;content-length\\\u0026amp;amp;amp;amp;amp;#34;:\\\u0026amp;amp;amp;amp;amp;#34;60\\\u0026amp;amp;amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;}\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;,\\\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;error\\\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;:\\\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;AccessDenied:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Access\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Denied\\\\n\\\\tstatus\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;code:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;403\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;request\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;id:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\\\\n\\\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;}\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;,\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;errorType\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;:\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;Error\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;,\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;stackTrace\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;[\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;IncomingMessage.\u0026amp;amp;amp;amp;amp;lt;anonymous\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(/var/task/index.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;68\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;53\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;,\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;IncomingMessage.emit\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(events.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;117\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;20\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;,\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;_stream_readable.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;944\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;16\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;,\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;process._tickCallback\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;(node.js:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;442\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;13\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;)\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt;]\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;}\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;```\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;#\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Cleaning\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Up\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Before\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;moving\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;on,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;remember\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;decommission\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;service\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;via:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;div\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;class=\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;highlight\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;pre\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;style=\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;color:#f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;8\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;8\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;f\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;background-color:#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;272822\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;-moz-tab-size:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;-o-tab-size:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;tab-size:\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;4\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;code\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;class=\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;language-nohighlight\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;data-lang=\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;nohighlight\u0026amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;34\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;\u0026amp;amp;amp;amp;amp;gt;go\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;run\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;application.go\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;delete\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;```\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;#\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Wrapping\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Up\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;With\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;this\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;example\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;we\u0026amp;amp;amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;39\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;;ve\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;walked\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;through\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;a\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;simple\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;example\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;that\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;whitelists\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;user\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;input,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;uses\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;IAM\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;Roles\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;limit\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;what\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;S\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;3\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;buckets\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;a\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;lambda\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;function\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;may\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;access,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;and\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;returns\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;JSON\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;data\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;caller.\u0026amp;amp;amp;amp;amp;lt;/code\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;/pre\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;amp;lt;/div\u0026amp;amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;lt;/code\u0026amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;lt;/pre\u0026amp;amp;amp;amp;gt;\u0026amp;amp;amp;amp;lt;/div\u0026amp;amp;amp;amp;gt;\u0026amp;amp;amp;lt;/code\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;/pre\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;/div\u0026amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;/code\u0026amp;amp;gt;\u0026amp;amp;lt;/pre\u0026amp;amp;gt;\u0026amp;amp;lt;/div\u0026amp;amp;gt;\u0026amp;lt;/code\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/apigateway/context/",
	"title": "Request Context",
	"tags": [],
	"description": "",
	"content": " This example demonstrates how to use the Context struct provided as part of the APIGatewayLambdaJSONEvent event. The SpartaGeoIP service will return Geo information based on the inbound request\u0026rsquo;s IP address.\nDefine the Lambda Function Our function will examine the inbound request, lookup the user\u0026rsquo;s IP address in the GeoLite2 Database and return any information to the client.\nAs this function is only expected to be invoked from the API Gateway, we\u0026rsquo;ll unmarshall the inbound event:\nimport ( spartaAWSEvents \u0026quot;github.com/mweagle/Sparta/aws/events\u0026quot; ) func ipGeoLambda(ctx context.Context, apiRequest spartaAWSEvents.APIGatewayRequest) (map[string]interface{}, error) { parsedIP := net.ParseIP(apiRequest.Context.Identity.SourceIP) record, err := dbHandle.City(parsedIP)  We\u0026rsquo;ll then parse the inbound IP address from the Context and perform a lookup against the database handle opened in the init block:\nparsedIP := net.ParseIP(lambdaEvent.Context.Identity.SourceIP) record, err := dbHandle.City(parsedIP) if err != nil { return nil, err }  Finally, marshal the data or error result and we\u0026rsquo;re done:\nrequestResponse := map[string]interface{}{ \u0026quot;ip\u0026quot;: parsedIP, \u0026quot;record\u0026quot;: record, } return requestResponse, nil  Sparta Integration The next steps are to:\n Create the LambdaAWSInfo value Create an associated API Gateway Create an API Gateway resource that invokes our lambda function Add a Method name to the resource.  These four steps are managed in the service\u0026rsquo;s main() function:\n//////////////////////////////////////////////////////////////////////////////// // Main func main() { stage := sparta.NewStage(\u0026quot;ipgeo\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaGeoIPService\u0026quot;, stage) stackName := \u0026quot;SpartaGeoIP\u0026quot; var lambdaFunctions []*sparta.LambdaAWSInfo lambdaFn := sparta.HandleAWSLambda( sparta.LambdaName(ipGeoLambda), ipGeoLambda, sparta.IAMRoleDefinition{}) apiGatewayResource, _ := apiGateway.NewResource(\u0026quot;/info\u0026quot;, lambdaFn) apiGatewayResource.NewMethod(\u0026quot;GET\u0026quot;, http.StatusOK) lambdaFunctions = append(lambdaFunctions, lambdaFn) sparta.Main(stackName, \u0026quot;Sparta app supporting ip-\u0026gt;geo mapping\u0026quot;, lambdaFunctions, apiGateway, nil) }  Provision The next step is to provision the stack:\nS3_BUCKET=\u0026lt;MY-S3-BUCKETNAME\u0026gt; make provision ``` Assuming all goes well, the log output will include the API Gateway URL as in: \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-nohighlight\u0026#34; data-lang=\u0026#34;nohighlight\u0026#34;\u0026gt;INFO[0113] Stack output Description=API Gateway URL Key=APIGatewayURL Value=https://qyslujefsf.execute-api.us-west-2.amazonaws.com/ipgeo INFO[0113] Stack output Description=Sparta Home Key=SpartaHome Value=https://github.com/mweagle/Sparta INFO[0113] Stack output Description=Sparta Version Key=SpartaVersion Value=0.1.0 ``` # Query With the API Gateway provisioned, let\u0026amp;#39;s check the response: \u0026amp;lt;div class=\u0026amp;#34;highlight\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;pre style=\u0026amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;code class=\u0026amp;#34;language-bash\u0026amp;#34; data-lang=\u0026amp;#34;bash\u0026amp;#34;\u0026amp;gt;curl -vs https://qyslujefsf.execute-api.us-west-2.amazonaws.com/ipgeo/info * Trying \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;54\u0026amp;lt;/span\u0026amp;gt;.192.70.206... * Connected to qyslujefsf.execute-api.us-west-2.amazonaws.com \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;(\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;54\u0026amp;lt;/span\u0026amp;gt;.192.70.206\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;)\u0026amp;lt;/span\u0026amp;gt; port \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;443\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;(\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#0) \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;* TLS \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;1\u0026amp;lt;/span\u0026amp;gt;.2 connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 * Server certificate: *.execute-api.us-west-2.amazonaws.com * Server certificate: Symantec Class \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;3\u0026amp;lt;/span\u0026amp;gt; Secure Server CA - G4 * Server certificate: VeriSign Class \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;3\u0026amp;lt;/span\u0026amp;gt; Public Primary Certification Authority - G5 \u0026amp;amp;gt; GET /ipgeo/info HTTP/1.1 \u0026amp;amp;gt; Host: qyslujefsf.execute-api.us-west-2.amazonaws.com \u0026amp;amp;gt; User-Agent: curl/7.43.0 \u0026amp;amp;gt; Accept: */* \u0026amp;amp;gt; \u0026amp;amp;lt; HTTP/1.1 \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;200\u0026amp;lt;/span\u0026amp;gt; OK \u0026amp;amp;lt; Content-Type: application/json \u0026amp;amp;lt; Content-Length: \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;1129\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt; Connection: keep-alive \u0026amp;amp;lt; Date: Sun, \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;06\u0026amp;lt;/span\u0026amp;gt; Dec \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;2015\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;21\u0026amp;lt;/span\u0026amp;gt;:50:18 GMT \u0026amp;amp;lt; x-amzn-RequestId: 572adc18-9c63-11e5-b827-81d99c02192f \u0026amp;amp;lt; X-Cache: Miss from cloudfront \u0026amp;amp;lt; Via: \u0026amp;lt;span style=\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026amp;gt;1\u0026amp;lt;/span\u0026amp;gt;.1 29bfa9b96f4ea66dc02526ee845ca6b0.cloudfront.net \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;(\u0026amp;lt;/span\u0026amp;gt;CloudFront\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;)\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt; X-Amz-Cf-Id: 5mXHuOlbDyk5CejDouAy7nUS3YUn4eXJdQWzU_1VqX9Yh5PE_BdlAw\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;==\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt; * Connection \u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#0 to host qyslujefsf.execute-api.us-west-2.amazonaws.com left intact \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;code\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:200,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;status\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;OK\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;headers\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;content-type\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;application/json\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;date\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Sun, 06 Dec 2015 21:50:18 GMT\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;content-length\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;984\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;results\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;info\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;City\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;GeoNameID\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:0,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Names\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:null\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Continent\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Code\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;NA\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;GeoNameID\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:6255149,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Names\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;de\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Nordamerika\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;en\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;North America\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;es\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Norteamérica\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;fr\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Amérique du Nord\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;ja\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;北アメリカ\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;pt-BR\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;América do Norte\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;ru\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Северная Америка\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;zh-CN\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;北美洲\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Country\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;GeoNameID\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:6252001,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;IsoCode\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;US\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Names\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;de\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;USA\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;en\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;United States\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;es\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Estados Unidos\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;fr\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;États-Unis\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;ja\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;アメリカ合衆国\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;pt-BR\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Estados Unidos\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;ru\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;США\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;zh-CN\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;美国\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Location\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Latitude\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:0,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Longitude\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:0,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;MetroCode\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:0,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;TimeZone\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Postal\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Code\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;RegisteredCountry\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;GeoNameID\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:6252001,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;IsoCode\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;US\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Names\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;de\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;USA\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;en\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;United States\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;es\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Estados Unidos\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;fr\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;États-Unis\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;ja\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;アメリカ合衆国\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;pt-BR\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Estados Unidos\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;ru\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;США\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;zh-CN\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;美国\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;RepresentedCountry\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;GeoNameID\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:0,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;IsoCode\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Names\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:null,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Type\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Subdivisions\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:null,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;Traits\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;IsAnonymousProxy\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:false,\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;IsSatelliteProvider\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;:false\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}}}}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;```\u0026amp;lt;/span\u0026amp;gt; Pretty-printing the response body: \u0026amp;amp;lt;div class\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;highlight\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;lt;pre style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;lt;code class\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;language-json\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt; data-lang\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;json\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;{\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;code\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;200\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;status\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;OK\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;headers\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;content-type\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;application/json\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;date\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Sun, 06 Dec 2015 17:50:15 GMT\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;content-length\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;984\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;results\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;info\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;City\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;GeoNameID\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Names\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Continent\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Code\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;NA\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;GeoNameID\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6255149\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Names\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;de\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Nordamerika\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;en\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;North America\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;es\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Norteamérica\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;fr\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Amérique du Nord\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;ja\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;北アメリカ\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;pt-BR\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;América do Norte\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;ru\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Северная Америка\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;zh-CN\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;北美洲\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Country\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;GeoNameID\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6252001\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;IsoCode\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;US\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Names\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;de\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;USA\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;en\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;United States\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;es\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Estados Unidos\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;fr\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;États-Unis\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;ja\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;アメリカ合衆国\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;pt-BR\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Estados Unidos\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;ru\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;США\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;zh-CN\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;美国\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Location\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Latitude\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Longitude\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;MetroCode\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;TimeZone\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Postal\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Code\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;RegisteredCountry\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;GeoNameID\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;6252001\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;IsoCode\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;US\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Names\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;de\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;USA\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;en\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;United States\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;es\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Estados Unidos\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;fr\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;États-Unis\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;ja\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;アメリカ合衆国\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;pt-BR\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;Estados Unidos\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;ru\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;США\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;zh-CN\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;美国\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;RepresentedCountry\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;GeoNameID\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;amp;gt;0\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;IsoCode\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Names\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Type\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt;, \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Subdivisions\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;null\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;Traits\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: { \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;IsAnonymousProxy\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;false\u0026amp;amp;lt;/span\u0026amp;amp;gt;, \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#f92672\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;IsSatelliteProvider\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;: \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#66d9ef\u0026amp;amp;#34;\u0026amp;amp;gt;false\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;}\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;```\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;Please\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;see\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;[\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;first\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;example\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;]\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;(\u0026amp;lt;/span\u0026amp;gt;/reference/apigateway/echo_event/\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;)\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;for\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;more\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;information\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;on\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;`\u0026amp;lt;/span\u0026amp;gt;code\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;`\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;`\u0026amp;lt;/span\u0026amp;gt;status\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;`\u0026amp;lt;/span\u0026amp;gt;,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;and\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;`\u0026amp;lt;/span\u0026amp;gt;headers\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;keys.\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;#\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;Cleaning\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;Up\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;Before\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;moving\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;on,\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;remember\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;to\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;decommission\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;service\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;via:\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;lt;div\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;class\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;amp;amp;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;#34;highlight\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;pre\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;style=\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;code\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;class=\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;language-nohighlight\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;data-lang=\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#e6db74\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;#34;nohighlight\u0026amp;amp;amp;#34;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;\u0026amp;amp;amp;gt;go\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;run\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;main.go\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style=\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;amp;gt;delete\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;```\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;#\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;Notes\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;The\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;_GeoLite\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;2\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;-Country.mmdb_\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;content\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;is\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;embedded\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;in\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;go\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;binary\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;via\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;[\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;esc\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;]\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;(\u0026amp;lt;/span\u0026amp;gt;https://github.com/mjibson/esc\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;)\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;as\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;part\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;of\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;the\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;[\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;go\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;generate\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;]\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;(\u0026amp;lt;/span\u0026amp;gt;https://github.com/mweagle/SpartaGeoIP/blob/master/main.go#L\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;27\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;)\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;phase.\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;*\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;This\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;is\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;a\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;port\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;of\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;Tom\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;Maiaroto\u0026amp;amp;amp;amp;#\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#ae81ff\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;39\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;;s\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;https://github.com/tmaiaroto/go-lambda-geoip\u0026amp;amp;lt;/span\u0026amp;amp;gt; \u0026amp;amp;lt;span style\u0026amp;lt;span style=\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026amp;gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style=\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026amp;gt;\u0026amp;amp;#34;color:#960050;background-color:#1e0010\u0026amp;amp;#34;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt;implementation.\u0026amp;amp;amp;lt;/code\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;/pre\u0026amp;amp;amp;gt;\u0026amp;amp;amp;lt;/div\u0026amp;amp;amp;gt;\u0026amp;amp;lt;/span\u0026amp;amp;gt;\u0026amp;amp;lt;/code\u0026amp;amp;gt;\u0026amp;amp;lt;/pre\u0026amp;amp;gt;\u0026amp;amp;lt;/div\u0026amp;amp;gt;\u0026amp;lt;/code\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/cli_options/",
	"title": "CLI Options",
	"tags": [],
	"description": "",
	"content": "Sparta applications delegate func main() responsibilities to one of Sparta\u0026rsquo;s Main entrypoints (Main, MainEx). This provides each application with some standard command line options as shown below:\n$ go run main.go --help Simple Sparta application that demonstrates core functionality Usage: main [command] Available Commands: delete Delete service describe Describe service execute Start the application and begin handling events explore Interactively explore a provisioned service help Help about any command profile Interactively examine service pprof output provision Provision service status Produce a report for a provisioned service version Display version information Flags: -f, --format string Log format [text, json] (default \u0026#34;text\u0026#34;) -h, --help help for main --ldflags string Go linker string definition flags (https://golang.org/cmd/link/) -l, --level string Log level [panic, fatal, error, warn, info, debug] (default \u0026#34;info\u0026#34;) --nocolor Boolean flag to suppress colorized TTY output -n, --noop Dry-run behavior only (do not perform mutations) -t, --tags string Optional build tags for conditional compilation -z, --timestamps Include UTC timestamp log line prefix Use \u0026#34;main [command] --help\u0026#34; for more information about a command. ``` It\u0026#39;s also possible to add [custom flags](/reference/application/custom_flags) and/or [custom commands](/reference/application/custom_commands) to extend your application\u0026#39;s behavior. These command line options are briefly described in the following sections. For the most up to date information, use the `--help` subcommand option. # Standard Commands  ## Delete  This simply deletes the stack (if present). Attempting to delete a non-empty stack is not treated as an error. ## Describe  The `describe` command line option produces an HTML summary (see [graph.html](/images/overview/graph.html) for an example) of your Sparta service. The report also includes the automatically generated CloudFormation template which can be helpful when diagnosing provisioning errors. ## Execute  This command is used when the cross compiled binary is provisioned in AWS lambda. It is not (typically) applicable to the local development workflow. ## Explore  The `explore` option creates a terminal GUI that supports interactive exploration of lambda functions deployed to AWS. This ui recursively searches for all _*.json_ files in the source tree to populate the set of eligible events that can be submitted. ![Explore](/images/explore.jpg \u0026#34;Explore\u0026#34;) ## Profile  The `profile` command line option enters an interactive session where a previously profiled application can be locally visualized using snapshots posted to S3 and provided to a local [pprof ui](https://rakyll.org/pprof-ui/). ## Provision  The `provision` option is the subcommand most likely to be used during development. It provisions the Sparta application to AWS Lambda. ## Status  The `status` option queries AWS for the current stack status and produces an optionally account-id redacted report. Stack outputs, tags, and other metadata are included in the status report: \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-bash\u0026#34; data-lang=\u0026#34;bash\u0026#34;\u0026gt;$ go run main.go status --redact INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ════════════════════════════════════════════════ INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ╔═╗╔═╗╔═╗╦═╗╔╦╗╔═╗ Version : \u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;1\u0026lt;/span\u0026gt;.5.0 INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ╚═╗╠═╝╠═╣╠╦╝ ║ ╠═╣ SHA : 8f199e1 INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ╚═╝╩ ╩ ╩╩╚═ ╩ ╩ ╩ Go : go1.11.1 INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ════════════════════════════════════════════════ INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; Service: MyHelloWorldStack-mweagle LinkFlags\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; Option\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;status UTC\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;2018-10-14T12:28:18Z\u0026amp;#34;\u0026lt;/span\u0026gt; INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ════════════════════════════════════════════════ INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0001\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; StackId Id\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;arn:aws:cloudformation:us-west-2:************:stack/MyHelloWorldStack-mweagle/5817dff0-c5f1-11e8-b43a-503ac9841a99\u0026amp;#34;\u0026lt;/span\u0026gt; INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0001\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; Stack status State\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;UPDATE_COMPLETE INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0001\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; Created Time\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;2018-10-02 03:14:59.127 +0000 UTC\u0026amp;#34;\u0026lt;/span\u0026gt; INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0001\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; Last Update Time\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;2018-10-06 14:20:40.267 +0000 UTC\u0026amp;#34;\u0026lt;/span\u0026gt; INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0001\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; Tag io:gosparta:buildId\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;7ee3e1bc52f15c4a636e05061eaec7b748db22a9\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; ## Version  The `version` option is a diagnostic command that prints the version of the Sparta framework embedded in the application. \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-bash\u0026#34; data-lang=\u0026#34;bash\u0026#34;\u0026gt;$ go run main.go version INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ════════════════════════════════════════════════ INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ╔═╗╔═╗╔═╗╦═╗╔╦╗╔═╗ Version : \u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;1\u0026lt;/span\u0026gt;.5.0 INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ╚═╗╠═╝╠═╣╠╦╝ ║ ╠═╣ SHA : 8f199e1 INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ╚═╝╩ ╩ ╩╩╚═ ╩ ╩ ╩ Go : go1.11.1 INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ════════════════════════════════════════════════ INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; Service: MyHelloWorldStack-mweagle LinkFlags\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; Option\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;version UTC\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;2018-10-14T12:27:36Z\u0026amp;#34;\u0026lt;/span\u0026gt; INFO\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0000\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; ════════════════════════════════════════════════\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/apigateway/cors/",
	"title": "CORS",
	"tags": [],
	"description": "",
	"content": " Cross Origin Resource Sharing defines a protocol by which resources on different domains may establish whether cross site operations are permissible.\nSparta makes CORS support a single CORSEnabled field of the API struct:\n// Register the function with the API Gateway apiStage := sparta.NewStage(\u0026quot;v1\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaHTML\u0026quot;, apiStage) // Enable CORS s.t. the S3 site can access the resources apiGateway.CORSEnabled = true  Setting the boolean to true will add the necessary OPTIONS and mock responses to all resources exposed by your API. See the SpartaHTML sample for a complete example.\nCustomization Sparta provides two ways to customize the CORS headers available:\n Via the apigateway.CORSOptions field. Customization may use the S3Site.CloudformationS3ResourceName to get the WebsiteURL value so that the CORS origin options can be minimally scoped.  References  API Gateway Docs  "
},
{
	"uri": "/reference/deployment_strategies/",
	"title": "Deployment Strategies",
	"tags": [],
	"description": "",
	"content": " TODO\n Deployment Strategies Document the SpartaSafeDeploy example.\n"
},
{
	"uri": "/sample_service/step2/",
	"title": "Details",
	"tags": [],
	"description": "",
	"content": " The Overview walked through a simple \u0026ldquo;Hello World\u0026rdquo; example. In this section we\u0026rsquo;ll cover how Sparta works in preparation for moving on to more advanced use. Most development will use the provision command line argument, so this section will outline exactly what that entails.\nProvisioning Flow The provisioning workflow is defined in provision.go, with a goal of marshalling all AWS operations into a CloudFormation template. Where CloudFormation does not support a given service, Sparta falls back to using Lambda-backed Custom Resources in the template definition.\nAt a high level, provisioning uses the flow below. We\u0026rsquo;ll dive a bit deeper into each stage in the following sections.\nmermaid.initialize({startOnLoad:true}); graph TD classDef stdOp fill:#FFF,stroke:#A00,stroke-width:2px; classDef userHook fill:#B5B2A1,stroke:#A00,stroke-width:2px,stroke-dasharray: 5, 5; iam[Verify Static IAM Roles] class iam stdOp; preBuild[WorkflowHook - PreBuild] class preBuild userHook; compile[Cross Compile for AWS AMI] postBuild[WorkflowHook - PostBuild] class postBuild userHook; package[ZIP archive] class package stdOp; userArchive[WorkflowHook - Archive] class userArchive userHook; upload[Upload Archive to S3] packageAssets[Conditionally ZIP S3 Site Assets] uploadAssets[Upload S3 Assets] class upload,packageAssets,uploadAssets stdOp; preMarshall[WorkflowHook - PreMarshall] class preMarshall userHook; generate[Marshal to CloudFormation] class generate stdOp; decorate[Call Lambda Decorators - Dynamic AWS Resources] class decorate stdOp; serviceDecorator[Service Decorator] class serviceDecorator userHook; postMarshall[WorkflowHook - PostMarshall] class postMarshall stdOp; uploadTemplate[Upload Template to S3] updateStack[Create/Update Stack] inplaceUpdates[In-place λ code updates] wait[Wait for Complete/Failure Result] class uploadTemplate,updateStack,inplaceUpdates,wait stdOp; iam--preBuild preBuild--|go|compile compile--postBuild postBuild--package package--packageAssets package--userArchive userArchive--upload packageAssets--uploadAssets uploadAssets--generate upload--generate generate--preMarshall preMarshall--decorate decorate--serviceDecorator serviceDecorator--postMarshall postMarshall--uploadTemplate uploadTemplate--|standard|updateStack uploadTemplate--|inplace|inplaceUpdates updateStack--wait  This diagram is rendered with Mermaid. Please open an issue if it doesn't render properly. Verify Static IAM Roles The HandleAWSLambda function accepts either a string or a sparta.IAMRoleDefinition value type. In the event that a string is passed, this function verifies that the IAM role exists and builds up a cache of IAM role information that can be shared and referenced during template generation. Specifically, a pre-existing IAM Role ARN is cached to minimize AWS calls during template generation.\nCompile The next step is to cross compile the application to a binary that can be executed on an AWS Lambda instance. The default compile flags are:\n TAGS: -tags lambdabinary ENVIRONMENT: GOOS=linux GOARCH=amd64  The build output is created in the _./.sparta/ working directory. The full set of build flags is available by running the provision workflow with the --level debug option.\nPackage The end result of the package phase is a ZIP archive of your application. You can inspect this archive, as well as any other Sparta artifacts in the ./.sparta directory by supplying the --noop argument during a provision operation.\nUpload Archive To S3 Uploads the archive to S3. There\u0026rsquo;s not much else to see here.\nGenerate CloudFormation Template Uploading the archive produces a valid CodeURI value that can be used for Lambda function creation. The CloudFormation template is generated by marshaling the sparta.LambdaAWSInfo objects into CloudFormation JSON representations.\nThe AWS Lambda marshaling is automatically handled. This is also the point at which the optional TemplateDecorator functions are called to annocate the automatically generated template with additional resources.\nUpload CloudFormation Template to S3 Uploads the template to S3 to maximize template size. There\u0026rsquo;s not much else to see here.\nCreate/Update Stack Finally, the provisioning workflow determines whether the Sparta serviceName exists and either creates or updates as appropriate using CloudFormation APIs.\nNext Steps Now that we\u0026rsquo;ve covered how Sparta handles provisioning your stack, we\u0026rsquo;re ready to expand functionality to leverge more of the AWS ecosystem in the next section.\n"
},
{
	"uri": "/reference/discovery/",
	"title": "Discovery Service",
	"tags": [],
	"description": "",
	"content": " Introduction The ability to provision dynamic infrastructure (see also the SES Event Source Example) as part of a Sparta application creates a need to discover those resources at lambda execution time.\nSparta exposes this functionality via sparta.Discover. This function returns information about the current stack (eg, name, region, ID) as well as metadata about the immediate dependencies of the calling go lambda function.\nThe following sections walk through provisioning a S3 bucket, declaring an explicit dependency on that resource, and then discovering the resource at lambda execution time. It is extracted from appendDynamicS3BucketLambda in the SpartaApplication source.\nIf you haven\u0026rsquo;t already done so, please review the Dynamic Infrastructure section for background on dynamic infrastructure provisioning.\nDiscovery For reference, we provision an S3 bucket and declare an explicit dependency with the code below. Because our gocf.S3Bucket{} struct uses a zero-length BucketName property, CloudFormation will dynamically assign one.\ns3BucketResourceName := sparta.CloudFormationResourceName(\u0026quot;S3DynamicBucket\u0026quot;) lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoS3DynamicBucketEvent), echoS3DynamicBucketEvent, sparta.IAMRoleDefinition{}) lambdaFn.Permissions = append(lambdaFn.Permissions, sparta.S3Permission{ BasePermission: sparta.BasePermission{ SourceArn: gocf.Ref(s3BucketResourceName), }, Events: []string{\u0026quot;s3:ObjectCreated:*\u0026quot;, \u0026quot;s3:ObjectRemoved:*\u0026quot;}, }) lambdaFn.DependsOn = append(lambdaFn.DependsOn, s3BucketResourceName) // Add permission s.t. the lambda function could read from the S3 bucket lambdaFn.RoleDefinition.Privileges = append(lambdaFn.RoleDefinition.Privileges, sparta.IAMRolePrivilege{ Actions: []string{\u0026quot;s3:GetObject\u0026quot;, \u0026quot;s3:HeadObject\u0026quot;}, Resource: spartaCF.S3AllKeysArnForBucket(gocf.Ref(s3BucketResourceName)), }) lambdaFn.Decorator = func(serviceName string, lambdaResourceName string, lambdaResource gocf.LambdaFunction, resourceMetadata map[string]interface{}, S3Bucket string, S3Key string, buildID string, template *gocf.Template, context map[string]interface{}, logger *logrus.Logger) error { cfResource := template.AddResource(s3BucketResourceName, \u0026amp;gocf.S3Bucket{ AccessControl: gocf.String(\u0026quot;PublicRead\u0026quot;), Tags: \u0026amp;gocf.TagList{gocf.Tag{ Key: gocf.String(\u0026quot;SpecialKey\u0026quot;), Value: gocf.String(\u0026quot;SpecialValue\u0026quot;), }, }, }) cfResource.DeletionPolicy = \u0026quot;Delete\u0026quot; return nil }  The key to sparta.Discovery is the DependsOn slice value.\nTemplate Marshaling \u0026amp; Decoration By default, Sparta uses CloudFormation to update service state. During template marshaling, Sparta scans for DependsOn relationships and propagates information (immediate-children only) across CloudFormation resource definitions. Most importantly, this information includes Ref and any other outputs of referred resources. This information then becomes available as a DisocveryInfo value returned by sparta.Discovery(). Behind the scenes, Sparta\nSample DiscoveryInfo In our example, a DiscoveryInfo from a sample stack might be:\n{ \u0026#34;ResourceID\u0026#34;: \u0026#34;mainechoS3DynamicBucketEventLambda41ca034273726cf36154137cbf8d7e5bd45f863a\u0026#34;, \u0026#34;Region\u0026#34;: \u0026#34;us-west-2\u0026#34;, \u0026#34;StackID\u0026#34;: \u0026#34;arn:aws:cloudformation:us-west-2:123412341234:stack/SpartaApplication-mweagle/d4e07d80-03eb-11e8-b6fd-50d5ca789e4a\u0026#34;, \u0026#34;StackName\u0026#34;: \u0026#34;SpartaApplication-mweagle\u0026#34;, \u0026#34;Resources\u0026#34;: { \u0026#34;S3DynamicBucket62b0e7a664dc29c1c4fbe231fbcef30f8463aaa3\u0026#34;: { \u0026#34;ResourceID\u0026#34;: \u0026#34;S3DynamicBucket62b0e7a664dc29c1c4fbe231fbcef30f8463aaa3\u0026#34;, \u0026#34;ResourceRef\u0026#34;: \u0026#34;spartaapplication-mweagl-s3dynamicbucket62b0e7a66-194zzvtfk757a\u0026#34;, \u0026#34;ResourceType\u0026#34;: \u0026#34;AWS::S3::Bucket\u0026#34;, \u0026#34;Properties\u0026#34;: { \u0026#34;DomainName\u0026#34;: \u0026#34;spartaapplication-mweagl-s3dynamicbucket62b0e7a66-194zzvtfk757a.s3.amazonaws.com\u0026#34;, \u0026#34;WebsiteURL\u0026#34;: \u0026#34;http://spartaapplication-mweagl-s3dynamicbucket62b0e7a66-194zzvtfk757a.s3-website-us-west-2.amazonaws.com\u0026#34; } } } } ``` This JSON data is Base64 encoded and published into the Lambda function\u0026#39;s _Environment_ using the `SPARTA_DISCOVERY_INFO` key. The `sparta.Discover()` function is responsible for accessing the encoded discovery information: ```go configuration, _ := sparta.Discover() bucketName := \u0026#34;\u0026#34; for _, eachResource := range configuration.Resources { if eachResource.ResourceType == \u0026#34;AWS::S3::Bucket\u0026#34; { bucketName = eachResource.ResourceRef } } ``` The `Properties` object includes resource-specific [Fn::GetAtt](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html) outputs (see each resource type\u0026#39;s [documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html) for the complete set) # Wrapping Up Combined with [dynamic infrastructure](/reference/dynamic_infrastructure), `sparta.Discover()` enables a Sparta service to define its entire AWS infrastructure requirements. Coupling application logic with infrastructure requirements moves a service towards being completely self-contained and in the direction of [immutable infrastructure](https://fugue.co/oreilly/). # Notes - `sparta.Discovery()` **only** succeeds within a Sparta-compliant lambda function call block. - Call-site restrictions are validated in the [discovery_tests.go](https://github.com/mweagle/Sparta/blob/master/discovery_test.go) tests. "
},
{
	"uri": "/reference/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": " TODO\n Docker Support Document the SpartaDocker project.\n"
},
{
	"uri": "/reference/dynamic_infrastructure/",
	"title": "Dynamic Infrastructure",
	"tags": [],
	"description": "",
	"content": " Introduction In addition to provisioning AWS Lambda functions, Sparta supports the creation of other CloudFormation Resources. This enables a service to move towards immutable infrastructure, where the service and its infrastructure requirements are treated as a logical unit.\nFor instance, consider the case where two developers are working in the same AWS account.\n Developer 1 is working on analyzing text documents.  Their lambda code is triggered in response to uploading sample text documents to S3.  Developer 2 is working on image recognition.  Their lambda code is triggered in response to uploading sample images to S3.   graph LR sharedBucket[S3 Bucket] dev1Lambda[Dev1 LambdaCode] dev2Lambda[Dev2 LambdaCode] sharedBucket -- dev1Lambda sharedBucket -- dev2Lambda  Using a shared, externally provisioned S3 bucket has several impacts:\n Adding conditionals in each lambda codebase to scope valid processing targets. Ambiguity regarding which codebase handled an event. Infrastructure ownership/lifespan management. When a service is decommissioned, its infrastructure requirements may be automatically decommissioned as well.  Eg, \u0026ldquo;Is this S3 bucket in use by any service?\u0026rdquo;.  Overly permissive IAM roles due to static Arns.  Eg, \u0026ldquo;Arn hugging\u0026rdquo;.  Contention updating the shared bucket\u0026rsquo;s notification configuration.  Alternatively, each developer could provision and manage disjoint topologies:\ngraph LR dev1S3Bucket[Dev1 S3 Bucket] dev1Lambda[Dev1 LambdaCode] dev2S3Bucket[Dev2 S3 Bucket] dev2Lambda[Dev2 LambdaCode] dev1S3Bucket -- dev1Lambda dev2S3Bucket -- dev2Lambda  Enabling each developer to create other AWS resources also means more complex topologies can be expressed. These topologies can benefit from CloudWatch monitoring (eg, per-Lambda Metrics ) without the need to add custom metrics.\ngraph LR dev1S3Bucket[Dev1 S3 Bucket] dev1Lambda[Dev1 LambdaCode] dev2S3Bucket[Dev2 S3 Images Bucket] dev2PNGLambda[Dev2 PNG LambdaCode] dev2JPGLambda[Dev2 JPEG LambdaCode] dev2TIFFLambda[Dev2 TIFF LambdaCode] dev2S3VideoBucket[Dev2 VideoBucket] dev2VideoLambda[Dev2 Video LambdaCode] dev1S3Bucket -- dev1Lambda dev2S3Bucket --|SuffixFilter=*.PNG|dev2PNGLambda dev2S3Bucket --|SuffixFilter=*.JPEG,*.JPG|dev2JPGLambda dev2S3Bucket --|SuffixFilter=*.TIFF|dev2TIFFLambda dev2S3VideoBucket --dev2VideoLambda  Sparta supports Dynamic Resources via TemplateDecoratorHandler satisfying types.\nTemplate Decorator Handler A template decorator is a go interface:\ntype TemplateDecoratorHandler interface { DecorateTemplate(serviceName string, lambdaResourceName string, lambdaResource gocf.LambdaFunction, resourceMetadata map[string]interface{}, S3Bucket string, S3Key string, buildID string, template *gocf.Template, context map[string]interface{}, logger *logrus.Logger) error }  Clients use go-cloudformation types for CloudFormation resources and template.AddResource to add them to the *template parameter. After a decorator is invoked, Sparta also verifies that the user-supplied function did not add entities that that collide with the internally-generated ones.\nUnique Resource Names CloudFormation uses Logical IDs as resource key names.\nTo minimize collision likelihood, Sparta publishes CloudFormationResourceName(prefix, \u0026hellip;parts) to generate compliant identifiers. To produce content-based hash values, callers can provide a non-empty set of values as the ...parts variadic argument. This produces stable identifiers across Sparta execution (which may affect availability during updates).\nWhen called with only a single value (eg: CloudFormationResourceName(\u0026quot;myResource\u0026quot;)), Sparta will return a random resource name that is NOT stable across executions.\nExample - S3 Bucket Let\u0026rsquo;s work through an example to make things a bit more concrete. We have the following requirements:\n Our lambda function needs a immutable-infrastructure compliant S3 bucket Our lambda function should be notified when items are created or deleted from the bucket Our lambda function must be able to access the contents in the bucket (not shown below)  Lambda Function To start with, we\u0026rsquo;ll need a Sparta lambda function to expose:\nimport ( awsLambdaEvents \u0026quot;github.com/aws/aws-lambda-go/events\u0026quot; ) func echoS3DynamicBucketEvent(ctx context.Context, s3Event awsLambdaEvents.S3Event) (*awsLambdaEvents.S3Event, error) { logger, _ := ctx.Value(sparta.ContextKeyRequestLogger).(*logrus.Entry) discoveryInfo, discoveryInfoErr := sparta.Discover() logger.WithFields(logrus.Fields{ \u0026quot;Event\u0026quot;: s3Event, \u0026quot;Discovery\u0026quot;: discoveryInfo, \u0026quot;DiscoveryErr\u0026quot;: discoveryInfoErr, }).Info(\u0026quot;Event received\u0026quot;) return \u0026amp;s3Event, nil }  For brevity our demo function doesn\u0026rsquo;t access the S3 bucket objects. To support that please see the sparta.Discover functionality.\nS3 Resource Name The next thing we need is a Logical ID for our bucket:\ns3BucketResourceName := sparta.CloudFormationResourceName(\u0026quot;S3DynamicBucket\u0026quot;, \u0026quot;myServiceBucket\u0026quot;)  Sparta Integration With these two values we\u0026rsquo;re ready to get started building up the lambda function:\nlambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoS3DynamicBucketEvent), echoS3DynamicBucketEvent, sparta.IAMRoleDefinition{})  The open issue is how to publish the CloudFormation-defined S3 Arn to the compile-time application. Our lambda function needs to provide both:\n IAMRolePrivilege values that reference the (as yet) undefined Arn. S3Permission values to configure our lambda\u0026rsquo;s event triggers on the (as yet) undefined Arn.  The missing piece is gocf.Ref(), whose single argument is the Logical ID of the S3 resource we\u0026rsquo;ll be inserting in the decorator call.\nDynamic IAM Role Privilege The IAMRolePrivilege struct references the dynamically assigned S3 Arn as follows:\nlambdaFn.Permissions = append(lambdaFn.Permissions, sparta.S3Permission{ BasePermission: sparta.BasePermission{ SourceArn: gocf.Ref(s3BucketResourceName), }, Events: []string{\u0026quot;s3:ObjectCreated:*\u0026quot;, \u0026quot;s3:ObjectRemoved:*\u0026quot;}, }) lambdaFn.DependsOn = append(lambdaFn.DependsOn, s3BucketResourceName)  Dynamic S3 Permissions The S3Permission struct also requires the dynamic Arn, to which it will append \u0026quot;/*\u0026quot; to enable object read access.\nlambdaFn.RoleDefinition.Privileges = append(lambdaFn.RoleDefinition.Privileges, sparta.IAMRolePrivilege{ Actions: []string{\u0026quot;s3:GetObject\u0026quot;, \u0026quot;s3:HeadObject\u0026quot;}, Resource: spartaCF.S3AllKeysArnForBucket(gocf.Ref(s3BucketResourceName)), })  The spartaCF.S3AllKeysArnForBucket call is a convenience wrapper around gocf.Join to generate the concatenated, dynamic Arn expression.\nS3 Resource Insertion All that\u0026rsquo;s left to do is actually insert the S3 resource in our decorator:\ns3Decorator := func(serviceName string, lambdaResourceName string, lambdaResource gocf.LambdaFunction, resourceMetadata map[string]interface{}, S3Bucket string, S3Key string, buildID string, template *gocf.Template, context map[string]interface{}, logger *logrus.Logger) error { cfResource := template.AddResource(s3BucketResourceName, \u0026amp;gocf.S3Bucket{ AccessControl: gocf.String(\u0026quot;PublicRead\u0026quot;), Tags: \u0026amp;gocf.TagList{gocf.Tag{ Key: gocf.String(\u0026quot;SpecialKey\u0026quot;), Value: gocf.String(\u0026quot;SpecialValue\u0026quot;), }, }, }) cfResource.DeletionPolicy = \u0026quot;Delete\u0026quot; return nil } lambdaFn.Decorators = []sparta.TemplateDecoratorHandler{ sparta.TemplateDecoratorHookFunc(s3Decorator), }  Dependencies In reality, we shouldn\u0026rsquo;t even attempt to create the AWS Lambda function if the S3 bucket creation fails. As application developers, we can help CloudFormation sequence infrastructure operations by stating this hard dependency on the S3 bucket via the DependsOn attribute:\nlambdaFn.DependsOn = append(lambdaFn.DependsOn, s3BucketResourceName)  Code Listing Putting everything together, our Sparta lambda function with dynamic infrastructure is listed below.\ns3BucketResourceName := sparta.CloudFormationResourceName(\u0026quot;S3DynamicBucket\u0026quot;) lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(echoS3DynamicBucketEvent), echoS3DynamicBucketEvent, sparta.IAMRoleDefinition{}) // Our lambda function requires the S3 bucket lambdaFn.DependsOn = append(lambdaFn.DependsOn, s3BucketResourceName) // Add a permission s.t. the lambda function could read from the S3 bucket lambdaFn.RoleDefinition.Privileges = append(lambdaFn.RoleDefinition.Privileges, sparta.IAMRolePrivilege{ Actions: []string{\u0026quot;s3:GetObject\u0026quot;, \u0026quot;s3:HeadObject\u0026quot;}, Resource: spartaCF.S3AllKeysArnForBucket(gocf.Ref(s3BucketResourceName)), }) // Configure the S3 event source lambdaFn.Permissions = append(lambdaFn.Permissions, sparta.S3Permission{ BasePermission: sparta.BasePermission{ SourceArn: gocf.Ref(s3BucketResourceName), }, Events: []string{\u0026quot;s3:ObjectCreated:*\u0026quot;, \u0026quot;s3:ObjectRemoved:*\u0026quot;}, }) // Actually add the resource lambdaFn.Decorator = func(lambdaResourceName string, lambdaResource gocf.LambdaFunction, template *gocf.Template, logger *logrus.Logger) error { cfResource := template.AddResource(s3BucketResourceName, \u0026amp;gocf.S3Bucket{ AccessControl: gocf.String(\u0026quot;PublicRead\u0026quot;), }) cfResource.DeletionPolicy = \u0026quot;Delete\u0026quot; return nil }  Wrapping Up Sparta provides an opportunity to bring infrastructure management into the application programming model. It\u0026rsquo;s still possible to use literal Arn strings, but the ability to include other infrastructure requirements brings a service closer to being self-contained and more operationally sustainable.\nNotes  The echoS3DynamicBucketEvent function can also access the bucket Arn via sparta.Discover. See the DeletionPolicy documentation regarding S3 management. CloudFormation resources also publish other outputs that can be retrieved via gocf.GetAtt. go-cloudformation exposes gocf.Join to create compound, dynamic expressions.  See the CloudWatch docs on Fn::Join for more information.   "
},
{
	"uri": "/reference/hybrid_topologies/",
	"title": "Hybrid Topologies",
	"tags": [],
	"description": "",
	"content": " Introduction At a broad level, AWS Lambda represents a new level of compute abstraction for services. Developers don\u0026rsquo;t immediately concern themselves with HA topologies, configuration management, capacity planning, or many of the other areas traditionally handled by operations. These are handled by the vendor supplied execution environment.\nHowever, Lambda is a relatively new technology and is not ideally suited to certain types of tasks. For example, given the current Lambda limits, the following task types might better be handled by \u0026ldquo;legacy\u0026rdquo; AWS services:\n Long running tasks Tasks with significant disk space requirements Large HTTP(S) I/O tasks  It may also make sense to integrate EC2 when:\n Applications are being gradually decomposed into Lambda functions Latency-sensitive request paths can\u0026rsquo;t afford cold container startup times Price/performance justifies using EC2 Using EC2 as a failover for system-wide Lambda outages  For such cases, Sparta supports running the exact same binary on EC2. This section describes how to create a single Sparta service that publishes a function via AWS Lambda and EC2 as part of the same application codebase. It\u0026rsquo;s based on the SpartaOmega project.\nMixed Topology Deploying your application to a mixed topology is accomplished by combining existing Sparta features. There is no \u0026ldquo;make mixed\u0026rdquo; command line option.\nAdd Custom Command Line Option The first step is to add a custom command line option. This command option will be used when your binary is running in \u0026ldquo;mixed topology\u0026rdquo; mode. The SpartaOmega project starts up a localhost HTTP server, so we\u0026rsquo;ll add a httpServer command line option with:\n// Custom command to startup a simple HelloWorld HTTP server httpServerCommand := \u0026amp;cobra.Command{ Use: \u0026quot;httpServer\u0026quot;, Short: \u0026quot;Sample HelloWorld HTTP server\u0026quot;, Long: `Sample HelloWorld HTTP server that binds to port: ` + HTTPServerPort, RunE: func(cmd *cobra.Command, args []string) error { http.HandleFunc(\u0026quot;/\u0026quot;, helloWorldResource) return http.ListenAndServe(fmt.Sprintf(\u0026quot;:%d\u0026quot;, HTTPServerPort), nil) }, } sparta.CommandLineOptions.Root.AddCommand(httpServerCommand)  Our command doesn\u0026rsquo;t accept any additional flags. If your command needs additional user flags, consider adding a ParseOptions call to validate they are properly set.\nCreate CloudInit Userdata The next step is to write a user-data script that will be used to configure your EC2 instance(s) at startup. Your script is likely to differ from the one below, but at a minimum it will include code to download and unzip the archive containing your Sparta binary.\n#!/bin/bash -xe #!/bin/bash -xe SPARTA_OMEGA_BINARY_PATH=/home/ubuntu/{{.SpartaBinaryName}} ################################################################################ # # Tested on Ubuntu 16.04 # # AMI: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20160516.1 (ami-06b94666) if [ ! -f \u0026#34;/home/ubuntu/userdata.sh\u0026#34; ] then curl -vs http://169.254.169.254/latest/user-data -o /home/ubuntu/userdata.sh chmod +x /home/ubuntu/userdata.sh fi # Install everything service supervisor stop || true apt-get update -y apt-get upgrade -y apt-get install supervisor awscli unzip git -y ################################################################################ # Our own binary aws s3 cp s3://{{ .S3Bucket }}/{{ .S3Key }} /home/ubuntu/application.zip unzip -o /home/ubuntu/application.zip -d /home/ubuntu chmod +x $SPARTA_OMEGA_BINARY_PATH ################################################################################ # SUPERVISOR # REF: http://supervisord.org/ # Cleanout secondary directory mkdir -pv /etc/supervisor/conf.d SPARTA_OMEGA_SUPERVISOR_CONF=\u0026#34;[program:spartaomega] command=$SPARTA_OMEGA_BINARY_PATHhttpServer numprocs=1 directory=/tmp priority=999 autostart=true autorestart=unexpected startsecs=10 startretries=3 exitcodes=0,2 stopsignal=TERM stopwaitsecs=10 stopasgroup=false killasgroup=false user=ubuntu stdout_logfile=/var/log/spartaomega.log stdout_logfile_maxbytes=1MB stdout_logfile_backups=10 stdout_capture_maxbytes=1MB stdout_events_enabled=false redirect_stderr=false stderr_logfile=spartaomega.err.log stderr_logfile_maxbytes=1MB stderr_logfile_backups=10 stderr_capture_maxbytes=1MB stderr_events_enabled=false \u0026#34; echo \u0026#34;$SPARTA_OMEGA_SUPERVISOR_CONF\u0026#34; \u0026gt; /etc/supervisor/conf.d/spartaomega.conf # Patch up the directory chown -R ubuntu:ubuntu /home/ubuntu # Startup Supervisor service supervisor restart || service supervisor start ``` The script uses the command line option (`command=$SPARTA_OMEGA_BINARY_PATH httpServer`) that was defined in the first step. It also uses the `S3Bucket` and `S3Key` properties that Sparta creates during the build and provides to your decorator function (next section). ### Notes  The script is using [text/template](https://golang.org/pkg/text/template/) markup to expand properties known at build time. Because this content will be parsed by [ConvertToTemplateExpression](https://godoc.org/github.com/mweagle/Sparta/aws/cloudformation#ConvertToTemplateExpression) (next section), it\u0026#39;s also possible to use [Fn::Join](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-join.html) compatible JSON serializations (single line only) to reference properties that are known only during CloudFormation provision time. For example, if we were also provisioning a PostgreSQL instance and needed to dynamically discover the endpoint address, a shell script variable could be assigned via: \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-bash\u0026#34; data-lang=\u0026#34;bash\u0026#34;\u0026gt;POSTGRES_ADDRESS\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;={\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Fn::GetAtt\u0026amp;#34;\u0026lt;/span\u0026gt; : \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;{{ .DBInstanceResourceName }}\u0026amp;#34;\u0026lt;/span\u0026gt; , \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Endpoint.Address\u0026amp;#34;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; This expression combines both a build-time variable \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;`\u0026lt;/span\u0026gt;DBInstanceResourceName\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;`\u0026lt;/span\u0026gt;: the CloudFormation resource name\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; and a provision time one \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;`\u0026lt;/span\u0026gt;Endpoint.Address\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;`\u0026lt;/span\u0026gt;: dynamically assigned by the CloudFormation \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;RDS Resource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;))\u0026lt;/span\u0026gt;. \u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;## Decorate Toplogy \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; The final step is to use a \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;TemplateDecorator\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;https://godoc.org/github.com/mweagle/Sparta#TemplateDecorator\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; to tie everything together. A decorator can annotate the CloudFormation template with any supported \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;go-cloudformation\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;https://github.com/crewjam/go-cloudformation\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; resource. For this example, we\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#39;ll create a single AutoScalingGroup and EC2 instance that\u0026amp;#39;\u0026lt;/span\u0026gt;s bootstrapped with our custom _userdata.sh_ script.  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;go // The CloudFormation template decorator that inserts all the other // AWS components we need to support this deployment... func lambdaDecorator\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;customResourceAMILookupName string\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; sparta.TemplateDecorator \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;return\u0026lt;/span\u0026gt; func\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;serviceName string, lambdaResourceName string, lambdaResource gocf.LambdaFunction, resourceMetadata map\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;string\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt;interface\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{}\u0026lt;/span\u0026gt;, S3Bucket string, S3Key string, buildID string, cfTemplate *gocf.Template, context map\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;string\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt;interface\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{}\u0026lt;/span\u0026gt;, logger *logrus.Logger\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; error \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; // Create the launch configuration with Metadata to download the ZIP file, unzip it \u0026amp;amp; launch the // golang binary... ec2SecurityGroupResourceName :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; sparta.CloudFormationResourceName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaSecurityGroup\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaSecurityGroup\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  asgLaunchConfigurationName :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; sparta.CloudFormationResourceName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaASGLaunchConfig\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaASGLaunchConfig\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  asgResourceName :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; sparta.CloudFormationResourceName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaASG\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaASG\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  ec2InstanceRoleName :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; sparta.CloudFormationResourceName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaEC2InstanceRole\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaEC2InstanceRole\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  ec2InstanceProfileName :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; sparta.CloudFormationResourceName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaEC2InstanceProfile\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmegaEC2InstanceProfile\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  ////////////////////////////////////////////////////////////////////////////// // \u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;1\u0026lt;/span\u0026gt; - Create the security group \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; the SpartaOmega EC2 instance ec2SecurityGroup :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; \u0026amp;amp;gocf.EC2SecurityGroup\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; GroupDescription: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SpartaOmega Security Group\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  SecurityGroupIngress: \u0026amp;amp;gocf.EC2SecurityGroupRuleList\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; gocf.EC2SecurityGroupRule\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; CidrIp: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;0.0.0.0/0\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  IpProtocol: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;tcp\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  FromPort: gocf.Integer\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;HTTPServerPort\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, ToPort: gocf.Integer\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;HTTPServerPort\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt;, gocf.EC2SecurityGroupRule\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; CidrIp: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;0.0.0.0/0\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  IpProtocol: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;tcp\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  FromPort: gocf.Integer\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;22\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, ToPort: gocf.Integer\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;22\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; template.AddResource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;ec2SecurityGroupResourceName, ec2SecurityGroup\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; ////////////////////////////////////////////////////////////////////////////// // \u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;2\u0026lt;/span\u0026gt; - Create the ASG and associate the userdata with the EC2 init // EC2 Instance Role... statements :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; sparta.CommonIAMStatements.Core // Add the statement that allows us to fetch the S3 object with this compiled // binary statements \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; append\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;statements, spartaIAM.PolicyStatement\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; Effect: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Allow\u0026amp;#34;\u0026lt;/span\u0026gt;,  Action: \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[]\u0026lt;/span\u0026gt;string\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;s3:GetObject\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt;,  Resource: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;fmt.Sprintf\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;arn:aws:s3:::%s/%s\u0026amp;#34;\u0026lt;/span\u0026gt;, S3Bucket, S3Key\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;))\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;})\u0026lt;/span\u0026gt; iamPolicyList :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; gocf.IAMPoliciesList\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{}\u0026lt;/span\u0026gt; iamPolicyList \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; append\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;iamPolicyList, gocf.IAMPolicies\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; PolicyDocument: sparta.ArbitraryJSONObject\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Version\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;2012-10-17\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Statement\u0026amp;#34;\u0026lt;/span\u0026gt;: statements,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt;, PolicyName: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;EC2Policy\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; ec2InstanceRole :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; \u0026amp;amp;gocf.IAMRole\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; AssumeRolePolicyDocument: sparta.AssumePolicyDocument, Policies: \u0026amp;amp;iamPolicyList, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; template.AddResource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;ec2InstanceRoleName, ec2InstanceRole\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; // Create the instance profile ec2InstanceProfile :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; \u0026amp;amp;gocf.IAMInstanceProfile\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; Path: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;/\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  Roles: \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[]\u0026lt;/span\u0026gt;gocf.Stringable\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt;gocf.Ref\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;ec2InstanceRoleName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;()}\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; template.AddResource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;ec2InstanceProfileName, ec2InstanceProfile\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; //Now setup the properties map, expand the userdata, and attach it... userDataProps :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; map\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;string\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt;interface\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{}{\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;S3Bucket\u0026amp;#34;\u0026lt;/span\u0026gt;: S3Bucket,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;S3Key\u0026amp;#34;\u0026lt;/span\u0026gt;: S3Key,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;ServiceName\u0026amp;#34;\u0026lt;/span\u0026gt;: serviceName,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; userDataTemplateInput, userDataTemplateInputErr :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; resources.FSString\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;false, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;/resources/source/userdata.sh\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;if\u0026lt;/span\u0026gt; nil !\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; userDataTemplateInputErr \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;return\u0026lt;/span\u0026gt; userDataTemplateInputErr \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; templateReader :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; strings.NewReader\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;userDataTemplateInput\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; userDataExpression, userDataExpressionErr :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; spartaCF.ConvertToTemplateExpression\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;templateReader, userDataProps\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;if\u0026lt;/span\u0026gt; nil !\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; userDataExpressionErr \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;return\u0026lt;/span\u0026gt; userDataExpressionErr \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; logger.WithFields\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;logrus.Fields\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Parameters\u0026amp;#34;\u0026lt;/span\u0026gt;: userDataProps,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Expanded\u0026amp;#34;\u0026lt;/span\u0026gt;: userDataExpression,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;})\u0026lt;/span\u0026gt;.Debug\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Expanded userdata\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;  asgLaunchConfigurationResource :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; \u0026amp;amp;gocf.AutoScalingLaunchConfiguration\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; ImageId: gocf.GetAtt\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;customResourceAMILookupName, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;HVM\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  InstanceType: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;t2.micro\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  KeyName: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;SSHKeyName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, IamInstanceProfile: gocf.Ref\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;ec2InstanceProfileName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;()\u0026lt;/span\u0026gt;, UserData: gocf.Base64\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;userDataExpression\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, SecurityGroups: gocf.StringList\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;gocf.GetAtt\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;ec2SecurityGroupResourceName, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;GroupId\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;))\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; launchConfigResource :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; template.AddResource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;asgLaunchConfigurationName, asgLaunchConfigurationResource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; launchConfigResource.DependsOn \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; append\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;launchConfigResource.DependsOn, customResourceAMILookupName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; // Create the ASG asgResource :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; \u0026amp;amp;gocf.AutoScalingAutoScalingGroup\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; // Empty Region is equivalent to all region AZs // Ref: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getavailabilityzones.html AvailabilityZones: gocf.GetAZs\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;))\u0026lt;/span\u0026gt;,  LaunchConfigurationName: gocf.Ref\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;asgLaunchConfigurationName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;()\u0026lt;/span\u0026gt;, MaxSize: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;1\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  MinSize: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;1\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; template.AddResource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;asgResourceName, asgResource\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;return\u0026lt;/span\u0026gt; nil \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; There are a few things to point out in this \u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;function\u0026lt;/span\u0026gt;: * **Security Groups** - The decorator adds an ingress rule so that the endpoint is publicly accessible: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;go gocf.EC2SecurityGroupRule\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; CidrIp: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;0.0.0.0/0\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  IpProtocol: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;tcp\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;,  FromPort: gocf.Integer\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;HTTPServerPort\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, ToPort: gocf.Integer\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;HTTPServerPort\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; * **IAM Role** - In order to download the S3 archive, the EC2 IAM Policy includes a custom privilege: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;go statements \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; append\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;statements, spartaIAM.PolicyStatement\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; Effect: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Allow\u0026amp;#34;\u0026lt;/span\u0026gt;,  Action: \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[]\u0026lt;/span\u0026gt;string\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;s3:GetObject\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt;,  Resource: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;fmt.Sprintf\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;arn:aws:s3:::%s/%s\u0026amp;#34;\u0026lt;/span\u0026gt;, S3Bucket, S3Key\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;))\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;})\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; * **UserData Marshaling** - Marshaling the _userdata.sh_ script is handled by \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;`\u0026lt;/span\u0026gt;ConvertToTemplateExpression\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;`\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;go // Now setup the properties map, expand the userdata, and attach it... userDataProps :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; map\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;string\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt;interface\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{}{\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;S3Bucket\u0026amp;#34;\u0026lt;/span\u0026gt;: S3Bucket,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;S3Key\u0026amp;#34;\u0026lt;/span\u0026gt;: S3Key,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;ServiceName\u0026amp;#34;\u0026lt;/span\u0026gt;: serviceName,  \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; // ... templateReader :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; strings.NewReader\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;userDataTemplateInput\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; userDataExpression, userDataExpressionErr :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; spartaCF.ConvertToTemplateExpression\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;templateReader, userDataProps\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; // ... asgLaunchConfigurationResource :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; \u0026amp;amp;gocf.AutoScalingLaunchConfiguration\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; // ... UserData: gocf.Base64\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;userDataExpression\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, // ... \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; * **Custom Command Line Flags** - To externalize the SSH Key Name, the binary expects a \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;custom flag\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;/reference/application/custom_flags\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;not shown above\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;go // And add the SSHKeyName option to the provision step sparta.CommandLineOptions.Provision.Flags\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;()\u0026lt;/span\u0026gt;.StringVarP\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026amp;amp;SSHKeyName, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;key\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;k\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;\u0026amp;#34;\u0026lt;/span\u0026gt;,  \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;SSH Key Name to use for EC2 instances\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; This value is used as an input to the AutoScalingLaunchConfiguration value: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;go asgLaunchConfigurationResource :\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; \u0026amp;amp;gocf.AutoScalingLaunchConfiguration\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;{\u0026lt;/span\u0026gt; // ... KeyName: gocf.String\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;SSHKeyName\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;, // ... \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;}\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;# Result \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; Deploying your Go application using a mixed topology enables your \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Lambda\u0026amp;#34;\u0026lt;/span\u0026gt; endpoint to be addressable via AWS Lambda and standard HTTP.  \u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;## HTTP Access \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026amp;lt;div class\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;highlight\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;lt;pre style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;lt;code class\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;language-bash\u0026amp;#34;\u0026lt;/span\u0026gt; data-lang\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;bash\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;$ curl -vs http://ec2-52-26-146-138.us-west-2.compute.amazonaws.com:9999/ * Trying \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;52\u0026amp;lt;/span\u0026amp;gt;.26.146.138... * Connected to ec2-52-26-146-138.us-west-2.compute.amazonaws.com \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;52\u0026amp;lt;/span\u0026amp;gt;.26.146.138\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt; port \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;9999\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;(\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;#0\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;amp;gt; GET / HTTP/1.1 \u0026amp;amp;gt; Host: ec2-52-26-146-138.us-west-2.compute.amazonaws.com:9999 \u0026amp;amp;gt; User-Agent: curl/7.43.0 \u0026amp;amp;gt; Accept: */* \u0026amp;amp;gt; \u0026amp;amp;lt; HTTP/1.1 \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;200\u0026amp;lt;/span\u0026amp;gt; OK \u0026amp;amp;lt; Date: Fri, \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;10\u0026amp;lt;/span\u0026amp;gt; Jun \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;2016\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;14\u0026amp;lt;/span\u0026amp;gt;:58:15 GMT \u0026amp;amp;lt; Content-Length: \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;29\u0026amp;lt;/span\u0026amp;gt; \u0026amp;amp;lt; Content-Type: text/plain; charset\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;utf-8 \u0026amp;amp;lt; * Connection \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;#0 to host ec2-52-26-146-138.us-west-2.compute.amazonaws.com left intact \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;Hello world from SpartaOmega! \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;  \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;## Lambda Access \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; !\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;Lambda\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;/images/alternative_topology/lambda.jpg\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;  \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;# Conclusion \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; Mixed topology deployment is a powerful feature that enables your application to choose the right set of resources. It provides a way \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;for\u0026amp;lt;/span\u0026amp;gt; services to non-destructively migrate to AWS Lambda or shift existing Lambda workloads to alternative compute resources.  \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;# Notes \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt; - The \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;SpartaOmega\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;https://github.com/mweagle/SpartaOmega\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt; sample application uses \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;supervisord\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;http://supervisord.org/\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;for\u0026amp;lt;/span\u0026amp;gt; process monitoring.  - The current _userdata.sh_ script isn\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026amp;amp;\u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;#39;t sufficient to reconfigure in response to CloudFormation update events. Production systems should also include [cfn-hup](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-hup.html) listeners. \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#75715e\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt; - Production deployments may consider \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;CodeDeploy\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;https://aws.amazon.com/codedeploy/\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; to assist in HA binary rollover. \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt; - Forwarding \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;CloudWatch Logs\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/WhatIsCloudWatchLogs.html\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; is not handled by this sample. \u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt; - Consider using HTTPS \u0026amp;amp;amp; \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;Let\u0026amp;amp;#39;\u0026amp;lt;/span\u0026amp;gt;s Encrypt\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;](\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt;https://ivopetkov.com/b/let-s-encrypt-on-ec2/\u0026amp;lt;span style\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026amp;gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt;\u0026amp;lt;/span\u0026amp;gt; on your EC2 instances.\u0026amp;lt;/code\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/local_testing/",
	"title": "Local Testing",
	"tags": [],
	"description": "",
	"content": "While developing Sparta lambda functions it may be useful to test them locally without needing to provision each new code change. You can test your lambda functions using standard go test functionality.\nTo create proper event types, consider:\n AWS Lambda Go types Sparta types Use NewAPIGatewayMockRequest to generate API Gateway style requests.  "
},
{
	"uri": "/reference/profiling/",
	"title": "Profiling",
	"tags": [],
	"description": "",
	"content": " Introduction One of Lambda\u0026rsquo;s biggest strengths, its ability to automatically scale across ephemeral containers in response to increased load, also creates one of its biggest problems: observability. The traditional set of tools used to identify performance bottlenecks are no longer valid, as there is no host into which one can SSH and interactively interrogate. Identifying performance bottlenecks is even more significant due to the Lambda pricing model, where idle time often directly translates into increased costs.\nHowever, Go offers the excellent pprof tool to visualize and cost allocate program execution. Beginning with Sparta 0.20.4, it\u0026rsquo;s possible to enable per-lambda instance snapshotting which can be locally visualized. This documentation provides an overview of how to enable profiling. The full source is available at the SpartaPProf repo.\nTo learn more about pprof itself, please visit:\n @rakyll\u0026rsquo;s blog Profiling Go programs with pprof Profiling Golang Profiling and optimizing Go web programs  Enabling Profiling To enable profiling add a reference to ScheduleProfileLoop in your main() function as in:\nsparta.ScheduleProfileLoop(nil, 5*time.Second, 30*time.Second, \u0026quot;goroutine\u0026quot;, \u0026quot;heap\u0026quot;, \u0026quot;threadcreate\u0026quot;, \u0026quot;block\u0026quot;, \u0026quot;mutex\u0026quot;)  This function accepts the following arguments:\n s3Bucket: The S3 bucket to which profile snapshots should be written. If nil, the bucket used to host the original ZIP code archive is used. snapshotInterval - The interval between each snapshot. cpuProfileDuration - The duration for the CPUProfile sample. profileNames... - The profile types to snapshot. In addition to the standard profiles, Sparta includes a \u0026ldquo;cpu\u0026rdquo; profile iff the cpuProfileDuration is non-zero.  Profiling Implementation During the provision step, the ScheduleProfileLoop adds an IAMRolePrivilege Allow entry (if possible) to each Lambda function\u0026rsquo;s IAM policy. This policy extension is a minimal privilege and only enables s3:PutObject against the Sparta managed key prefix (see below).\nThe provision implementation also annotates the Lambda\u0026rsquo;s Environment map so that the publishing loop knows where to publish snapshots.\nDuring the execute step when the Sparta binary is executing in AWS Lambda, the ScheduleProfileLoop installs the requested sampling and publishing steps so that profile snapshots, serialized as proto files, are properly saved to S3. Profiles are published to a reserved location in S3 with the form:\ns3:://{BUCKET_NAME}/sparta/pprof/{STACK_NAME}/profiles/{PROFILE_TYPE}/{SNAPSHOT_INDEX}-{PROFILE_TYPE}.λ-{INSTANCE_ID}.profile\nTo manage profile sprawl, each lambda instance uses a rolling SNAPSHOT_INDEX to maintain a fixed size window. The new profile command is responsible for aggregating them into a single local, consolidated profile that can be visualized using the existing tools.\nDeploying With profiling enabled, the next step is to deploy the SpartaPProf service using the provision command:\n$ go run main.go provision --s3Bucket MY-S3-BUCKET INFO[0000] ════════════════════════════════════════════════ INFO[0000] ╔═╗╔═╗╔═╗╦═╗╔╦╗╔═╗ Version : 1.4.0 INFO[0000] ╚═╗╠═╝╠═╣╠╦╝ ║ ╠═╣ SHA : 8f199e1 INFO[0000] ╚═╝╩ ╩ ╩╩╚═ ╩ ╩ ╩ Go : go1.11.1 INFO[0000] ════════════════════════════════════════════════ INFO[0000] Service: SpartaPProf-mweagle LinkFlags= Option=provision UTC=\u0026#34;2018-10-11T14:59:48Z\u0026#34; INFO[0000] ════════════════════════════════════════════════ INFO[0000] Using `git` SHA for StampedBuildID Command=\u0026#34;git rev-parse HEAD\u0026#34; SHA=c3fbe8c289c3184efec842dca56b9bf541f39d21 INFO[0000] Provisioning service BuildID=c3fbe8c289c3184efec842dca56b9bf541f39d21 CodePipelineTrigger= InPlaceUpdates=false NOOP=false Tags= INFO[0000] Verifying IAM Lambda execution roles INFO[0000] IAM roles verified Count=2 INFO[0000] Checking S3 versioning Bucket=MY-S3-BUCKET VersioningEnabled=true INFO[0000] Checking S3 region Bucket=MY-S3-BUCKET Region=us-west-2 INFO[0000] Running `go generate` INFO[0000] Compiling binary Name=Sparta.lambda.amd64 INFO[0002] Creating code ZIP archive for upload TempName=./.sparta/SpartaPProf_mweagle-code.zip INFO[0002] Lambda code archive size Size=\u0026#34;17 MB\u0026#34; INFO[0002] Uploading local file to S3 Bucket=MY-S3-BUCKET Key=SpartaPProf-mweagle/SpartaPProf_mweagle-code.zip Path=./.sparta/SpartaPProf_mweagle-code.zip Size=\u0026#34;17 MB\u0026#34; INFO[0009] Calling WorkflowHook ServiceDecoratorHook= WorkflowHookContext=\u0026#34;map[]\u0026#34; INFO[0009] Uploading local file to S3 Bucket=MY-S3-BUCKET Key=SpartaPProf-mweagle/SpartaPProf_mweagle-cftemplate.json Path=./.sparta/SpartaPProf_mweagle-cftemplate.json Size=\u0026#34;7.1 kB\u0026#34; INFO[0010] Issued CreateChangeSet request StackName=SpartaPProf-mweagle INFO[0013] Issued ExecuteChangeSet request StackName=SpartaPProf-mweagle INFO[0026] CloudFormation Metrics ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ INFO[0026] Operation duration Duration=11.71s Resource=SpartaPProf-mweagle Type=\u0026#34;AWS::CloudFormation::Stack\u0026#34; INFO[0026] Operation duration Duration=1.60s Resource=HelloWorldLambda7d01d27fe422d278bcc652b4a989528718eb88af Type=\u0026#34;AWS::Lambda::Function\u0026#34; INFO[0026] Operation duration Duration=1.33s Resource=KinesisLogConsumerLambda275ace0435c45228161570811178ce06fbcb359c Type=\u0026#34;AWS::Lambda::Function\u0026#34; INFO[0026] Stack Outputs ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ INFO[0026] HelloWorldFunctionARN Description=\u0026#34;Hello World Lambda ARN\u0026#34; Value=\u0026#34;arn:aws:lambda:us-west-2:123412341234:function:SpartaPProf-mweagle_Hello_World\u0026#34; INFO[0026] KinesisLogConsumerFunctionARN Description=\u0026#34;KinesisLogConsumer Lambda ARN\u0026#34; Value=\u0026#34;arn:aws:lambda:us-west-2:123412341234:function:SpartaPProf-mweagle_KinesisLogConsumer\u0026#34; INFO[0026] Stack provisioned CreationTime=\u0026#34;2018-10-03 23:34:21.142 +0000 UTC\u0026#34; StackId=\u0026#34;arn:aws:cloudformation:us-west-2:123412341234:stack/SpartaPProf-mweagle/da781540-c764-11e8-9bf1-0aceeffcea3c\u0026#34; StackName=SpartaPProf-mweagle INFO[0026] ════════════════════════════════════════════════ INFO[0026] SpartaPProf-mweagle Summary INFO[0026] ════════════════════════════════════════════════ INFO[0026] Verifying IAM roles Duration (s)=0 INFO[0026] Verifying AWS preconditions Duration (s)=1 INFO[0026] Creating code bundle Duration (s)=2 INFO[0026] Uploading code Duration (s)=8 INFO[0026] Ensuring CloudFormation stack Duration (s)=17 INFO[0026] Total elapsed time Duration (s)=27 Generating Load While the SpartaPProf binary does include functions that are likely to generate profiling data, we still need to issue a sufficient series of events to produce a non-empty profile data set. SpartaPProf includes a simple tool (cmd/load.go) that directly calls the provisioned lambda function on a regular interval. It accepts a single command line argument, the ARN of the lambda function listed as a Stack output in the log output:\nINFO[0058] FunctionARN Description=\u0026#34;Lambda function ARN\u0026#34; Value=\u0026#34;arn:aws:lambda:us-west-2:123412341234:function:SpartaPProf_mweagle_Hello_World\u0026#34; Run the simple load generation script with the ARN value as in:\n$ cd cmd $ go run load.go arn:aws:lambda:us-west-2:012345678910:function:SpartaPProf-mweagle-Hello_World Lambda response (0 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (1 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (2 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (3 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (4 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (5 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (6 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (7 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (8 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (9 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (10 of 60): \u0026#34;Hi there 🌍\u0026#34; Lambda response (11 of 60): \u0026#34;Hi there 🌍\u0026#34; ... After all the requests have completed for this sample against a stack provisioned in us-west-2, a set of named profiles was published. Since each container\u0026rsquo;s instance id is randomly assigned, the profile names you see will have slightly different names\n--------------------------------------------------------------- S3 bucket: s3://weagle/sparta/pprof/SpartaPProf-mweagle/profiles --------------------------------------------------------------- 2017-11-26 11:32:28 41 Bytes sparta/pprof/SpartaPProf-mweagle/profiles/block/0-block.λ-3838737145763622974.profile 2017-11-26 11:32:27 1.8 KiB sparta/pprof/SpartaPProf-mweagle/profiles/cpu/0-cpu.λ-3838737145763622974.profile 2017-11-26 11:32:28 1.8 KiB sparta/pprof/SpartaPProf-mweagle/profiles/goroutine/0-goroutine.λ-3838737145763622974.profile 2017-11-26 11:32:28 2.2 KiB sparta/pprof/SpartaPProf-mweagle/profiles/heap/0-heap.λ-3838737145763622974.profile 2017-11-26 11:32:28 54 Bytes sparta/pprof/SpartaPProf-mweagle/profiles/mutex/0-mutex.λ-3838737145763622974.profile 2017-11-26 11:32:30 200 Bytes sparta/pprof/SpartaPProf-mweagle/profiles/threadcreate/0-threadcreate.λ-3838737145763622974.profile Visualizing Profiles Sparta delegates to the pprof webui to visualize profile snapshots. Ensure you have the latest version of this by running go get -u -v go get github.com/google/pprof first.\nThe final step is to provide the profile snapshots to pprof. Sparta exposes a profile command that accomplishes this, by fetching and consolidating all published profiles for a single type.\n$ go run main.go profile --s3Bucket weagle INFO[0000] ════════════════════════════════════════════════ INFO[0000] ╔═╗┌─┐┌─┐┬─┐┌┬┐┌─┐ Version : 1.0.2 INFO[0000] ╚═╗├─┘├─┤├┬┘ │ ├─┤ SHA : b37b93e INFO[0000] ╚═╝┴ ┴ ┴┴└─ ┴ ┴ ┴ Go : go1.9.2 INFO[0000] ════════════════════════════════════════════════ INFO[0000] Service: SpartaPProf-mweagle LinkFlags= Option=profile UTC=\u0026#34;2018-01-29T15:23:18Z\u0026#34; INFO[0000] ════════════════════════════════════════════════ ? Which stack would you like to profile: SpartaPProf-mweagle ? What type of profile would you like to view? heap ? What profile snapshot(s) would you like to view? Download new snapshots from S3 ? Please select a heap profile type: alloc_space INFO[0028] Refreshing cached profiles CacheRoot=.sparta/profiles/SpartaPProf-mweagle/heap ProfileRootKey=sparta/pprof/SpartaPProf-mweagle/profiles/heap S3Bucket=MY-S3-BUCKET StackName=SpartaPProf-mweagle Type=heap INFO[0028] Aggregating profile Input=\u0026#34;.sparta/profiles/SpartaPProf-mweagle/heap/0-heap.λ-8850662459689822644.profile\u0026#34; INFO[0028] Consolidating profiles ProfileCount=1 INFO[0028] Creating consolidated profile ConsolidatedProfile=.sparta/heap.consolidated.profile INFO[0028] Starting pprof webserver on http://localhost:8080. Enter Ctrl+C to exit. The profile command downloads the published profiles and consolidates them into a single cached version in the ./sparta directory with a name of the form:\n./.sparta/{PROFILE_TYPE}.consolidated.profile\nYou can choose to use the cached file if it exists.\nFor this sample run, the heap profile output is made available to the pprof webserver which produces the following layout:\nThe latest pprof also includes flamegraph support to help identify issues:\nTo view another profile type, enter Ctrl+C to exit the blocking web ui loop and launch another profile session.\nConclusion Go includes a very powerful set of tools that can help diagnose performance bottlenecks. With the Sparta profile command, it\u0026rsquo;s possible to bring that same visibility to bear to AWS Lambda, despite running on ephemeral, (typically) unaddressable hosts. Get started optimizing today! And also, don\u0026rsquo;t forget to disable the profiling loop before pushing to production.\nNotes  CPU Flame Graphs provides a great overview. It\u0026rsquo;s not currently possible to use custom profiles Lambda instances are limited to a window size of 3 rolling snapshots The explore command also exposes the pprof web handlers for local exploration as well.  "
},
{
	"uri": "/reference/s3site/",
	"title": "S3 Sites with CORS",
	"tags": [],
	"description": "",
	"content": " Sparta supports provisioning an S3-backed static website as part of provisioning. We\u0026rsquo;ll walk through provisioning a minimal Bootstrap website that accesses API Gateway lambda functions provisioned by a single service in this example.\nThe source for this is the SpartaHTML example application.\nCreate the Lambda function We\u0026rsquo;ll start by creating a very simple lambda function:\nimport ( spartaAPIG \u0026quot;github.com/mweagle/Sparta/aws/apigateway\u0026quot; spartaAWSEvents \u0026quot;github.com/mweagle/Sparta/aws/events\u0026quot; ) type helloWorldResponse struct { Message string Request spartaAWSEvents.APIGatewayRequest } //////////////////////////////////////////////////////////////////////////////// // Hello world event handler func helloWorld(ctx context.Context, gatewayEvent spartaAWSEvents.APIGatewayRequest) (*helloWorldResponse, *spartaAPIG.Error) { logger, loggerOk := ctx.Value(sparta.ContextKeyLogger).(*logrus.Logger) if loggerOk { logger.Info(\u0026quot;Hello world structured log message\u0026quot;) } // Return a message, together with the incoming input... return \u0026amp;helloWorldResponse{ Message: fmt.Sprintf(\u0026quot;Hello world 🌏\u0026quot;), Request: gatewayEvent, }, nil }  This lambda function returns a reply that consists of the inbound request plus a sample message. See the API Gateway examples for more information.\nCreate the API Gateway The next step is to create an API Gateway instance and Stage, so that the API will be publicly available.\napiStage := sparta.NewStage(\u0026quot;v1\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaHTML\u0026quot;, apiStage)  Since we want to be able to access this API from another domain (the one provisioned by the S3 bucket), we\u0026rsquo;ll need to enable CORS as well:\n// Enable CORS s.t. the S3 site can access the resources apiGateway.CORSEnabled = true  Finally, we register the helloWorld lambda function with an API Gateway resource:\nfunc spartaLambdaFunctions(api *sparta.API) []*sparta.LambdaAWSInfo { var lambdaFunctions []*sparta.LambdaAWSInfo lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(helloWorld), helloWorld, iamDynamicRole) if nil != api { apiGatewayResource, _ := api.NewResource(\u0026quot;/hello\u0026quot;, lambdaFn) _, err := apiGatewayResource.NewMethod(\u0026quot;GET\u0026quot;, http.StatusOK) if nil != err { panic(\u0026quot;Failed to create /hello resource\u0026quot;) } } return append(lambdaFunctions, lambdaFn) }  Define the S3 Site The next part is to define the S3 site resources via sparta.NewS3Site(localFilePath). The localFilePath parameter typically points to a directory, which will be:\n Recursively ZIP\u0026rsquo;d Posted to S3 alongside the Lambda code archive and CloudFormation Templates Dynamically unpacked by a CloudFormation CustomResource during provision to a new S3 bucket.  Provision Putting it all together, our main() function looks like:\n//////////////////////////////////////////////////////////////////////////////// // Main func main() { // Register the function with the API Gateway apiStage := sparta.NewStage(\u0026quot;v1\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaHTML\u0026quot;, apiStage) // Enable CORS s.t. the S3 site can access the resources apiGateway.CORSEnabled = true // Provision a new S3 bucket with the resources in the supplied subdirectory s3Site, _ := sparta.NewS3Site(\u0026quot;./resources\u0026quot;) // Deploy it sparta.Main(\u0026quot;SpartaHTML\u0026quot;, fmt.Sprintf(\u0026quot;Sparta app that provisions a CORS-enabled API Gateway together with an S3 site\u0026quot;), spartaLambdaFunctions(apiGateway), apiGateway, s3Site) }  which can be provisioned using the standard command line option.\nThe Outputs section of the provision command includes the hostname of our new S3 site:\nINFO[0092] ──────────────────────────────────────────────── INFO[0092] Stack Outputs INFO[0092] ──────────────────────────────────────────────── INFO[0092] S3SiteURL Description=\u0026#34;S3 Website URL\u0026#34; Value=\u0026#34;http://spartahtml-mweagle-s3site89c05c24a06599753eb3ae4e-9kil6qlqk0yt.s3-website-us-west-2.amazonaws.com\u0026#34; INFO[0092] APIGatewayURL Description=\u0026#34;API Gateway URL\u0026#34; Value=\u0026#34;https://ksuo0qlc3m.execute-api.us-west-2.amazonaws.com/v1\u0026#34; INFO[0092] ──────────────────────────────────────────────── ``` Open your browser to the `S3SiteURL` value (eg: _http://spartahtml-mweagle-s3site89c05c24a06599753eb3ae4e-9kil6qlqk0yt.s3-website-us-west-2.amazonaws.com_) and view the deployed site. # Discover An open issue is how to communicate the dynamically assigned API Gateway hostname to the dynamically provisioned S3 site. As part of expanding the ZIP archive to a target S3 bucket, Sparta also creates a _MANIFEST.json_ discovery file with discovery information. If your application has provisioned an APIGateway this JSON file will include that dynamically assigned URL as in: 1. **MANIFEST.json** \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-json\u0026#34; data-lang=\u0026#34;json\u0026#34;\u0026gt;{ \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;APIGatewayURL\u0026amp;#34;\u0026lt;/span\u0026gt;: { \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Description\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;API Gateway URL\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Value\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;https://r3zq0apo1g.execute-api.us-west-2.amazonaws.com/v1\u0026amp;#34;\u0026lt;/span\u0026gt; } } \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;#\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;References\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;*\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;See\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Medium\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://read.acloud.guru/go-aws-lambda-building-an-html-website-with-api-gateway-and-lambda-for-go-using-sparta\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;-5e6\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;fe\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;79\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;f\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;63\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;ef)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;post\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;an\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;additional\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;walk\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;through\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;this\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;sample.\u0026lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/apigateway/slack/",
	"title": "Slack SlashCommand",
	"tags": [],
	"description": "",
	"content": " In this example, we\u0026rsquo;ll walk through creating a Slack Slash Command service. The source for this is the SpartaSlackbot repo.\nOur initial command handler won\u0026rsquo;t be very sophisticated, but will show the steps necessary to provision and configure a Sparta AWS Gateway-enabled Lambda function.\nDefine the Lambda Function This lambda handler is a bit more complicated than the other examples, primarily because of the Slack Integration requirements. The full source is:\nimport ( spartaAWSEvents \u0026quot;github.com/mweagle/Sparta/aws/events\u0026quot; ) //////////////////////////////////////////////////////////////////////////////// // Hello world event handler // func helloSlackbot(ctx context.Context, apiRequest spartaAWSEvents.APIGatewayRequest) (map[string]interface{}, error) { logger, _ := ctx.Value(sparta.ContextKeyLogger).(*logrus.Logger) bodyParams, bodyParamsOk := apiRequest.Body.(map[string]interface{}) if !bodyParamsOk { return nil, fmt.Errorf(\u0026quot;Failed to type convert body. Type: %T\u0026quot;, apiRequest.Body) } logger.WithFields(logrus.Fields{ \u0026quot;BodyType\u0026quot;: fmt.Sprintf(\u0026quot;%T\u0026quot;, bodyParams), \u0026quot;BodyValue\u0026quot;: fmt.Sprintf(\u0026quot;%+v\u0026quot;, bodyParams), }).Info(\u0026quot;Slack slashcommand values\u0026quot;) // 2. Create the response // Slack formatting: // https://api.slack.com/docs/formatting responseText := \u0026quot;Here's what I understood\u0026quot; for eachKey, eachParam := range bodyParams { responseText += fmt.Sprintf(\u0026quot;\\n*%s*: %+v\u0026quot;, eachKey, eachParam) } // 4. Setup the response object: // https://api.slack.com/slash-commands, \u0026quot;Responding to a command\u0026quot; responseData := map[string]interface{}{ \u0026quot;response_type\u0026quot;: \u0026quot;in_channel\u0026quot;, \u0026quot;text\u0026quot;: responseText, \u0026quot;mrkdwn\u0026quot;: true, } return responseData, nil }  There are a couple of things to note in this code:\n Custom Event Type\n The inbound Slack POST request is application/x-www-form-urlencoded data. This data is unmarshalled into the same spartaAWSEvent.APIGatewayRequest using a customized mapping template.  Response Formatting The lambda function extracts all Slack parameters and if defined, sends the text back with a bit of Slack Message Formatting:\n```go responseText := \u0026quot;Here's what I understood\u0026quot; for eachKey, eachParam := range bodyParams { responseText += fmt.Sprintf(\u0026quot;\\n*%s*: %+v\u0026quot;, eachKey, eachParam) } ```  Custom Response\n The Slack API expects a JSON formatted response, which is created in step 4:\nresponseData := sparta.ArbitraryJSONObject{ \u0026quot;response_type\u0026quot;: \u0026quot;in_channel\u0026quot;, \u0026quot;text\u0026quot;: responseText, }    Create the API Gateway With our lambda function defined, we need to setup an API Gateway so that it\u0026rsquo;s publicly available:\napiStage := sparta.NewStage(\u0026quot;v1\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaSlackbot\u0026quot;, apiStage)  The apiStage value implies that we want to deploy this API Gateway Rest API as part of Sparta\u0026rsquo;s provision step.\nCreate Lambda Binding \u0026amp; Resource Next we create an sparta.LambdaAWSInfo struct that references the s3ItemInfo function:\nfunc spartaLambdaFunctions(api *sparta.API) []*sparta.LambdaAWSInfo { var lambdaFunctions []*sparta.LambdaAWSInfo lambdaFn := sparta.HandleAWSLambda(sparta.LambdaName(helloSlackbot), helloSlackbot, iamDynamicRole) if nil != api { apiGatewayResource, _ := api.NewResource(\u0026quot;/slack\u0026quot;, lambdaFn) _, err := apiGatewayResource.NewMethod(\u0026quot;POST\u0026quot;, http.StatusCreated) if nil != err { panic(\u0026quot;Failed to create /hello resource\u0026quot;) } } return append(lambdaFunctions, lambdaFn) }  A few items to note here:\n We\u0026rsquo;re using an empty sparta.IAMRoleDefinition{} definition because our go lambda function doesn\u0026rsquo;t access any additional AWS services. Our lambda function will be accessible at the /slack child path of the deployed API Gateway instance Slack supports both GET and POST integration types, but we\u0026rsquo;re limiting our lambda function to POST only  Provision With everything configured, we then configure our main() function to forward to Sparta:\nfunc main() { // Register the function with the API Gateway apiStage := sparta.NewStage(\u0026quot;v1\u0026quot;) apiGateway := sparta.NewAPIGateway(\u0026quot;SpartaSlackbot\u0026quot;, apiStage) // Deploy it sparta.Main(\u0026quot;SpartaSlackbot\u0026quot;, fmt.Sprintf(\u0026quot;Sparta app that responds to Slack commands\u0026quot;), spartaLambdaFunctions(apiGateway), apiGateway, nil) }  and provision the service:\nS3_BUCKET=\u0026lt;MY_S3_BUCKETNAME\u0026gt; go run slack.go --level info provision ``` Look for the _Stack output_ section of the log, you\u0026#39;ll need the **APIGatewayURL** value to configure Slack in the next step. \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-nohighlight\u0026#34; data-lang=\u0026#34;nohighlight\u0026#34;\u0026gt;INFO[0083] Stack output Description=API Gateway URL Key=APIGatewayURL Value=https://75mtsly44i.execute-api.us-west-2.amazonaws.com/v1 INFO[0083] Stack output Description=Sparta Home Key=SpartaHome Value=https://github.com/mweagle/Sparta INFO[0083] Stack output Description=Sparta Version Key=SpartaVersion Value=0.1.3 ``` # Configure Slack At this point our lambda function is deployed and is available through the API Gateway (_https://75mtsly44i.execute-api.us-west-2.amazonaws.com/v1/slack_ in the current example). The next step is to configure Slack with this custom integration: 1. Visit https://slack.com/apps/build and choose the \u0026amp;#34;Custom Integration\u0026amp;#34; option: ![Custom integration](/images/apigateway/slack/customIntegration.jpg) 1. On the next page, choose \u0026amp;#34;Slash Commands\u0026amp;#34;: ![Slash Commands](/images/apigateway/slack/slashCommandMenu.jpg) 1. The next screen is where you input the command that will trigger your lambda function. Enter `/sparta` ![Slash Chose Command](/images/apigateway/slack/chooseCommand.jpg) - and click the \u0026amp;#34;Add Slash Command Integration\u0026amp;#34; button. 1. Finally, scroll down the next page to the **Integration Settings** section and provide the API Gateway URL of your lambda function. ![Slash URL](/images/apigateway/slack/integrationSettings.jpg) * Leave the _Method_ field unchanged (it should be `POST`), to match how we configured the API Gateway entry above. 1. Save it ![Save it](/images/apigateway/slack/saveIntegration.jpg) There are additional Slash Command Integration options, but for this example the **URL** option is sufficient to trigger our command. # Test With everything configured, visit your team\u0026amp;#39;s Slack room and verify the integration via `/sparta` slash command: ![Sparta Response](/images/apigateway/slack/slackResponse.jpg) # Cleaning Up Before moving on, remember to decommission the service via: \u0026amp;lt;div class=\u0026amp;#34;highlight\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;pre style=\u0026amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;code class=\u0026amp;#34;language-nohighlight\u0026amp;#34; data-lang=\u0026amp;#34;nohighlight\u0026amp;#34;\u0026amp;gt;go run slack.go delete ``` # Wrapping Up This example provides a good overview of Sparta \u0026amp;amp;amp; Slack integration, including how to handle external requests that are not `application/json` formatted.\u0026amp;lt;/code\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/reference/step_functions/",
	"title": "Step Functions",
	"tags": [],
	"description": "",
	"content": " Introduction AWS Step Functions are a powerful way to express long-running, complex workflows comprised of Lambda functions. With Sparta 0.20.2, you can build a State Machine as part of your application. This section walks through the three steps necessary to provision a sample \u0026ldquo;Roll Die\u0026rdquo; state machine using a single Lambda function. See SpartaStep for the full source.\nLambda Functions The first step is to define the core Lambda function Task that will be our Step function\u0026rsquo;s core logic. In this example, we\u0026rsquo;ll define a rollDie function:\ntype lambdaRollResponse struct { Roll int `json:\u0026quot;roll\u0026quot;` } // Standard AWS λ function func lambdaRollDie(ctx context.Context) (lambdaRollResponse, error) { return lambdaRollResponse{ Roll: rand.Intn(5) + 1, }, nil }  State Machine Our state machine is simple: we want to keep rolling the die until we get a \u0026ldquo;good\u0026rdquo; result, with a delay in between rolls:\nTo do this, we use the new github.com/mweagle/Sparta/aws/step functions to define the other states.\n// Make all the Step states lambdaTaskState := step.NewTaskState(\u0026quot;lambdaRollDie\u0026quot;, lambdaFn) successState := step.NewSuccessState(\u0026quot;success\u0026quot;) delayState := step.NewWaitDelayState(\u0026quot;tryAgainShortly\u0026quot;, 3*time.Second) lambdaChoices := []step.ChoiceBranch{ \u0026amp;step.Not{ Comparison: \u0026amp;step.NumericGreaterThan{ Variable: \u0026quot;$.roll\u0026quot;, Value: 3, }, Next: delayState, }, } choiceState := step.NewChoiceState(\u0026quot;checkRoll\u0026quot;, lambdaChoices...). WithDefault(successState)  The Sparta state types correspond to their AWS States Spec equivalents:\n successState : SucceedState delayState : a specialized WaitState choiceState: ChoiceState  The choiceState is the most interesting state: based on the JSON response of the lambdaRollDie, it will either transition to a delay or the success end state.\nSee godoc for the complete set of types.\nThe lambdaTaskState uses a normal Sparta function as in:\nlambdaFn := sparta.HandleAWSLambda(\u0026quot;StepRollDie\u0026quot;, lambdaRollDie, sparta.IAMRoleDefinition{}) lambdaFn.Options.MemorySize = 128 lambdaFn.Options.Tags = map[string]string{ \u0026quot;myAccounting\u0026quot;: \u0026quot;tag\u0026quot;, }  The final step is to hook up the state transitions for states that don\u0026rsquo;t implicitly include them, and create the State Machine:\n// Hook up the transitions lambdaTaskState.Next(choiceState) delayState.Next(lambdaTaskState) // Startup the machine with a user-scoped name for account uniqueness stateMachineName := spartaCF.UserScopedStackName(\u0026quot;StateMachine\u0026quot;) startMachine := step.NewStateMachine(stateMachineName, lambdaTaskState)  At this point we have a potentially well-formed Lambda-powered State Machine. The final step is to attach this machine to the normal service definition.\nService Decorator The return type from step.NewStateMachine(...) is a *step.StateMachine instance that exposes a ServiceDecoratorHook. Adding the hook to your service\u0026rsquo;s Workflow Hooks (similar to provisioning a service-scoped CloudWatch Dashboard) will include it in the CloudFormation template serialization:\n// Setup the hook to annotate workflowHooks := \u0026amp;sparta.WorkflowHooks{ ServiceDecorator: startMachine.StateMachineDecorator(), } userStackName := spartaCF.UserScopedStackName(\u0026quot;SpartaStep\u0026quot;) err := sparta.MainEx(userStackName, \u0026quot;Simple Sparta application that demonstrates AWS Step functions\u0026quot;, lambdaFunctions, nil, nil, workflowHooks, false)  With the decorator attached, the next service provision request will include the state machine as above.\n$ go run main.go provision --s3Bucket weagle INFO[0000] ════════════════════════════════════════════════ INFO[0000] ╔═╗┌─┐┌─┐┬─┐┌┬┐┌─┐ Version : 1.0.2 INFO[0000] ╚═╗├─┘├─┤├┬┘ │ ├─┤ SHA : b37b93e INFO[0000] ╚═╝┴ ┴ ┴┴└─ ┴ ┴ ┴ Go : go1.9.2 INFO[0000] ════════════════════════════════════════════════ INFO[0000] Service: SpartaStep-mweagle LinkFlags= Option=provision UTC=\u0026#34;2018-01-29T14:33:36Z\u0026#34; INFO[0000] ════════════════════════════════════════════════ INFO[0000] Provisioning service BuildID=f7ade93d3900ab4b01c468c1723dedac24cbfa93 CodePipelineTrigger= InPlaceUpdates=false NOOP=false Tags= INFO[0000] Verifying IAM Lambda execution roles INFO[0000] IAM roles verified Count=1 INFO[0000] Checking S3 versioning Bucket=weagle VersioningEnabled=true INFO[0000] Checking S3 region Bucket=weagle Region=us-west-2 INFO[0000] Running `go generate` INFO[0000] Compiling binary Name=Sparta.lambda.amd64 INFO[0010] Creating code ZIP archive for upload TempName=./.sparta/SpartaStep_mweagle-code.zip INFO[0010] Lambda code archive size Size=\u0026#34;13 MB\u0026#34; INFO[0010] Uploading local file to S3 Bucket=weagle Key=SpartaStep-mweagle/SpartaStep_mweagle-code.zip Path=./.sparta/SpartaStep_mweagle-code.zip Size=\u0026#34;13 MB\u0026#34; INFO[0020] Calling WorkflowHook ServiceDecoratorHook=\u0026#34;github.com/mweagle/Sparta/aws/step.(*StateMachine).StateMachineDecorator.func1\u0026#34; WorkflowHookContext=\u0026#34;map[]\u0026#34; INFO[0020] Uploading local file to S3 Bucket=weagle Key=SpartaStep-mweagle/SpartaStep_mweagle-cftemplate.json Path=./.sparta/SpartaStep_mweagle-cftemplate.json Size=\u0026#34;3.7 kB\u0026#34; INFO[0021] Creating stack StackID=\u0026#34;arn:aws:cloudformation:us-west-2:123412341234:stack/SpartaStep-mweagle/6ff65180-0501-11e8-935b-50a68d01a629\u0026#34; INFO[0094] CloudFormation provisioning metrics: INFO[0094] Operation duration Duration=54.73s Resource=SpartaStep-mweagle Type=\u0026#34;AWS::CloudFormation::Stack\u0026#34; INFO[0094] Operation duration Duration=19.02s Resource=IAMRole49969e8a894b9eeea02a4936fb9519f2bd67dbe6 Type=\u0026#34;AWS::IAM::Role\u0026#34; INFO[0094] Operation duration Duration=18.69s Resource=StatesIAMRolee00aa3484b0397c676887af695abfd160104318a Type=\u0026#34;AWS::IAM::Role\u0026#34; INFO[0094] Operation duration Duration=2.60s Resource=StateMachine59f153f18068faa0b7fb588350be79df422ba5ef Type=\u0026#34;AWS::StepFunctions::StateMachine\u0026#34; INFO[0094] Operation duration Duration=2.28s Resource=StepRollDieLambda7d9f8ab476995f16b91b154f68e5f5cc42601ebf Type=\u0026#34;AWS::Lambda::Function\u0026#34; INFO[0094] Stack provisioned CreationTime=\u0026#34;2018-01-29 14:33:56.7 +0000 UTC\u0026#34; StackId=\u0026#34;arn:aws:cloudformation:us-west-2:123412341234:stack/SpartaStep-mweagle/6ff65180-0501-11e8-935b-50a68d01a629\u0026#34; StackName=SpartaStep-mweagle INFO[0094] ════════════════════════════════════════════════ INFO[0094] SpartaStep-mweagle Summary INFO[0094] ════════════════════════════════════════════════ INFO[0094] Verifying IAM roles Duration (s)=0 INFO[0094] Verifying AWS preconditions Duration (s)=0 INFO[0094] Creating code bundle Duration (s)=10 INFO[0094] Uploading code Duration (s)=10 INFO[0094] Ensuring CloudFormation stack Duration (s)=73 INFO[0094] Total elapsed time Duration (s)=94 ``` ### Testing With the stack provisioned, the final step is to test the State Machine and see how lucky our die roll is. Navigate to the **Step Functions** service dashboard in the AWS Console and find the State Machine that was provisioned. Click the **New Execution** button and accept the default JSON. This sample state machine doesn\u0026#39;t interrogate the incoming data so the initial JSON is effectively ignored. For this test the first roll was a `4`, so there was only 1 path through the state machine. Depending on your die roll, you may see different state machine paths through the `WaitState`. ![State Machine](/images/step_functions/step_execution.jpg) ## Wrapping Up AWS Step Functions are a powerful tool that allows you to orchestrate long running workflows using AWS Lambda. State functions are useful to implement the Saga pattern as in [here](http://theburningmonk.com/2017/07/applying-the-saga-pattern-with-aws-lambda-and-step-functions/) and [here](https://read.acloud.guru/how-the-saga-pattern-manages-failures-with-aws-lambda-and-step-functions-bc8f7129f900). They can also be used to compose Lambda functions into more complex workflows that include [parallel](https://states-language.net/spec.html#parallel-state) operations on shared data. # Notes * Minimal State machine validation is done at this time. See [Tim Bray](https://www.tbray.org/ongoing/When/201x/2016/12/01/J2119-Validator) for more information. * Value interrogation is defined by [JSONPath](http://goessner.net/articles/JsonPath/) expressions "
},
{
	"uri": "/reference/",
	"title": "Reference",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/related_projects/",
	"title": "Related Projects",
	"tags": [],
	"description": "",
	"content": " In addition to Sparta, there are some related projects that are often useful for serverless-based applications. These packages do not require Sparta integration.\ngo-cloudcondensor go-cloudcondensor is a standalone utility that produces CloudFormation templates via functional composition.\ngo-cloudformation go-cloudformation provides a Go object model for the official CloudFormation JSON Schema.\nSparta Vault Use KMS to encrypt values into Go types that can be safely committed to source control.\nssm-cache An in memory, expiring cache for AWS Systems Manager. SSM is a suggested option for managing Lambda secrets.\nExamples There are also many Sparta example repos that demonstrate core concepts.\n"
},
{
	"uri": "/presentations/",
	"title": "Presentations",
	"tags": [],
	"description": "",
	"content": " Slides  Getting Started - February Overview - October 2017  Image courtesy of Ashley McNamara\n"
},
{
	"uri": "/reference/limitations/",
	"title": "Limitations",
	"tags": [],
	"description": "",
	"content": " AWS Lambda Limitations  Lambda is not yet globally available. Please view the Global Infrastructure page for the latest deployment status. There are Lambda Limits that may affect your development It\u0026rsquo;s not possible to dynamically set HTTP response headers based on the Lambda response body:  https://forums.aws.amazon.com/thread.jspa?threadID=203889 https://forums.aws.amazon.com/thread.jspa?threadID=210826  Similarly, it\u0026rsquo;s not possible to set proper error response bodies.  "
},
{
	"uri": "/reference/faq/",
	"title": "FAQ",
	"tags": [],
	"description": "",
	"content": " CloudFormation How do I create dynamic resource ARNs? Linking AWS resources together often requires creating dynamic ARN references. This can be achieved by using cloudformation.Join expressions.\nFor instance:\nimport ( gocf \u0026quot;github.com/mweagle/go-cloudformation\u0026quot; ) s3SiteBucketAllKeysResourceValue := gocf.Join(\u0026quot;\u0026quot;, gocf.String(\u0026quot;arn:aws:s3:::\u0026quot;), gocf.Ref(s3BucketResourceName), gocf.String(\u0026quot;/*\u0026quot;))  import ( gocf \u0026quot;github.com/mweagle/go-cloudformation\u0026quot; ) AuthorizerURI: gocf.Join(\u0026quot;\u0026quot;, gocf.String(\u0026quot;arn:aws:apigateway:\u0026quot;), gocf.Ref(\u0026quot;AWS::Region\u0026quot;).String(), gocf.String(\u0026quot;:lambda:path/2015-03-31/functions/\u0026quot;), gocf.GetAtt(myAWSLambdaInfo.LogicalResourceName(), \u0026quot;Arn\u0026quot;), gocf.String(\u0026quot;/invocations\u0026quot;)),  See the CloudFormation Fn::GetAtt docs for the set of attributes created by each resource. CloudFormation pseudo-paramters can be included in dynamic expresssions via gocf.Ref expressions. For instance:\ngocf.Ref(\u0026quot;AWS::Region\u0026quot;) gocf.Ref(\u0026quot;AWS::AccountId\u0026quot;) gocf.Ref(\u0026quot;AWS::StackId\u0026quot;) gocf.Ref(\u0026quot;AWS::StackName\u0026quot;)  Development How do I configure AWS SDK settings? Sparta relies on standard AWS SDK configuration settings. See the official documentation for more information.\nDuring development, configuration is typically done through environment variables:\n AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_REGION  What are the Minimum IAM Priviliges for Sparta developers? The absolute minimum set of privileges an account needs is the following IAM Policy:\n{ \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1505975332000\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;cloudformation:DescribeStacks\u0026#34;, \u0026#34;cloudformation:CreateStack\u0026#34;, \u0026#34;cloudformation:CreateChangeSet\u0026#34;, \u0026#34;cloudformation:DescribeChangeSet\u0026#34;, \u0026#34;cloudformation:ExecuteChangeSet\u0026#34;, \u0026#34;cloudformation:DeleteChangeSet\u0026#34;, \u0026#34;cloudformation:DeleteStack\u0026#34;, \u0026#34;iam:GetRole\u0026#34;, \u0026#34;iam:DeleteRole\u0026#34;, \u0026#34;iam:DeleteRolePolicy\u0026#34;, \u0026#34;iam:PutRolePolicy\u0026#34; ], \u0026#34;Resource\u0026#34;: [ \u0026#34;*\u0026#34; ] }, { \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1505975332000\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;s3:PutObject\u0026#34;, \u0026#34;s3:GetBucketVersioning\u0026#34;, \u0026#34;s3:DeleteObject\u0026#34; ], \u0026#34;Resource\u0026#34;: [ \u0026#34;arn:aws:s3:::PROVISION_TARGET_BUCKETNAME\u0026#34; ] } ] } ``` This set of privileges should be sufficient to deploy a Sparta application similar to [SpartaHelloWorld](https://github.com/mweagle/SpartaHelloWorld). Additional privileges may be required to enable different datasources. You can view the exact set of AWS API calls by enabling `--level debug` log verbosity. This log level includes all AWS API calls starting with release [0.20.0](https://github.com/mweagle/Sparta/blob/master/CHANGES.md#v0200). ### What are the minimum IAM privileges to provision a Sparta app and API Gateway Your AWS user must have the following privileges. Ensure to update the `YOUR_S3_BUCKETNAME_HERE` value with your own S3 bucket name. \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;pre style=\u0026#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-json\u0026#34; data-lang=\u0026#34;json\u0026#34;\u0026gt;{ \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Version\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;2012-10-17\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Statement\u0026amp;#34;\u0026lt;/span\u0026gt;: [ { \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Sid\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;VisualEditor0\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Effect\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Allow\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Action\u0026amp;#34;\u0026lt;/span\u0026gt;: [ \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:CreateChangeSet\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:DeleteChangeSet\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:DescribeStacks\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:DescribeStackEvents\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:CreateStack\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:DeleteStack\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:DescribeChangeSet\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;cloudformation:ExecuteChangeSet\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;iam:GetRole\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;iam:DeleteRole\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;iam:CreateRole\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;iam:PutRolePolicy\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;iam:PassRole\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;iam:DeleteRolePolicy\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;lambda:CreateFunction\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;lambda:GetFunction\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;lambda:GetFunctionConfiguration\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;lambda:AddPermission\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;lambda:DeleteFunction\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;lambda:RemovePermission\u0026amp;#34;\u0026lt;/span\u0026gt; ], \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Resource\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;*\u0026amp;#34;\u0026lt;/span\u0026gt; }, { \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Sid\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;VisualEditor1\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Effect\u0026amp;#34;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;Allow\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Action\u0026amp;#34;\u0026lt;/span\u0026gt;: [ \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;apigateway:DELETE\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;apigateway:PUT\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;apigateway:PATCH\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;apigateway:POST\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;apigateway:GET\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;s3:PutObject\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;s3:GetObject\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;s3:GetBucketVersioning\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;s3:DeleteObject\u0026amp;#34;\u0026lt;/span\u0026gt; ], \u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;Resource\u0026amp;#34;\u0026lt;/span\u0026gt;: [ \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;arn:aws:apigateway:*::*\u0026amp;#34;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;arn:aws:s3:::\u0026amp;lt;YOUR_S3_BUCKETNAME_HERE\u0026amp;gt;\u0026amp;#34;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;arn:aws:s3:::\u0026amp;lt;YOUR_S3_BUCKETNAME_HERE\u0026amp;gt;/*\u0026amp;#34;\u0026lt;/span\u0026gt; ] } ] } \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;What\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;flags\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;are\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;defined\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;during\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AMI\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;compilation?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;*\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;**TAGS**:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`-tags\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;lambdabinary`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;*\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;**ENVIRONMENT**:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`GOOS=linux\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;GOARCH=amd\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;64\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;What\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;working\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;directory\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;should\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;use?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;working\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;directory\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;should\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;be\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;root\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;application.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Eg,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;use\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;```go\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;go\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;run\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;main.go\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provision\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;--level\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;info\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;--s\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Bucket\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;$S\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_BUCKET\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;rather\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;than\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;```go\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;go\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;run\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;./some/child/path/main.go\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provision\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;--level\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;info\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;--s\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Bucket\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;$S\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_BUCKET\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;See\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;GitHub\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://github.com/mweagle/Sparta/issues/\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;29\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;more\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;details.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;make\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`provision`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;faster?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Starting\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;v\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0.11\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;.\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;2\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://github.com/mweagle/Sparta/blob/master/CHANGES.md#v\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0112\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;),\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;you\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;supply\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;an\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;optional\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_--inplace_\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;argument\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`provision`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;command.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;If\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;this\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;set\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;when\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provisioning\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;updates\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;an\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;existing\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;stack,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;application\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;will\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;verify\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;that\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;*only*\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;updates\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudFormation\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;stack\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;are\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;code-level\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;updates.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;If\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;only\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;code\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;updates\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;are\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;detected,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;application\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;will\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;parallelize\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;UpdateFunctionCode\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#Lambda.UpdateFunctionCode)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;API\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;calls\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;directly\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;update\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;application\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;code.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Whether\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_--inplace_\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;valid\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;based\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;on\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;evaluating\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;ChangeSet\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;results\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;requested\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;update\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;operation.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;*NOTE*:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;The\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_inplace_\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;argument\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;implies\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;that\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;service\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;state\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;not\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;reflected\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;in\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudFormation.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;##\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Event\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sources\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;-\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SES\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;hr\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;/\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Where\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;does\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_SpartaRuleSet_\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;come\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;from?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SES\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;only\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;permits\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;single\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;active\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;receipt\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;rule\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(http://docs.aws.amazon.com/ses/latest/APIReference/API_SetActiveReceiptRuleSet.html).\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Additionally,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;it\u0026amp;#39;s\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;possible\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;that\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;multiple\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta-based\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;services\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;are\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;handing\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;different\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SES\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;recipients.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;All\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta-based\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;services\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;share\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_SpartaRuleSet_\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SES\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;ruleset,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;and\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;uniquely\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;identify\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;their\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Rules\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;by\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;including\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;current\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;servicename\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;as\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;part\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SES\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;ReceiptRule\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(http://docs.aws.amazon.com/ses/latest/APIReference/API_CreateReceiptRule.html).\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Why\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;does\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`provision`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;not\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;always\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;enable\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_SpartaRuleSet_?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Initial\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;_SpartaRuleSet_\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;will\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;make\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;it\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;active\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;ruleset,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;but\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;assumes\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;that\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;manual\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;updates\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;made\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;outside\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;context\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;framework\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;were\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;done\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;good\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;reason\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;and\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;doesn\u0026amp;#39;t\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;attempt\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;override\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;user\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;setting.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;##\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Operations\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;hr\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;/\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provision\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;service\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;dashboard?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;v\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0.13\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;.\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://github.com/mweagle/Sparta/blob/master/CHANGES.md#v\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;0130\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;adds\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;support\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provisioning\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Dashboard\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;that\u0026amp;#39;s\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;dynamically\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;created\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;based\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;on\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;service\u0026amp;#39;s\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;topology.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;The\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;dashboard\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;attached\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;standard\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;workflow\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;via\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;WorkflowHook\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/mweagle/Sparta#WorkflowHook)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;as\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;in:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;div\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;class=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;highlight\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;lt;pre\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;lt;code\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;class=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;language-golang\u0026amp;#34;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;data-lang=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;golang\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;//\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Setup\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;DashboardDecorator\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;lambda\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;hook\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;workflowHooks\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;:=\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;amp;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;sparta\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;WorkflowHooks\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{ \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;ServiceDecorator\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;sparta\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;DashboardDecorator\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaFunctions\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#ae81ff\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;60\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, } \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;See\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SpartaXRay\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://github.com/mweagle/SpartaXRay)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;project\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;complete\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;example\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provisioning\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;dashboard\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;as\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;below:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;!\u0026lt;/span\u0026gt;[\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatchDashboard\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(/images/faq/CloudWatchDashboard.jpg)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;monitor\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;my\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Lambda\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;function?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;If\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;you\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;plan\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;on\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;using\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Lambdas\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;in\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;production,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;you\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;39\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;ll\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;probably\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;want\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;be\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;made\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;aware\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;any\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;excessive\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;errors.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;You\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;easily\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;do\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;this\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;by\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;adding\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;alarm\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Lambda,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;in\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;decorator\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;method.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;This\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;example\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;will\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;push\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;notification\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;an\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SNS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;topic,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;and\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;you\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;configure\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;whatever\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;action\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;appropriate\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;from\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;there.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;```\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;go\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;func\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaDecorator\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;serviceName\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;string\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaResourceName\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;string\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaResource\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;LambdaFunction\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;resourceMetadata\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;map\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;[\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;string\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;interface\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{}\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;S\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Bucket\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;string\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;S\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Key\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;string\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;buildID\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;string\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;cfTemplate\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;*\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Template\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;context\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;map\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;[\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;string\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;interface\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{}\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;logger\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;*\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;logrus\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Logger\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;error\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; { \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;//\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;setup\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;alarm\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;\t\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;var\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;alarmDimensions\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;CloudWatchMetricDimensionList\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;alarmDimension\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt;:\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;CloudWatchMetricDimension\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Name\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;FunctionName\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Value\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Ref\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaResourceName\u0026amp;lt;/span\u0026amp;gt;).\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;()\u0026lt;/span\u0026gt;} \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;alarmDimensions\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;=\u0026lt;/span\u0026gt; []\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;CloudWatchMetricDimension\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;alarmDimension\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;} \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaErrorsAlarm\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt;:\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;=\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;amp;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;CloudWatchAlarm\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{ \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;ActionsEnabled\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Bool\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#66d9ef\u0026#34;\u0026gt;true\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;AlarmActions\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;StringList\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;arn\u0026lt;/span\u0026gt;:\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;aws\u0026lt;/span\u0026gt;:\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;sns\u0026lt;/span\u0026gt;:\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;us-east\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;-1\u0026lt;/span\u0026gt;:\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;123456789\u0026lt;/span\u0026gt;:\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;SNSToNotifyMe\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;))\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;AlarmName\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;LambdaErrorAlarm\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;ComparisonOperator\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;GreaterThanOrEqualToThreshold\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Dimensions\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;amp;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;alarmDimensions\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;EvaluationPeriods\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;1\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Period\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;300\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;MetricName\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;Errors\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Namespace\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;AWS/Lambda\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Statistic\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;Sum\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Threshold\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;3.0\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Unit\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;Count\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, } \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;cfTemplate\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;AddResource\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;LambdaErrorAlaram\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaErrorsAlarm\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;return\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;nil\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; } \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Where\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;view\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;my\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;function\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;39\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;s\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;*\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;logger\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;output?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Each\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;lambda\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;function\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;includes\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;privileges\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;write\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Logs\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://console.aws.amazon.com/cloudwatch/home).\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;The\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;*\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;logrus\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;logger\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;output\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;written\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;brief\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;delay)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;lambda-specific\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;log\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;group.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;The\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;log\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;group\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;name\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;includes\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;sanitized\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;version\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;**go**\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;function\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;name\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;amp;amp;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;owning\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;service\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;name.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Where\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;view\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;39\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;s\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;golang\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;spawn\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;metrics?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Visit\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Metrics\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://aws.amazon.com/cloudwatch/)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;console\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;page\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;and\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;select\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Sparta\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;/\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;SERVICE_NAME\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;}\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;namespace:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;!\u0026lt;/span\u0026gt;[\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(/images/faq/CloudWatch_Management_Console.jpg)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;publishes\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;two\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;counters:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;*\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;ProcessSpawned\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;A\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;new\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;**go**\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;process\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;was\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;spawned\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;handle\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;requests\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;*\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;ProcessReused\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;An\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;existing\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;**go**\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;process\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;was\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;used\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;handle\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;requests.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;See\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;also\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;discussion\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;on\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Lambda\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;container\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;reuse\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://aws.amazon.com/blogs/compute/container-reuse-in-lambda/).\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;include\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;additional\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;resources\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;as\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;part\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;my\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;application?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Define\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;TemplateDecorator\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/mweagle/Sparta#TemplateDecorator)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;function\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;and\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;annotate\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;*\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Template\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;additional\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;resources.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;For\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;more\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;flexibility,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;use\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;WorkflowHook\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/mweagle/Sparta#WorkflowHooks).\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provide\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;environment\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;variables\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;lambda\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;functions?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;uses\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;conditional\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;compilation\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;rather\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;than\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;environment\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;variables.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;See\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Managing\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Environments\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(/reference/application/environments/)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;more\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;information.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Does\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Sparta\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;support\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Versioning\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;amp;amp;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Aliasing?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Yes.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Define\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;TemplateDecorator\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/mweagle/Sparta#TemplateDecorator)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;function\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;and\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;annotate\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;*\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Template\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;an\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AutoIncrementingLambdaVersionInfo\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/mweagle/Sparta/aws/cloudformation#AutoIncrementingLambdaVersionInfo)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;resource.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;During\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;each\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;provision\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;operation,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;AutoIncrementingLambdaVersionInfo\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;resource\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;will\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;dynamically\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;update\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudFormation\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;template\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;new\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;version.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;```\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;go\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;autoIncrementingInfo\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;autoIncrementingInfoErr\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;:=\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;spartaCF\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;AddAutoIncrementingLambdaVersionResource\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;serviceName\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaResourceName\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;cfTemplate\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;logger\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;You\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;also\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;move\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;alias\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;pointer\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;by\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;referencing\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;one\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;or\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;more\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;versions\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;available\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;in\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;returned\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;struct.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;For\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;example,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;set\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;alias\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;pointer\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;most\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;recent\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;version:\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;```\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;go\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;//\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Add\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;an\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;alias\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;version\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;we\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;39\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;re\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;publishing\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;as\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;part\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;this\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`provision`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;operation\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;aliasResourceName\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;:=\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;sparta\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;CloudFormationResourceName\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;Alias\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaResourceName\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;aliasResource\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;:=\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;amp;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;LambdaAlias\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;{ \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Name\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;MostRecentVersion\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;FunctionName\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Ref\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;lambdaResourceName\u0026amp;lt;/span\u0026amp;gt;).\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;()\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;FunctionVersion\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;: \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;GetAtt\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;autoIncrementingInfo\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;CurrentVersionResourceName\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#f92672\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;Version\u0026amp;amp;#\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#ae81ff\u0026#34;\u0026gt;34\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;;\u0026amp;lt;/span\u0026amp;gt;).\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;String\u0026amp;lt;/span\u0026amp;gt;()\u0026lt;/span\u0026gt;, } \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;cfTemplate\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;AddResource\u0026amp;lt;/span\u0026amp;gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;aliasResourceName\u0026amp;lt;/span\u0026amp;gt;,\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;aliasResource\u0026amp;lt;/span\u0026amp;gt;)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;```\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;do\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;forward\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;additional\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;metrics?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Sparta-deployed\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Lambda\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;functions\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;always\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;operate\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudWatch\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Metrics\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;putMetric\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;privileges.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Your\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;lambda\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;code\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;call\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;putMetric\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;application-specific\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;data.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;do\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;setup\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;alerts\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;on\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;additional\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;metrics?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Define\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;TemplateDecorator\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/mweagle/Sparta#TemplateDecorator)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;function\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;and\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;annotate\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#f92672\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;*\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;gocf\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Template\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;with\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;needed\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS::CloudWatch::Alarm\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/crewjam/go-cloudformation#CloudWatchAlarm)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;values.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Use\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudFormationResourceName(prefix\u0026lt;/span\u0026gt;, \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;...parts)\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(https://godoc.org/github.com/mweagle/Sparta#CloudFormationResourceName)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;to\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;help\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;generate\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;unique\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;resource\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;names.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;###\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;How\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;can\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;determine\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;outputs\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;available\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;in\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;sparta.Discover()\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;dynamic\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;AWS\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;resources?\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#e6db74\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;The\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;list\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;of\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;registered\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;output\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;provider\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;types\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;is\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;defined\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;by\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;cloudformationTypeMapDiscoveryOutputs\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#960050;background-color:#1e0010\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;`\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;in\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;cloudformation_resources\u0026amp;lt;/span\u0026amp;gt;.\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#66d9ef\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;go\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;https\u0026amp;lt;/span\u0026amp;gt;:\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;//github.com/mweagle/Sparta/blob/master/cloudformation_resources.go).\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;See\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; [\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;CloudFormation\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Resource\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Types\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;Reference\u0026lt;/span\u0026gt;]\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;(http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;for\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;information\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;on\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;interpreting\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;the\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;values.\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#75715e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#960050;background-color:#1e0010\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;##\u0026amp;lt;/span\u0026amp;gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;lt;span\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;style=\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#e6db74\u0026#34;\u0026gt;\u0026amp;#34;color:#a6e22e\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;color:#960050;background-color:#1e0010\u0026#34;\u0026gt;\u0026amp;gt;Future\u0026amp;lt;/span\u0026amp;gt;\u0026amp;lt;/code\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;\u0026lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt; "
},
{
	"uri": "/credits/",
	"title": "Credits",
	"tags": [],
	"description": "Sparta contributors",
	"content": " Thanks! 🎉🙏  Kyle Anderson James Brook Ryan Brown sdbeard Scott Raine Nick Scheiblauer Paul Seiffert Thom Shutt Patrick Steger  "
},
{
	"uri": "/meta/",
	"title": "_Meta",
	"tags": [],
	"description": "",
	"content": " Documentation contributions are most appreciated. The documentation is built using:\n Hugo Mage  Requirements  The Sparta repo Hugo v.0.49.1:\n$ hugo version Hugo Static Site Generator v0.49.1 darwin/amd64 BuildDate: 2018-10-10T10:36:40Z   Note that the required Hugo version will be automatically installed by the docs branch magefile.go.\nEditing  git checkout the docs branch go get -u -v github.com/magefile/mage mage InstallHugo mage -v edit  The last step will startup a server with the documentation made available at http://localhost:1313.\n$ mage -v edit Running target: Edit Visit http://localhost:1313 for latest documentation exec: .sparta/hugo server --disableFastRender --watch --enableGitInfo --forceSyncStatic --verbose config.toml INFO 2018/10/11 06:51:38 Using config file: /Users/mweagle/Documents/gopath111/src/github.com/mweagle/SpartaDOCUMENTATION/config.toml Building sites … INFO 2018/10/11 06:51:38 syncing static files to / #... Serving pages from memory Web Server is available at //localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop  To make changes to the documentation:\n Edit the /content subdirectory contents Push your /docs branch to GitHub and open a PR  Visit the Hugo Learn Theme site for complete documentation regarding shortcodes and included libraries.\n"
},
{
	"uri": "/reference/interceptors/",
	"title": "Limitations",
	"tags": [],
	"description": "",
	"content": "TODO: Document Interceptors\n"
},
{
	"uri": "/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " \nSelf-deploying go microservices for AWS Lambda Sparta is a framework that transforms a standard go application into a self-deploying AWS Lambda powered service. All configuration and infrastructure requirements are expressed as go types - no JSON or YAML needed!\nSample Application 1. Definition // File: application.go package main import ( sparta \u0026quot;github.com/mweagle/Sparta\u0026quot; ) //////////////////////////////////////////////////////////////////////////////// // Hello world event handler // func helloWorld() (string, error) { return \u0026quot;Hello World 🌏\u0026quot;, nil } //////////////////////////////////////////////////////////////////////////////// // Main func main() { var lambdaFunctions []*sparta.LambdaAWSInfo lambdaFn := sparta.HandleAWSLambda(\u0026quot;Hello world test\u0026quot;, helloWorld, sparta.IAMRoleDefinition{}) lambdaFunctions = append(lambdaFunctions, lambdaFn) // Delegate to Sparta sparta.Main(\u0026quot;SpartaHelloWorld\u0026quot;, \u0026quot;Simple Sparta application that creates a single AWS Lambda function\u0026quot;, lambdaFunctions, nil, nil) }  2. Deployment $ go run main.go provision --s3Bucket MY_S3_BUCKET [0000] INFO ════════════════════════════════════════════════ [0000] INFO ╔═╗┌─┐┌─┐┬─┐┌┬┐┌─┐ Version : 1.1.1 [0000] INFO ╚═╗├─┘├─┤├┬┘ │ ├─┤ SHA : beb5700 [0000] INFO ╚═╝┴ ┴ ┴┴└─ ┴ ┴ ┴ Go : go1.10 [0000] INFO ════════════════════════════════════════════════ [0000] INFO Service: SpartaHelloWorld LinkFlags= Option=provision UTC=2018-05-25T04:36:50Z [0000] INFO ════════════════════════════════════════════════ [0000] INFO Using `git` SHA for StampedBuildID Command=git rev-parse HEAD SHA=7ee3e1bc52f15c4a636e05061eaec7b748db22a9 [0000] INFO Provisioning service BuildID=7ee3e1bc52f15c4a636e05061eaec7b748db22a9 CodePipelineTrigger= InPlaceUpdates=false NOOP=false Tags= [0000] INFO Verifying IAM Lambda execution roles [0000] INFO IAM roles verified Count=1 [0000] INFO Checking S3 versioning Bucket=MY_S3_BUCKET VersioningEnabled=true [0000] INFO Checking S3 region Bucket=MY_S3_BUCKET Region=us-west-2 [0000] INFO Running `go generate` [0000] INFO Compiling binary Name=Sparta.lambda.amd64 [0001] INFO Creating code ZIP archive for upload TempName=./.sparta/SpartaHelloWorld-code.zip [0001] INFO Lambda code archive size Size=13 MB [0001] INFO Uploading local file to S3 Bucket=MY_S3_BUCKET Key=SpartaHelloWorld/SpartaHelloWorld-code.zip Path=./.sparta/SpartaHelloWorld-code.zip Size=13 MB [0011] INFO Uploading local file to S3 Bucket=MY_S3_BUCKET Key=SpartaHelloWorld/SpartaHelloWorld-cftemplate.json Path=./.sparta/SpartaHelloWorld-cftemplate.json Size=2.2 kB [0011] INFO Creating stack StackID=arn:aws:cloudformation:us-west-2:123412341234:stack/SpartaHelloWorld/44b426d0-5fd5-11e8-90cd-503f20f2ad82 [0039] INFO CloudFormation Metrics ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ [0039] INFO Operation duration Duration=24.49s Resource=SpartaHelloWorld Type=AWS::CloudFormation::Stack [0039] INFO Operation duration Duration=15.02s Resource=IAMRolebc3b888fab1664f42799785a6d9a3bb76ea63798 Type=AWS::IAM::Role [0039] INFO Operation duration Duration=2.90s Resource=HelloworldtestLambdaa4a9e95c84255c65c284ce95dd7d3c45776c1a68 Type=AWS::Lambda::Function [0039] INFO Stack provisioned CreationTime=2018-05-25 04:37:02.099 +0000 UTC StackId=arn:aws:cloudformation:us-west-2:123412341234:stack/SpartaHelloWorld/44b426d0-5fd5-11e8-90cd-503f20f2ad82 StackName=SpartaHelloWorld [0039] INFO ════════════════════════════════════════════════ [0039] INFO SpartaHelloWorld Summary [0039] INFO ════════════════════════════════════════════════ [0039] INFO Verifying IAM roles Duration (s)=0 [0039] INFO Verifying AWS preconditions Duration (s)=0 [0039] INFO Creating code bundle Duration (s)=1 [0039] INFO Uploading code Duration (s)=10 [0039] INFO Ensuring CloudFormation stack Duration (s)=28 [0039] INFO Total elapsed time Duration (s)=39 ``` ## 3. Invoke  ![Console GUI](/images/invoke.jpg \u0026#34;Invoke\u0026#34;) \u0026lt;hr /\u0026gt; # Features  \u0026lt;table style=\u0026#34;width:90%\u0026#34;\u0026gt; \u0026lt;!-- Row 1 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;width:50%\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Unified\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Use a \u0026lt;b\u0026gt;go\u0026lt;/b\u0026gt; monorepo to define and your microservice\u0026#39;s: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Application logic\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;AWS infrastructure\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Operational metrics\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Alert conditions\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Security policies\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;width:50%\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Complete AWS Ecosystem\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Sparta enables your lambda-based service to seamlessly integrate with the entire set of AWS lambda \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/lambda/latest/dg/intro-core-components.html\u0026#34;\u0026gt;event sources\u0026lt;/a\u0026gt; such as: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;DynamoDB\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;S3\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Kinesis\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;SNS\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;SES\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;CloudWatch Events\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;CloudWatch Logs\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; Additionally, your service may provision any other \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\u0026#34;\u0026gt;CloudFormation\u0026lt;/a\u0026gt; supported resource and even your own \u0026lt;a href=\u0026#34;http://gosparta.io/docs/custom_resources\u0026#34;\u0026gt;CustomResources\u0026lt;/a\u0026gt;. \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- Row 2 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;width:50%\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Security\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Define \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\u0026#34;\u0026gt;IAM Roles\u0026lt;/a\u0026gt; with limited privileges to minimize your service\u0026#39;s attack surface. Both string literal and ARN expressions are supported in order to reference dynamically created resources. Sparta treats \u0026lt;a href=\u0026#34;http://searchsecurity.techtarget.com/definition/principle-of-least-privilege-POLP\u0026#34;\u0026gt;POLA\u0026lt;/a\u0026gt; and \u0026lt;a href=\u0026#34;https://twitter.com/hashtag/secops\u0026#34;\u0026gt;#SecOps\u0026lt;/a\u0026gt; as first-class goals. \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;width:50%\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Discovery\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;A service may provision dynamic AWS infrastructure, and \u0026lt;a href=\u0026#34;http://gosparta.io/docs/eventsources\u0026#34;\u0026gt;discover\u0026lt;/a\u0026gt;, at lambda execution time, the dependent resources\u0026#39; AWS-assigned outputs (\u0026lt;code\u0026gt;Ref\u0026lt;/code\u0026gt; \u0026amp;amp; \u0026lt;code\u0026gt;Fn::Att\u0026lt;/code\u0026gt;). Eliminate hardcoded \u0026lt;i\u0026gt;Magic ARNs\u0026lt;/i\u0026gt; from your codebase and move towards \u0026lt;a href=\u0026#34;http://chadfowler.com/2013/06/23/immutable-deployments.html\u0026#34;\u0026gt;immutable infrastructure\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- Row 3 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;width:50%\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;API Gateway\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Make your service HTTPS accessible by binding it to an \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html\u0026#34;\u0026gt;API Gateway\u0026lt;/a\u0026gt; REST API during provisioning. As part of API Gateway creation, Sparta includes \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\u0026#34;\u0026gt;API Gateway Mapping Templates\u0026lt;/a\u0026gt; with all request data, including user-defined whitelisted parameters, so that you can focus on your core application logic.\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;width:50%\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Static Sites\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Include a \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\u0026#34;\u0026gt;CORS-enabled\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\u0026#34;\u0026gt;S3-backed site\u0026lt;/a\u0026gt; with your service. S3-backed sites include API Gateway discovery information for turnkey deployment.\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;a href=\u0026#34;https://cloudcraft.co/view/8571b3bc-76ef-48c1-8401-0b6ae1d36b4e?key=d44zi4j1pxj00000\u0026#34; rel=\u0026#34;Sparta Arch\u0026#34;\u0026gt;![Sparta Overview](/images/sparta_overview.png)\u0026lt;/a\u0026gt; Sparta relies on [CloudFormation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html) to deploy and update your application. For resources that CloudFormation does not yet support, it uses [Lambda-backed Custom Resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html) so that all service updates support both update and rollback semantics. Sparta\u0026#39;s automatically generated CloudFormation resources use content-based logical IDs whenever possible to preserve [service availability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) and minimize resource churn during updates. # Getting Started  To get started using Sparta, begin with the [Overview](/overview). # Administration  - Problems? Please open an [issue](https://github.com/mweagle/Sparta/issues/new) in GitHub. \u0026lt;br /\u0026gt; \u0026lt;img src=\u0026#34;/images/GopherInclusion.png\u0026#34; alt=\u0026#34;Eveyone Welcome\u0026#34; height=\u0026#34;256\u0026#34;\u0026gt; \u0026lt;center\u0026gt; \u0026lt;h6\u0026gt;Courtesy of \u0026lt;a href=\u0026#34;https://github.com/ashleymcnamara/gophers\u0026#34;\u0026gt;gophers\u0026lt;/a\u0026gt; \u0026lt;/h6\u0026gt; \u0026lt;/center\u0026gt; \u0026lt;br /\u0026gt; # Questions?  Get in touch via: - \u0026lt;i class=\u0026#34;fas fas-twitter\u0026#34;\u0026gt;\u0026amp;nbsp; @mweagle\u0026lt;/i\u0026gt; - \u0026lt;i class=\u0026#34;fas fas-slack\u0026#34;\u0026gt;\u0026amp;nbsp; Gophers: \u0026lt;a href=\u0026#34;https://gophers.slack.com/team/mweagle\u0026#34;\u0026gt;@mweagle\u0026lt;/a\u0026gt;\u0026lt;/i\u0026gt; - [Signup page](https://invite.slack.golangbridge.org/) - \u0026lt;i class=\u0026#34;fas fas-slack\u0026#34;\u0026gt;\u0026amp;nbsp; Serverless: \u0026lt;a href=\u0026#34;https://serverless-forum.slack.com/team/mweagle\u0026#34;\u0026gt;@mweagle\u0026lt;/a\u0026gt;\u0026lt;/i\u0026gt; - [Signup page](https://wt-serverless-seattle.run.webtask.io/serverless-forum-signup?webtask_no_cache=1) ## Related Projects  - [go-cloudcondensor](https://github.com/mweagle/go-cloudcondenser) - Define AWS CloudFormation templates in `go` - [go-cloudformation](https://github.com/mweagle/go-cloudformation) - `go` types for CloudFormation resources - [ssm-cache](https://github.com/mweagle/ssm-cache) - Lightweight cache for [Systems Manager Paramter Store](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html) values ## Other resources  * [Build an S3 website with API Gateway and AWS Lambda for Go using Sparta](https://medium.com/@mweagle/go-aws-lambda-building-an-html-website-with-api-gateway-and-lambda-for-go-using-sparta-5e6fe79f63ef) * [AWS blog post announcing Go support](https://aws.amazon.com/blogs/compute/announcing-go-support-for-aws-lambda/) * [Sparta - A Go framework for AWS Lambda](https://medium.com/@mweagle/a-go-framework-for-aws-lambda-ab14f0c42cb#.6gtlwe5vg) * Other libraries \u0026amp; frameworks: * [Serverless](https://github.com/serverless/serverless) * [PAWS](https://github.com/braahyan/PAWS) * [Apex](http://apex.run) * [lambda_proc](https://github.com/jasonmoo/lambda_proc) * [go-lambda](https://github.com/xlab/go-lambda) * [go-lambda (GRPC)](https://github.com/pilwon/go-lambda) * Supported AWS Lambda [programming models](http://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html) * [Serverless Code Blog](https://serverlesscode.com) * [AWS Serverless Multi-Tier Architectures Whitepaper](https://d0.awsstatic.com/whitepapers/AWS_Serverless_Multi-Tier_Architectures.pdf) * [Lambda limits](http://docs.aws.amazon.com/lambda/latest/dg/limits.html) * [The Twelve Days of Lambda](https://aws.amazon.com/blogs/compute/the-twelve-days-of-lambda/) * [CloudCraft](http://cloudcraft.co) is a great tool for AWS architecture diagrams "
},
{
	"uri": "/_footer/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]